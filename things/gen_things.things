
// ==========================================
// THIS FILE IS AUTO GENERATED
// Do not edit by hands
// Use this command to regenerate:
// python3 ./bin/codegen.py
// ==========================================


// Aldi light 1 (0x60a423fffe4b9138)
// Aldi LIGHTWAY smart home LED-lamp - filament (F122SB62H22A4.5W) / ?
Thing mqtt:topic:openhab:test_aldi_light_1 "Aldi light 1" (mqtt:broker:openhab) {
	Channels:
		Type switch : state [stateTopic="zigbee2mqtt/0x60a423fffe4b9138", transformationPattern="JSONPATH:$.state", commandTopic="zigbee2mqtt/0x60a423fffe4b9138/set", transformationPatternOut="JS:z2m-command-state.js"]
		Type dimmer : dim [stateTopic="zigbee2mqtt/0x60a423fffe4b9138", transformationPattern="JSONPATH:$.brightness", commandTopic="zigbee2mqtt/0x60a423fffe4b9138/set", transformationPatternOut="JS:z2m-command-brightness.js", min=1, max=255]
		Type dimmer : ct [stateTopic="zigbee2mqtt/0x60a423fffe4b9138", transformationPattern="JSONPATH:$.color_temp", commandTopic="zigbee2mqtt/0x60a423fffe4b9138/set", transformationPatternOut="JS:z2m-command-color_temp.js", min=150, max=500]
		Type number : link [stateTopic="zigbee2mqtt/0x60a423fffe4b9138", transformationPattern="REGEX:(.*linkquality.*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/0x60a423fffe4b9138", transformationPattern="REGEX:(.*update_available.*)∩JSONPATH:$.update_available", on="true", off="false"]
}

// Outside Climate (0x00158d0001c2cc22)
// Xiaomi MiJia temperature & humidity sensor (WSDCGQ01LM) / https://www.zigbee2mqtt.io/devices/WSDCGQ01LM.html
Thing mqtt:topic:openhab:ext_climate "Outside Climate" (mqtt:broker:openhab) {
	Channels:
		Type number : temperature [stateTopic="zigbee2mqtt/0x00158d0001c2cc22", transformationPattern="JS:z2m-temperature.js",unit="°C"]
		Type number : humidity [stateTopic="zigbee2mqtt/0x00158d0001c2cc22", transformationPattern="JSONPATH:$.humidity"]
		Type datetime : activity [stateTopic="zigbee2mqtt/0x00158d0001c2cc22", transformationPattern="JS:z2m-activity.js"]
		Type number : battery [stateTopic="zigbee2mqtt/0x00158d0001c2cc22", transformationPattern="REGEX:(.*battery.*)∩JSONPATH:$.battery"]
		Type switch : battery_low [stateTopic="zigbee2mqtt/0x00158d0001c2cc22", transformationPattern="REGEX:(.*battery.*)∩JS:z2m-lowbatt.js"]
		Type number : voltage [stateTopic="zigbee2mqtt/0x00158d0001c2cc22", transformationPattern="JS:z2m-batt-mv.js",unit="V"]
		Type number : link [stateTopic="zigbee2mqtt/0x00158d0001c2cc22", transformationPattern="REGEX:(.*linkquality.*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/0x00158d0001c2cc22", transformationPattern="REGEX:(.*update_available.*)∩JSONPATH:$.update_available", on="true", off="false"]
}

// Balkon light 1 (0xec1bbdfffe4695b5)
// IKEA TRADFRI LED bulb E26/E27 806 lumen, dimmable, warm white (LED1836G9) / https://www.zigbee2mqtt.io/devices/LED1836G9.html
Thing mqtt:topic:openhab:balkon_light_1 "Balkon light 1" (mqtt:broker:openhab) {
	Channels:
		Type switch : state [stateTopic="zigbee2mqtt/0xec1bbdfffe4695b5", transformationPattern="JSONPATH:$.state", commandTopic="zigbee2mqtt/0xec1bbdfffe4695b5/set", transformationPatternOut="JS:z2m-command-state.js"]
		Type dimmer : dim [stateTopic="zigbee2mqtt/0xec1bbdfffe4695b5", transformationPattern="JSONPATH:$.brightness", commandTopic="zigbee2mqtt/0xec1bbdfffe4695b5/set", transformationPatternOut="JS:z2m-command-brightness.js", min=1, max=255]
		Type number : link [stateTopic="zigbee2mqtt/0xec1bbdfffe4695b5", transformationPattern="REGEX:(.*linkquality.*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/0xec1bbdfffe4695b5", transformationPattern="REGEX:(.*update_available.*)∩JSONPATH:$.update_available", on="true", off="false"]
}

// Corridor main light ()
// Sonoff Mini Switch / https://templates.blakadder.com/sonoff_mini.html
Thing mqtt:topic:openhab:flur_light "Corridor main light" (mqtt:broker:openhab) {
	Channels:
		Type switch : POWER [stateTopic="stat/flur_light/RESULT", transformationPattern="JSONPATH:$.POWER", commandTopic="cmnd/flur_light/POWER", on="ON", off="OFF"]
		Type number : rssi [stateTopic="stat/flur_light/STATE", transformationPattern="JSONPATH:$.Wifi.RSSI"]
		Type string : bssid [stateTopic="stat/flur_light/STATE", transformationPattern="JSONPATH:$.Wifi.BSSId"]
		Type number : la [stateTopic="stat/flur_light/STATE", transformationPattern="JSONPATH:$.LoadAvg"]
}

// Mirror remote (0x680ae2fffeab6b80)
// IKEA TRADFRI remote control (E1524/E1810) / https://www.zigbee2mqtt.io/devices/E1524_E1810.html
Thing mqtt:topic:openhab:mirror_remote "Mirror remote" (mqtt:broker:openhab) {
	Channels:
		Type string : action [stateTopic="zigbee2mqtt/0x680ae2fffeab6b80", transformationPattern="JSONPATH:$.action", trigger=true]
		Type number : battery [stateTopic="zigbee2mqtt/0x680ae2fffeab6b80", transformationPattern="REGEX:(.*battery.*)∩JSONPATH:$.battery"]
		Type switch : battery_low [stateTopic="zigbee2mqtt/0x680ae2fffeab6b80", transformationPattern="REGEX:(.*battery.*)∩JS:z2m-lowbatt.js"]
		Type number : link [stateTopic="zigbee2mqtt/0x680ae2fffeab6b80", transformationPattern="REGEX:(.*linkquality.*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/0x680ae2fffeab6b80", transformationPattern="REGEX:(.*update_available.*)∩JSONPATH:$.update_available", on="true", off="false"]
}

// Leave switch (0x680ae2fffe16e111)
// IKEA TRADFRI ON/OFF switch (E1743) / https://www.zigbee2mqtt.io/devices/E1743.html
Thing mqtt:topic:openhab:eg_leave_switch "Leave switch" (mqtt:broker:openhab) {
	Channels:
		Type string : action [stateTopic="zigbee2mqtt/0x680ae2fffe16e111", transformationPattern="JSONPATH:$.action", trigger=true]
		Type number : battery [stateTopic="zigbee2mqtt/0x680ae2fffe16e111", transformationPattern="REGEX:(.*battery.*)∩JSONPATH:$.battery"]
		Type switch : battery_low [stateTopic="zigbee2mqtt/0x680ae2fffe16e111", transformationPattern="REGEX:(.*battery.*)∩JS:z2m-lowbatt.js"]
		Type number : link [stateTopic="zigbee2mqtt/0x680ae2fffe16e111", transformationPattern="REGEX:(.*linkquality.*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/0x680ae2fffe16e111", transformationPattern="REGEX:(.*update_available.*)∩JSONPATH:$.update_available", on="true", off="false"]
}

// EG Router (0x00124b000b4ed5cc)
// CC2530.ROUTER - Custom devices (DiY) / https://www.zigbee2mqtt.io/devices/CC2530.ROUTER.html
Thing mqtt:topic:openhab:eg_router "EG Router" (mqtt:broker:openhab) {
	Channels:
		Type number : link [stateTopic="zigbee2mqtt/0x00124b000b4ed5cc", transformationPattern="REGEX:(.*linkquality.*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/0x00124b000b4ed5cc", transformationPattern="REGEX:(.*update_available.*)∩JSONPATH:$.update_available", on="true", off="false"]
}

// NS Climate (0x00158d0001b95e08)
// Xiaomi Aqara temperature, humidity and pressure sensor (WSDCGQ11LM) / https://www.zigbee2mqtt.io/devices/WSDCGQ11LM.html
Thing mqtt:topic:openhab:ns_climate "NS Climate" (mqtt:broker:openhab) {
	Channels:
		Type number : temperature [stateTopic="zigbee2mqtt/0x00158d0001b95e08", transformationPattern="JS:z2m-temperature.js",unit="°C"]
		Type number : humidity [stateTopic="zigbee2mqtt/0x00158d0001b95e08", transformationPattern="JSONPATH:$.humidity"]
		Type number : pressure [stateTopic="zigbee2mqtt/0x00158d0001b95e08", transformationPattern="JSONPATH:$.pressure",unit="hPa"]
		Type datetime : activity [stateTopic="zigbee2mqtt/0x00158d0001b95e08", transformationPattern="JS:z2m-activity.js"]
		Type number : battery [stateTopic="zigbee2mqtt/0x00158d0001b95e08", transformationPattern="REGEX:(.*battery.*)∩JSONPATH:$.battery"]
		Type switch : battery_low [stateTopic="zigbee2mqtt/0x00158d0001b95e08", transformationPattern="REGEX:(.*battery.*)∩JS:z2m-lowbatt.js"]
		Type number : voltage [stateTopic="zigbee2mqtt/0x00158d0001b95e08", transformationPattern="JS:z2m-batt-mv.js",unit="V"]
		Type number : link [stateTopic="zigbee2mqtt/0x00158d0001b95e08", transformationPattern="REGEX:(.*linkquality.*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/0x00158d0001b95e08", transformationPattern="REGEX:(.*update_available.*)∩JSONPATH:$.update_available", on="true", off="false"]
}

// NS Power 2 (0x7cb03eaa0a093a8b)
// OSRAM Smart+ plug / https://www.zigbee2mqtt.io/devices/AB3257001NJ.html
Thing mqtt:topic:openhab:ns_power_2 "NS Power 2" (mqtt:broker:openhab) {
	Channels:
		Type switch : state [stateTopic="zigbee2mqtt/0x7cb03eaa0a093a8b", transformationPattern="JSONPATH:$.state", commandTopic="zigbee2mqtt/0x7cb03eaa0a093a8b/set", transformationPatternOut="JS:z2m-command-state.js"]
		Type number : link [stateTopic="zigbee2mqtt/0x7cb03eaa0a093a8b", transformationPattern="REGEX:(.*linkquality.*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/0x7cb03eaa0a093a8b", transformationPattern="REGEX:(.*update_available.*)∩JSONPATH:$.update_available", on="true", off="false"]
}

// NS Boost power (0x7cb03eaa0a0a1103)
// OSRAM Smart+ plug / https://www.zigbee2mqtt.io/devices/AB3257001NJ.html
Thing mqtt:topic:openhab:ns_heating_boost_power "NS Boost power" (mqtt:broker:openhab) {
	Channels:
		Type switch : state [stateTopic="zigbee2mqtt/0x7cb03eaa0a0a1103", transformationPattern="JSONPATH:$.state", commandTopic="zigbee2mqtt/0x7cb03eaa0a0a1103/set", transformationPatternOut="JS:z2m-command-state.js"]
		Type number : link [stateTopic="zigbee2mqtt/0x7cb03eaa0a0a1103", transformationPattern="REGEX:(.*linkquality.*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/0x7cb03eaa0a0a1103", transformationPattern="REGEX:(.*update_available.*)∩JSONPATH:$.update_available", on="true", off="false"]
}

// NS Projector (0x7cb03eaa0a094d1d)
// OSRAM Smart+ plug / https://www.zigbee2mqtt.io/devices/AB3257001NJ.html
Thing mqtt:topic:openhab:ns_projector_power "NS Projector" (mqtt:broker:openhab) {
	Channels:
		Type switch : state [stateTopic="zigbee2mqtt/0x7cb03eaa0a094d1d", transformationPattern="JSONPATH:$.state", commandTopic="zigbee2mqtt/0x7cb03eaa0a094d1d/set", transformationPatternOut="JS:z2m-command-state.js"]
		Type number : link [stateTopic="zigbee2mqtt/0x7cb03eaa0a094d1d", transformationPattern="REGEX:(.*linkquality.*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/0x7cb03eaa0a094d1d", transformationPattern="REGEX:(.*update_available.*)∩JSONPATH:$.update_available", on="true", off="false"]
}

// NS Christmas light (0x7cb03eaa0a09e7bc)
// OSRAM Smart+ plug / https://www.zigbee2mqtt.io/devices/AB3257001NJ.html
Thing mqtt:topic:openhab:ns_christmas_light "NS Christmas light" (mqtt:broker:openhab) {
	Channels:
		Type switch : state [stateTopic="zigbee2mqtt/0x7cb03eaa0a09e7bc", transformationPattern="JSONPATH:$.state", commandTopic="zigbee2mqtt/0x7cb03eaa0a09e7bc/set", transformationPatternOut="JS:z2m-command-state.js"]
		Type number : link [stateTopic="zigbee2mqtt/0x7cb03eaa0a09e7bc", transformationPattern="REGEX:(.*linkquality.*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/0x7cb03eaa0a09e7bc", transformationPattern="REGEX:(.*update_available.*)∩JSONPATH:$.update_available", on="true", off="false"]
}

// FS Climate (0x00158d0001c15121)
// Xiaomi MiJia temperature & humidity sensor (WSDCGQ01LM) / https://www.zigbee2mqtt.io/devices/WSDCGQ01LM.html
Thing mqtt:topic:openhab:fs_climate "FS Climate" (mqtt:broker:openhab) {
	Channels:
		Type number : temperature [stateTopic="zigbee2mqtt/0x00158d0001c15121", transformationPattern="JS:z2m-temperature.js",unit="°C"]
		Type number : humidity [stateTopic="zigbee2mqtt/0x00158d0001c15121", transformationPattern="JSONPATH:$.humidity"]
		Type datetime : activity [stateTopic="zigbee2mqtt/0x00158d0001c15121", transformationPattern="JS:z2m-activity.js"]
		Type number : battery [stateTopic="zigbee2mqtt/0x00158d0001c15121", transformationPattern="REGEX:(.*battery.*)∩JSONPATH:$.battery"]
		Type switch : battery_low [stateTopic="zigbee2mqtt/0x00158d0001c15121", transformationPattern="REGEX:(.*battery.*)∩JS:z2m-lowbatt.js"]
		Type number : voltage [stateTopic="zigbee2mqtt/0x00158d0001c15121", transformationPattern="JS:z2m-batt-mv.js",unit="V"]
		Type number : link [stateTopic="zigbee2mqtt/0x00158d0001c15121", transformationPattern="REGEX:(.*linkquality.*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/0x00158d0001c15121", transformationPattern="REGEX:(.*update_available.*)∩JSONPATH:$.update_available", on="true", off="false"]
}

// Marina Desktop light (0xec1bbdfffe1b89d1)
// IKEA TRADFRI LED bulb E27 1000 lumen, dimmable, white spectrum, opal white (LED1732G11) / https://www.zigbee2mqtt.io/devices/LED1732G11.html
Thing mqtt:topic:openhab:desktop_marina_light "Marina Desktop light" (mqtt:broker:openhab) {
	Channels:
		Type switch : state [stateTopic="zigbee2mqtt/0xec1bbdfffe1b89d1", transformationPattern="JSONPATH:$.state", commandTopic="zigbee2mqtt/0xec1bbdfffe1b89d1/set", transformationPatternOut="JS:z2m-command-state.js"]
		Type dimmer : dim [stateTopic="zigbee2mqtt/0xec1bbdfffe1b89d1", transformationPattern="JSONPATH:$.brightness", commandTopic="zigbee2mqtt/0xec1bbdfffe1b89d1/set", transformationPatternOut="JS:z2m-command-brightness.js", min=1, max=255]
		Type dimmer : ct [stateTopic="zigbee2mqtt/0xec1bbdfffe1b89d1", transformationPattern="JSONPATH:$.color_temp", commandTopic="zigbee2mqtt/0xec1bbdfffe1b89d1/set", transformationPatternOut="JS:z2m-command-color_temp.js", min=150, max=500]
		Type number : link [stateTopic="zigbee2mqtt/0xec1bbdfffe1b89d1", transformationPattern="REGEX:(.*linkquality.*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/0xec1bbdfffe1b89d1", transformationPattern="REGEX:(.*update_available.*)∩JSONPATH:$.update_available", on="true", off="false"]
}

// Marina Desktop remote (0xccccccfffeea9703)
// IKEA TRADFRI remote control (E1524/E1810) / https://www.zigbee2mqtt.io/devices/E1524_E1810.html
Thing mqtt:topic:openhab:desktop_marina_remote "Marina Desktop remote" (mqtt:broker:openhab) {
	Channels:
		Type string : action [stateTopic="zigbee2mqtt/0xccccccfffeea9703", transformationPattern="JSONPATH:$.action", trigger=true]
		Type number : battery [stateTopic="zigbee2mqtt/0xccccccfffeea9703", transformationPattern="REGEX:(.*battery.*)∩JSONPATH:$.battery"]
		Type switch : battery_low [stateTopic="zigbee2mqtt/0xccccccfffeea9703", transformationPattern="REGEX:(.*battery.*)∩JS:z2m-lowbatt.js"]
		Type number : link [stateTopic="zigbee2mqtt/0xccccccfffeea9703", transformationPattern="REGEX:(.*linkquality.*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/0xccccccfffeea9703", transformationPattern="REGEX:(.*update_available.*)∩JSONPATH:$.update_available", on="true", off="false"]
}

// FS Christmas light (0x7cb03eaa0a09ad23)
// OSRAM Smart+ plug / https://www.zigbee2mqtt.io/devices/AB3257001NJ.html
Thing mqtt:topic:openhab:fs_christmas_light "FS Christmas light" (mqtt:broker:openhab) {
	Channels:
		Type switch : state [stateTopic="zigbee2mqtt/0x7cb03eaa0a09ad23", transformationPattern="JSONPATH:$.state", commandTopic="zigbee2mqtt/0x7cb03eaa0a09ad23/set", transformationPatternOut="JS:z2m-command-state.js"]
		Type number : link [stateTopic="zigbee2mqtt/0x7cb03eaa0a09ad23", transformationPattern="REGEX:(.*linkquality.*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/0x7cb03eaa0a09ad23", transformationPattern="REGEX:(.*update_available.*)∩JSONPATH:$.update_available", on="true", off="false"]
}

// SZ Climate (0x00158d0001c19a6b)
// Xiaomi MiJia temperature & humidity sensor (WSDCGQ01LM) / https://www.zigbee2mqtt.io/devices/WSDCGQ01LM.html
Thing mqtt:topic:openhab:sz_climate "SZ Climate" (mqtt:broker:openhab) {
	Channels:
		Type number : temperature [stateTopic="zigbee2mqtt/0x00158d0001c19a6b", transformationPattern="JS:z2m-temperature.js",unit="°C"]
		Type number : humidity [stateTopic="zigbee2mqtt/0x00158d0001c19a6b", transformationPattern="JSONPATH:$.humidity"]
		Type datetime : activity [stateTopic="zigbee2mqtt/0x00158d0001c19a6b", transformationPattern="JS:z2m-activity.js"]
		Type number : battery [stateTopic="zigbee2mqtt/0x00158d0001c19a6b", transformationPattern="REGEX:(.*battery.*)∩JSONPATH:$.battery"]
		Type switch : battery_low [stateTopic="zigbee2mqtt/0x00158d0001c19a6b", transformationPattern="REGEX:(.*battery.*)∩JS:z2m-lowbatt.js"]
		Type number : voltage [stateTopic="zigbee2mqtt/0x00158d0001c19a6b", transformationPattern="JS:z2m-batt-mv.js",unit="V"]
		Type number : link [stateTopic="zigbee2mqtt/0x00158d0001c19a6b", transformationPattern="REGEX:(.*linkquality.*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/0x00158d0001c19a6b", transformationPattern="REGEX:(.*update_available.*)∩JSONPATH:$.update_available", on="true", off="false"]
}

// Bedroom remote (0x14b457fffe7e2305)
// IKEA TRADFRI remote control (E1524/E1810) / https://www.zigbee2mqtt.io/devices/E1524_E1810.html
Thing mqtt:topic:openhab:sz_remote "Bedroom remote" (mqtt:broker:openhab) {
	Channels:
		Type string : action [stateTopic="zigbee2mqtt/0x14b457fffe7e2305", transformationPattern="JSONPATH:$.action", trigger=true]
		Type number : battery [stateTopic="zigbee2mqtt/0x14b457fffe7e2305", transformationPattern="REGEX:(.*battery.*)∩JSONPATH:$.battery"]
		Type switch : battery_low [stateTopic="zigbee2mqtt/0x14b457fffe7e2305", transformationPattern="REGEX:(.*battery.*)∩JS:z2m-lowbatt.js"]
		Type number : link [stateTopic="zigbee2mqtt/0x14b457fffe7e2305", transformationPattern="REGEX:(.*linkquality.*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/0x14b457fffe7e2305", transformationPattern="REGEX:(.*update_available.*)∩JSONPATH:$.update_available", on="true", off="false"]
}

// SZ Night lamp (0xec1bbdfffe9abfde)
// IKEA TRADFRI LED bulb E26/E27 806 lumen, dimmable, warm white (LED1836G9) / https://www.zigbee2mqtt.io/devices/LED1836G9.html
Thing mqtt:topic:openhab:sz_night_lamp "SZ Night lamp" (mqtt:broker:openhab) {
	Channels:
		Type switch : state [stateTopic="zigbee2mqtt/0xec1bbdfffe9abfde", transformationPattern="JSONPATH:$.state", commandTopic="zigbee2mqtt/0xec1bbdfffe9abfde/set", transformationPatternOut="JS:z2m-command-state.js"]
		Type dimmer : dim [stateTopic="zigbee2mqtt/0xec1bbdfffe9abfde", transformationPattern="JSONPATH:$.brightness", commandTopic="zigbee2mqtt/0xec1bbdfffe9abfde/set", transformationPatternOut="JS:z2m-command-brightness.js", min=1, max=255]
		Type number : link [stateTopic="zigbee2mqtt/0xec1bbdfffe9abfde", transformationPattern="REGEX:(.*linkquality.*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/0xec1bbdfffe9abfde", transformationPattern="REGEX:(.*update_available.*)∩JSONPATH:$.update_available", on="true", off="false"]
}

// SZ Decor lamp 1 (0xec1bbdfffe972819)
// IKEA TRADFRI LED bulb E27 WW clear 250 lumen, dimmable (LED1842G3) / https://www.zigbee2mqtt.io/devices/LED1842G3.html
Thing mqtt:topic:openhab:sz_declamp_1 "SZ Decor lamp 1" (mqtt:broker:openhab) {
	Channels:
		Type switch : state [stateTopic="zigbee2mqtt/0xec1bbdfffe972819", transformationPattern="JSONPATH:$.state", commandTopic="zigbee2mqtt/0xec1bbdfffe972819/set", transformationPatternOut="JS:z2m-command-state.js"]
		Type dimmer : dim [stateTopic="zigbee2mqtt/0xec1bbdfffe972819", transformationPattern="JSONPATH:$.brightness", commandTopic="zigbee2mqtt/0xec1bbdfffe972819/set", transformationPatternOut="JS:z2m-command-brightness.js", min=1, max=255]
		Type number : link [stateTopic="zigbee2mqtt/0xec1bbdfffe972819", transformationPattern="REGEX:(.*linkquality.*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/0xec1bbdfffe972819", transformationPattern="REGEX:(.*update_available.*)∩JSONPATH:$.update_available", on="true", off="false"]
}

// SZ Decor lamp 2 (0xec1bbdfffe972203)
// IKEA TRADFRI LED bulb E27 WW clear 250 lumen, dimmable (LED1842G3) / https://www.zigbee2mqtt.io/devices/LED1842G3.html
Thing mqtt:topic:openhab:sz_declamp_2 "SZ Decor lamp 2" (mqtt:broker:openhab) {
	Channels:
		Type switch : state [stateTopic="zigbee2mqtt/0xec1bbdfffe972203", transformationPattern="JSONPATH:$.state", commandTopic="zigbee2mqtt/0xec1bbdfffe972203/set", transformationPatternOut="JS:z2m-command-state.js"]
		Type dimmer : dim [stateTopic="zigbee2mqtt/0xec1bbdfffe972203", transformationPattern="JSONPATH:$.brightness", commandTopic="zigbee2mqtt/0xec1bbdfffe972203/set", transformationPatternOut="JS:z2m-command-brightness.js", min=1, max=255]
		Type number : link [stateTopic="zigbee2mqtt/0xec1bbdfffe972203", transformationPattern="REGEX:(.*linkquality.*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/0xec1bbdfffe972203", transformationPattern="REGEX:(.*update_available.*)∩JSONPATH:$.update_available", on="true", off="false"]
}

// SZ Decor lamp 3 (0xec1bbdfffe91007b)
// IKEA TRADFRI LED bulb E27 WW clear 250 lumen, dimmable (LED1842G3) / https://www.zigbee2mqtt.io/devices/LED1842G3.html
Thing mqtt:topic:openhab:sz_declamp_3 "SZ Decor lamp 3" (mqtt:broker:openhab) {
	Channels:
		Type switch : state [stateTopic="zigbee2mqtt/0xec1bbdfffe91007b", transformationPattern="JSONPATH:$.state", commandTopic="zigbee2mqtt/0xec1bbdfffe91007b/set", transformationPatternOut="JS:z2m-command-state.js"]
		Type dimmer : dim [stateTopic="zigbee2mqtt/0xec1bbdfffe91007b", transformationPattern="JSONPATH:$.brightness", commandTopic="zigbee2mqtt/0xec1bbdfffe91007b/set", transformationPatternOut="JS:z2m-command-brightness.js", min=1, max=255]
		Type number : link [stateTopic="zigbee2mqtt/0xec1bbdfffe91007b", transformationPattern="REGEX:(.*linkquality.*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/0xec1bbdfffe91007b", transformationPattern="REGEX:(.*update_available.*)∩JSONPATH:$.update_available", on="true", off="false"]
}

// KU Climate (0x00158d0001b95fc4)
// Xiaomi Aqara temperature, humidity and pressure sensor (WSDCGQ11LM) / https://www.zigbee2mqtt.io/devices/WSDCGQ11LM.html
Thing mqtt:topic:openhab:ku_climate "KU Climate" (mqtt:broker:openhab) {
	Channels:
		Type number : temperature [stateTopic="zigbee2mqtt/0x00158d0001b95fc4", transformationPattern="JS:z2m-temperature.js",unit="°C"]
		Type number : humidity [stateTopic="zigbee2mqtt/0x00158d0001b95fc4", transformationPattern="JSONPATH:$.humidity"]
		Type number : pressure [stateTopic="zigbee2mqtt/0x00158d0001b95fc4", transformationPattern="JSONPATH:$.pressure",unit="hPa"]
		Type datetime : activity [stateTopic="zigbee2mqtt/0x00158d0001b95fc4", transformationPattern="JS:z2m-activity.js"]
		Type number : battery [stateTopic="zigbee2mqtt/0x00158d0001b95fc4", transformationPattern="REGEX:(.*battery.*)∩JSONPATH:$.battery"]
		Type switch : battery_low [stateTopic="zigbee2mqtt/0x00158d0001b95fc4", transformationPattern="REGEX:(.*battery.*)∩JS:z2m-lowbatt.js"]
		Type number : voltage [stateTopic="zigbee2mqtt/0x00158d0001b95fc4", transformationPattern="JS:z2m-batt-mv.js",unit="V"]
		Type number : link [stateTopic="zigbee2mqtt/0x00158d0001b95fc4", transformationPattern="REGEX:(.*linkquality.*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/0x00158d0001b95fc4", transformationPattern="REGEX:(.*update_available.*)∩JSONPATH:$.update_available", on="true", off="false"]
}

// KU Light Button (0x00158d0001be5b2d)
// Xiaomi MiJia wireless switch (WXKG01LM) / https://www.zigbee2mqtt.io/devices/WXKG01LM.html
Thing mqtt:topic:openhab:ku_light_button "KU Light Button" (mqtt:broker:openhab) {
	Channels:
		Type string : action [stateTopic="zigbee2mqtt/0x00158d0001be5b2d", transformationPattern="JSONPATH:$.action", trigger=true]
		Type number : battery [stateTopic="zigbee2mqtt/0x00158d0001be5b2d", transformationPattern="REGEX:(.*battery.*)∩JSONPATH:$.battery"]
		Type switch : battery_low [stateTopic="zigbee2mqtt/0x00158d0001be5b2d", transformationPattern="REGEX:(.*battery.*)∩JS:z2m-lowbatt.js"]
		Type number : voltage [stateTopic="zigbee2mqtt/0x00158d0001be5b2d", transformationPattern="JS:z2m-batt-mv.js",unit="V"]
		Type number : link [stateTopic="zigbee2mqtt/0x00158d0001be5b2d", transformationPattern="REGEX:(.*linkquality.*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/0x00158d0001be5b2d", transformationPattern="REGEX:(.*update_available.*)∩JSONPATH:$.update_available", on="true", off="false"]
}

// Treppe Door sensor (0xccccccfffed82b91)
// TuYa Rechargeable Zigbee contact sensor (SNTZ007) / https://www.zigbee2mqtt.io/devices/SNTZ007.html
Thing mqtt:topic:openhab:treppe_door_sensor "Treppe Door sensor" (mqtt:broker:openhab) {
	Channels:
		Type contact : contact [stateTopic="zigbee2mqtt/0xccccccfffed82b91", transformationPattern="JSONPATH:$.contact", on="false", off="true"]
		Type number : battery [stateTopic="zigbee2mqtt/0xccccccfffed82b91", transformationPattern="REGEX:(.*battery.*)∩JSONPATH:$.battery"]
		Type switch : battery_low [stateTopic="zigbee2mqtt/0xccccccfffed82b91", transformationPattern="REGEX:(.*battery.*)∩JS:z2m-lowbatt.js"]
		Type number : voltage [stateTopic="zigbee2mqtt/0xccccccfffed82b91", transformationPattern="JS:z2m-batt-mv.js",unit="V"]
		Type number : link [stateTopic="zigbee2mqtt/0xccccccfffed82b91", transformationPattern="REGEX:(.*linkquality.*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/0xccccccfffed82b91", transformationPattern="REGEX:(.*update_available.*)∩JSONPATH:$.update_available", on="true", off="false"]
}

// Treppe Up switch (0x680ae2fffe1a92f3)
// IKEA TRADFRI ON/OFF switch (E1743) / https://www.zigbee2mqtt.io/devices/E1743.html
Thing mqtt:topic:openhab:treppe_up_switch "Treppe Up switch" (mqtt:broker:openhab) {
	Channels:
		Type string : action [stateTopic="zigbee2mqtt/0x680ae2fffe1a92f3", transformationPattern="JSONPATH:$.action", trigger=true]
		Type number : battery [stateTopic="zigbee2mqtt/0x680ae2fffe1a92f3", transformationPattern="REGEX:(.*battery.*)∩JSONPATH:$.battery"]
		Type switch : battery_low [stateTopic="zigbee2mqtt/0x680ae2fffe1a92f3", transformationPattern="REGEX:(.*battery.*)∩JS:z2m-lowbatt.js"]
		Type number : link [stateTopic="zigbee2mqtt/0x680ae2fffe1a92f3", transformationPattern="REGEX:(.*linkquality.*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/0x680ae2fffe1a92f3", transformationPattern="REGEX:(.*update_available.*)∩JSONPATH:$.update_available", on="true", off="false"]
}

// Treppe Down switch (0xccccccfffef0356e)
// IKEA TRADFRI ON/OFF switch (E1743) / https://www.zigbee2mqtt.io/devices/E1743.html
Thing mqtt:topic:openhab:treppe_down_switch "Treppe Down switch" (mqtt:broker:openhab) {
	Channels:
		Type string : action [stateTopic="zigbee2mqtt/0xccccccfffef0356e", transformationPattern="JSONPATH:$.action", trigger=true]
		Type number : battery [stateTopic="zigbee2mqtt/0xccccccfffef0356e", transformationPattern="REGEX:(.*battery.*)∩JSONPATH:$.battery"]
		Type switch : battery_low [stateTopic="zigbee2mqtt/0xccccccfffef0356e", transformationPattern="REGEX:(.*battery.*)∩JS:z2m-lowbatt.js"]
		Type number : link [stateTopic="zigbee2mqtt/0xccccccfffef0356e", transformationPattern="REGEX:(.*linkquality.*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/0xccccccfffef0356e", transformationPattern="REGEX:(.*update_available.*)∩JSONPATH:$.update_available", on="true", off="false"]
}

// Treppe Up light (0xd0cf5efffee892b0)
// IKEA TRADFRI LED bulb E27 1000 lumen, dimmable, white spectrum, opal white (LED1732G11) / https://www.zigbee2mqtt.io/devices/LED1732G11.html
Thing mqtt:topic:openhab:treppe_up_light "Treppe Up light" (mqtt:broker:openhab) {
	Channels:
		Type switch : state [stateTopic="zigbee2mqtt/0xd0cf5efffee892b0", transformationPattern="JSONPATH:$.state", commandTopic="zigbee2mqtt/0xd0cf5efffee892b0/set", transformationPatternOut="JS:z2m-command-state.js"]
		Type dimmer : dim [stateTopic="zigbee2mqtt/0xd0cf5efffee892b0", transformationPattern="JSONPATH:$.brightness", commandTopic="zigbee2mqtt/0xd0cf5efffee892b0/set", transformationPatternOut="JS:z2m-command-brightness.js", min=1, max=255]
		Type dimmer : ct [stateTopic="zigbee2mqtt/0xd0cf5efffee892b0", transformationPattern="JSONPATH:$.color_temp", commandTopic="zigbee2mqtt/0xd0cf5efffee892b0/set", transformationPatternOut="JS:z2m-command-color_temp.js", min=150, max=500]
		Type number : link [stateTopic="zigbee2mqtt/0xd0cf5efffee892b0", transformationPattern="REGEX:(.*linkquality.*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/0xd0cf5efffee892b0", transformationPattern="REGEX:(.*update_available.*)∩JSONPATH:$.update_available", on="true", off="false"]
}

// Treppe Down light (0x588e81fffe507b40)
// IKEA TRADFRI LED bulb E27 1000 lumen, dimmable, white spectrum, opal white (LED1732G11) / https://www.zigbee2mqtt.io/devices/LED1732G11.html
Thing mqtt:topic:openhab:treppe_down_light "Treppe Down light" (mqtt:broker:openhab) {
	Channels:
		Type switch : state [stateTopic="zigbee2mqtt/0x588e81fffe507b40", transformationPattern="JSONPATH:$.state", commandTopic="zigbee2mqtt/0x588e81fffe507b40/set", transformationPatternOut="JS:z2m-command-state.js"]
		Type dimmer : dim [stateTopic="zigbee2mqtt/0x588e81fffe507b40", transformationPattern="JSONPATH:$.brightness", commandTopic="zigbee2mqtt/0x588e81fffe507b40/set", transformationPatternOut="JS:z2m-command-brightness.js", min=1, max=255]
		Type dimmer : ct [stateTopic="zigbee2mqtt/0x588e81fffe507b40", transformationPattern="JSONPATH:$.color_temp", commandTopic="zigbee2mqtt/0x588e81fffe507b40/set", transformationPatternOut="JS:z2m-command-color_temp.js", min=150, max=500]
		Type number : link [stateTopic="zigbee2mqtt/0x588e81fffe507b40", transformationPattern="REGEX:(.*linkquality.*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/0x588e81fffe507b40", transformationPattern="REGEX:(.*update_available.*)∩JSONPATH:$.update_available", on="true", off="false"]
}

// Treppe motion (0xbc33acfffe872049)
// IKEA TRADFRI motion sensor (E1525/E1745) / https://www.zigbee2mqtt.io/devices/E1525_E1745.html
Thing mqtt:topic:openhab:treppe_motion "Treppe motion" (mqtt:broker:openhab) {
	Channels:
		Type switch : occupancy [stateTopic="zigbee2mqtt/0xbc33acfffe872049", transformationPattern="JSONPATH:$.occupancy", on="true", off="false"]
		Type datetime : activity [stateTopic="zigbee2mqtt/0xbc33acfffe872049", transformationPattern="JS:z2m-activity.js"]
		Type number : battery [stateTopic="zigbee2mqtt/0xbc33acfffe872049", transformationPattern="REGEX:(.*battery.*)∩JSONPATH:$.battery"]
		Type switch : battery_low [stateTopic="zigbee2mqtt/0xbc33acfffe872049", transformationPattern="REGEX:(.*battery.*)∩JS:z2m-lowbatt.js"]
		Type number : link [stateTopic="zigbee2mqtt/0xbc33acfffe872049", transformationPattern="REGEX:(.*linkquality.*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/0xbc33acfffe872049", transformationPattern="REGEX:(.*update_available.*)∩JSONPATH:$.update_available", on="true", off="false"]
}

// KG Window 1 (0xccccccfffed82ba3)
// TuYa Rechargeable Zigbee contact sensor (SNTZ007) / https://www.zigbee2mqtt.io/devices/SNTZ007.html
Thing mqtt:topic:openhab:kg_window_1 "KG Window 1" (mqtt:broker:openhab) {
	Channels:
		Type contact : contact [stateTopic="zigbee2mqtt/0xccccccfffed82ba3", transformationPattern="JSONPATH:$.contact", on="false", off="true"]
		Type number : battery [stateTopic="zigbee2mqtt/0xccccccfffed82ba3", transformationPattern="REGEX:(.*battery.*)∩JSONPATH:$.battery"]
		Type switch : battery_low [stateTopic="zigbee2mqtt/0xccccccfffed82ba3", transformationPattern="REGEX:(.*battery.*)∩JS:z2m-lowbatt.js"]
		Type number : voltage [stateTopic="zigbee2mqtt/0xccccccfffed82ba3", transformationPattern="JS:z2m-batt-mv.js",unit="V"]
		Type number : link [stateTopic="zigbee2mqtt/0xccccccfffed82ba3", transformationPattern="REGEX:(.*linkquality.*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/0xccccccfffed82ba3", transformationPattern="REGEX:(.*update_available.*)∩JSONPATH:$.update_available", on="true", off="false"]
}

// KG Climate (0x00158d0001b95e02)
// Xiaomi Aqara temperature, humidity and pressure sensor (WSDCGQ11LM) / https://www.zigbee2mqtt.io/devices/WSDCGQ11LM.html
Thing mqtt:topic:openhab:kg_climate "KG Climate" (mqtt:broker:openhab) {
	Channels:
		Type number : temperature [stateTopic="zigbee2mqtt/0x00158d0001b95e02", transformationPattern="JS:z2m-temperature.js",unit="°C"]
		Type number : humidity [stateTopic="zigbee2mqtt/0x00158d0001b95e02", transformationPattern="JSONPATH:$.humidity"]
		Type number : pressure [stateTopic="zigbee2mqtt/0x00158d0001b95e02", transformationPattern="JSONPATH:$.pressure",unit="hPa"]
		Type datetime : activity [stateTopic="zigbee2mqtt/0x00158d0001b95e02", transformationPattern="JS:z2m-activity.js"]
		Type number : battery [stateTopic="zigbee2mqtt/0x00158d0001b95e02", transformationPattern="REGEX:(.*battery.*)∩JSONPATH:$.battery"]
		Type switch : battery_low [stateTopic="zigbee2mqtt/0x00158d0001b95e02", transformationPattern="REGEX:(.*battery.*)∩JS:z2m-lowbatt.js"]
		Type number : voltage [stateTopic="zigbee2mqtt/0x00158d0001b95e02", transformationPattern="JS:z2m-batt-mv.js",unit="V"]
		Type number : link [stateTopic="zigbee2mqtt/0x00158d0001b95e02", transformationPattern="REGEX:(.*linkquality.*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/0x00158d0001b95e02", transformationPattern="REGEX:(.*update_available.*)∩JSONPATH:$.update_available", on="true", off="false"]
}

// Petro Desktop light (0xccccccfffed8ef9d)
// IKEA TRADFRI LED bulb E27 806 lumen, dimmable, white spectrum, clear (LED1736G9) / https://www.zigbee2mqtt.io/devices/LED1736G9.html
Thing mqtt:topic:openhab:desktop_petro_light "Petro Desktop light" (mqtt:broker:openhab) {
	Channels:
		Type switch : state [stateTopic="zigbee2mqtt/0xccccccfffed8ef9d", transformationPattern="JSONPATH:$.state", commandTopic="zigbee2mqtt/0xccccccfffed8ef9d/set", transformationPatternOut="JS:z2m-command-state.js"]
		Type dimmer : dim [stateTopic="zigbee2mqtt/0xccccccfffed8ef9d", transformationPattern="JSONPATH:$.brightness", commandTopic="zigbee2mqtt/0xccccccfffed8ef9d/set", transformationPatternOut="JS:z2m-command-brightness.js", min=1, max=255]
		Type dimmer : ct [stateTopic="zigbee2mqtt/0xccccccfffed8ef9d", transformationPattern="JSONPATH:$.color_temp", commandTopic="zigbee2mqtt/0xccccccfffed8ef9d/set", transformationPatternOut="JS:z2m-command-color_temp.js", min=150, max=500]
		Type number : link [stateTopic="zigbee2mqtt/0xccccccfffed8ef9d", transformationPattern="REGEX:(.*linkquality.*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/0xccccccfffed8ef9d", transformationPattern="REGEX:(.*update_available.*)∩JSONPATH:$.update_available", on="true", off="false"]
}

// Petro Desktop AUX (0x7cb03eaa0a094bf2)
// OSRAM Smart+ plug / https://www.zigbee2mqtt.io/devices/AB3257001NJ.html
Thing mqtt:topic:openhab:desktop_petro_aux_power "Petro Desktop AUX" (mqtt:broker:openhab) {
	Channels:
		Type switch : state [stateTopic="zigbee2mqtt/0x7cb03eaa0a094bf2", transformationPattern="JSONPATH:$.state", commandTopic="zigbee2mqtt/0x7cb03eaa0a094bf2/set", transformationPatternOut="JS:z2m-command-state.js"]
		Type number : link [stateTopic="zigbee2mqtt/0x7cb03eaa0a094bf2", transformationPattern="REGEX:(.*linkquality.*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/0x7cb03eaa0a094bf2", transformationPattern="REGEX:(.*update_available.*)∩JSONPATH:$.update_available", on="true", off="false"]
}

// Petro Desktop PC (0x7cb03eaa0a094303)
// OSRAM Smart+ plug / https://www.zigbee2mqtt.io/devices/AB3257001NJ.html
Thing mqtt:topic:openhab:desktop_petro_pc_power "Petro Desktop PC" (mqtt:broker:openhab) {
	Channels:
		Type switch : state [stateTopic="zigbee2mqtt/0x7cb03eaa0a094303", transformationPattern="JSONPATH:$.state", commandTopic="zigbee2mqtt/0x7cb03eaa0a094303/set", transformationPatternOut="JS:z2m-command-state.js"]
		Type number : link [stateTopic="zigbee2mqtt/0x7cb03eaa0a094303", transformationPattern="REGEX:(.*linkquality.*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/0x7cb03eaa0a094303", transformationPattern="REGEX:(.*update_available.*)∩JSONPATH:$.update_available", on="true", off="false"]
}

// Petro Desktop remote (0x000d6ffffee8357d)
// IKEA TRADFRI remote control (E1524/E1810) / https://www.zigbee2mqtt.io/devices/E1524_E1810.html
Thing mqtt:topic:openhab:desktop_petro_remote "Petro Desktop remote" (mqtt:broker:openhab) {
	Channels:
		Type string : action [stateTopic="zigbee2mqtt/0x000d6ffffee8357d", transformationPattern="JSONPATH:$.action", trigger=true]
		Type number : battery [stateTopic="zigbee2mqtt/0x000d6ffffee8357d", transformationPattern="REGEX:(.*battery.*)∩JSONPATH:$.battery"]
		Type switch : battery_low [stateTopic="zigbee2mqtt/0x000d6ffffee8357d", transformationPattern="REGEX:(.*battery.*)∩JS:z2m-lowbatt.js"]
		Type number : link [stateTopic="zigbee2mqtt/0x000d6ffffee8357d", transformationPattern="REGEX:(.*linkquality.*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/0x000d6ffffee8357d", transformationPattern="REGEX:(.*update_available.*)∩JSONPATH:$.update_available", on="true", off="false"]
}

// KG Lager 4 (1) (0xccccccfffedf345a)
// IKEA TRADFRI LED bulb E26/E27 806 lumen, dimmable, warm white (LED1836G9) / https://www.zigbee2mqtt.io/devices/LED1836G9.html
Thing mqtt:topic:openhab:kg_lager4_1_light "KG Lager 4 (1)" (mqtt:broker:openhab) {
	Channels:
		Type switch : state [stateTopic="zigbee2mqtt/0xccccccfffedf345a", transformationPattern="JSONPATH:$.state", commandTopic="zigbee2mqtt/0xccccccfffedf345a/set", transformationPatternOut="JS:z2m-command-state.js"]
		Type dimmer : dim [stateTopic="zigbee2mqtt/0xccccccfffedf345a", transformationPattern="JSONPATH:$.brightness", commandTopic="zigbee2mqtt/0xccccccfffedf345a/set", transformationPatternOut="JS:z2m-command-brightness.js", min=1, max=255]
		Type number : link [stateTopic="zigbee2mqtt/0xccccccfffedf345a", transformationPattern="REGEX:(.*linkquality.*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/0xccccccfffedf345a", transformationPattern="REGEX:(.*update_available.*)∩JSONPATH:$.update_available", on="true", off="false"]
}

// KG Lager 4 (2) (0xccccccfffedf5314)
// IKEA TRADFRI LED bulb E26/E27 806 lumen, dimmable, warm white (LED1836G9) / https://www.zigbee2mqtt.io/devices/LED1836G9.html
Thing mqtt:topic:openhab:kg_lager4_2_light "KG Lager 4 (2)" (mqtt:broker:openhab) {
	Channels:
		Type switch : state [stateTopic="zigbee2mqtt/0xccccccfffedf5314", transformationPattern="JSONPATH:$.state", commandTopic="zigbee2mqtt/0xccccccfffedf5314/set", transformationPatternOut="JS:z2m-command-state.js"]
		Type dimmer : dim [stateTopic="zigbee2mqtt/0xccccccfffedf5314", transformationPattern="JSONPATH:$.brightness", commandTopic="zigbee2mqtt/0xccccccfffedf5314/set", transformationPatternOut="JS:z2m-command-brightness.js", min=1, max=255]
		Type number : link [stateTopic="zigbee2mqtt/0xccccccfffedf5314", transformationPattern="REGEX:(.*linkquality.*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/0xccccccfffedf5314", transformationPattern="REGEX:(.*update_available.*)∩JSONPATH:$.update_available", on="true", off="false"]
}

// KG Lager switch (0xccccccfffee401f8)
// IKEA TRADFRI ON/OFF switch (E1743) / https://www.zigbee2mqtt.io/devices/E1743.html
Thing mqtt:topic:openhab:kg_lager4_switch "KG Lager switch" (mqtt:broker:openhab) {
	Channels:
		Type string : action [stateTopic="zigbee2mqtt/0xccccccfffee401f8", transformationPattern="JSONPATH:$.action", trigger=true]
		Type number : battery [stateTopic="zigbee2mqtt/0xccccccfffee401f8", transformationPattern="REGEX:(.*battery.*)∩JSONPATH:$.battery"]
		Type switch : battery_low [stateTopic="zigbee2mqtt/0xccccccfffee401f8", transformationPattern="REGEX:(.*battery.*)∩JS:z2m-lowbatt.js"]
		Type number : link [stateTopic="zigbee2mqtt/0xccccccfffee401f8", transformationPattern="REGEX:(.*linkquality.*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/0xccccccfffee401f8", transformationPattern="REGEX:(.*update_available.*)∩JSONPATH:$.update_available", on="true", off="false"]
}

// KG Lager motion (0xbc33acfffe84ca1e)
// IKEA TRADFRI motion sensor (E1525/E1745) / https://www.zigbee2mqtt.io/devices/E1525_E1745.html
Thing mqtt:topic:openhab:kg_lager4_motion "KG Lager motion" (mqtt:broker:openhab) {
	Channels:
		Type switch : occupancy [stateTopic="zigbee2mqtt/0xbc33acfffe84ca1e", transformationPattern="JSONPATH:$.occupancy", on="true", off="false"]
		Type datetime : activity [stateTopic="zigbee2mqtt/0xbc33acfffe84ca1e", transformationPattern="JS:z2m-activity.js"]
		Type number : battery [stateTopic="zigbee2mqtt/0xbc33acfffe84ca1e", transformationPattern="REGEX:(.*battery.*)∩JSONPATH:$.battery"]
		Type switch : battery_low [stateTopic="zigbee2mqtt/0xbc33acfffe84ca1e", transformationPattern="REGEX:(.*battery.*)∩JS:z2m-lowbatt.js"]
		Type number : link [stateTopic="zigbee2mqtt/0xbc33acfffe84ca1e", transformationPattern="REGEX:(.*linkquality.*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/0xbc33acfffe84ca1e", transformationPattern="REGEX:(.*update_available.*)∩JSONPATH:$.update_available", on="true", off="false"]
}

// KG Lager 4 leak (0x00158d000488052c)
// Xiaomi Aqara water leak sensor (SJCGQ11LM) / https://www.zigbee2mqtt.io/devices/SJCGQ11LM.html
Thing mqtt:topic:openhab:kg_lager4_leak "KG Lager 4 leak" (mqtt:broker:openhab) {
	Channels:
		Type switch : leak [stateTopic="zigbee2mqtt/0x00158d000488052c", transformationPattern="JSONPATH:$.water_leak", on="true", off="false"]
		Type datetime : activity [stateTopic="zigbee2mqtt/0x00158d000488052c", transformationPattern="JS:z2m-activity.js"]
		Type number : battery [stateTopic="zigbee2mqtt/0x00158d000488052c", transformationPattern="REGEX:(.*battery.*)∩JSONPATH:$.battery"]
		Type switch : battery_low [stateTopic="zigbee2mqtt/0x00158d000488052c", transformationPattern="REGEX:(.*battery.*)∩JS:z2m-lowbatt.js"]
		Type number : voltage [stateTopic="zigbee2mqtt/0x00158d000488052c", transformationPattern="JS:z2m-batt-mv.js",unit="V"]
		Type number : link [stateTopic="zigbee2mqtt/0x00158d000488052c", transformationPattern="REGEX:(.*linkquality.*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/0x00158d000488052c", transformationPattern="REGEX:(.*update_available.*)∩JSONPATH:$.update_available", on="true", off="false"]
}

// SZ heating (0x5c0272fffec9d557)
// TuYa Radiator valve with thermostat (TS0601_thermostat) / https://www.zigbee2mqtt.io/devices/TS0601_thermostat.html
Thing mqtt:topic:openhab:sz_heating "SZ heating" (mqtt:broker:openhab) {
	Channels:
		Type number : thermostat [stateTopic="zigbee2mqtt/0x5c0272fffec9d557", transformationPattern="JSONPATH:$.current_heating_setpoint", commandTopic="zigbee2mqtt/0x5c0272fffec9d557/set", transformationPatternOut="JS:z2m-command-thermostat-setpoint.js", unit="°C"]
		Type number : position [stateTopic="zigbee2mqtt/0x5c0272fffec9d557", transformationPattern="JSONPATH:$.position"]
		Type number : temperature [stateTopic="zigbee2mqtt/0x5c0272fffec9d557", transformationPattern="JS:z2m-temperature.js",unit="°C"]
		Type datetime : activity [stateTopic="zigbee2mqtt/0x5c0272fffec9d557", transformationPattern="JS:z2m-activity.js"]
		Type switch : battery_low [stateTopic="zigbee2mqtt/0x5c0272fffec9d557", transformationPattern="JSONPATH:$.battery_low", on="true", off="false"]
		Type number : link [stateTopic="zigbee2mqtt/0x5c0272fffec9d557", transformationPattern="REGEX:(.*linkquality.*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/0x5c0272fffec9d557", transformationPattern="REGEX:(.*update_available.*)∩JSONPATH:$.update_available", on="true", off="false"]
}
