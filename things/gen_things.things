
// ==========================================
// THIS FILE IS AUTO GENERATED
// Do not edit by hands
// Use this command to regenerate:
// python3 ./bin/codegen.py
// ==========================================


// Sturbar test (0x04cd15fffe6d57dc)
// IKEA STYRBAR remote control N2 / https://www.zigbee2mqtt.io/devices/E2001_E2002.html
Thing mqtt:topic:openhab:sturbar_test "Sturbar test" (mqtt:broker:openhab) {
	Channels:
		Type string : action [stateTopic="zigbee2mqtt/sturbar_test", commandTopic="zigbee2mqtt/sturbar_test/set", transformationPattern="REGEX:(.*\"action\".*)∩JSONPATH:$.action", trigger="true"]
		Type dimmer : dim [stateTopic="zigbee2mqtt/sturbar_test", transformationPattern="REGEX:(.*\"action_brightness_delta\".*)∩JSONPATH:$.brightness", min=0, max=255]
		Type number : action_dim [stateTopic="zigbee2mqtt/sturbar_test", transformationPattern="REGEX:(.*\"action_brightness_delta\".*)∩JSONPATH:$.action_brightness_delta", trigger="true"]
		Type number : battery [stateTopic="zigbee2mqtt/sturbar_test", transformationPattern="REGEX:(.*\"battery\".*)∩JSONPATH:$.battery", unit="%"]
		Type switch : battery_low [stateTopic="zigbee2mqtt/sturbar_test", transformationPattern="REGEX:(.*\"battery\".*)∩JS:codegen-lowbat.js"]
		Type number : link [stateTopic="zigbee2mqtt/sturbar_test", transformationPattern="REGEX:(.*\"linkquality\".*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/sturbar_test", transformationPattern="REGEX:(.*\"update_available\".*)∩JSONPATH:$.update_available", on="true", off="false"]
}
// Outside Climate (0x00158d0001c2cc22)
// Xiaomi MiJia temperature & humidity sensor (WSDCGQ01LM) / https://www.zigbee2mqtt.io/devices/WSDCGQ01LM.html
Thing mqtt:topic:openhab:ext_climate "Outside Climate" (mqtt:broker:openhab) {
	Channels:
		Type number : temperature [stateTopic="zigbee2mqtt/ext_climate", transformationPattern="REGEX:(.*\"temperature\".*)∩JSONPATH:$.temperature", unit="C°"]
		Type number : humidity [stateTopic="zigbee2mqtt/ext_climate", transformationPattern="REGEX:(.*\"humidity\".*)∩JSONPATH:$.humidity", unit="%"]
		Type number : battery [stateTopic="zigbee2mqtt/ext_climate", transformationPattern="REGEX:(.*\"battery\".*)∩JSONPATH:$.battery", unit="%"]
		Type datetime : activity [stateTopic="zigbee2mqtt/ext_climate", transformationPattern="JS:codegen-activity.js"]
		Type switch : battery_low [stateTopic="zigbee2mqtt/ext_climate", transformationPattern="REGEX:(.*\"battery\".*)∩JS:codegen-lowbat.js"]
		Type number : link [stateTopic="zigbee2mqtt/ext_climate", transformationPattern="REGEX:(.*\"linkquality\".*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/ext_climate", transformationPattern="REGEX:(.*\"update_available\".*)∩JSONPATH:$.update_available", on="true", off="false"]
		Type datetime : activity [stateTopic="zigbee2mqtt/ext_climate", transformationPattern="JS:codegen-activity.js"]
}
// Balkon light 1 (0x14b457fffe399241)
// IKEA TRADFRI LED bulb E27 1000 lumen, dimmable, white spectrum, opal white (LED1732G11) / https://www.zigbee2mqtt.io/devices/LED1732G11.html
Thing mqtt:topic:openhab:bk_light_1 "Balkon light 1" (mqtt:broker:openhab) {
	Channels:
		Type switch : state [stateTopic="zigbee2mqtt/bk_light_1", commandTopic="zigbee2mqtt/bk_light_1/set", transformationPattern="JSONPATH:$.state", transformationPatternOut="JS:codegen-cmd-value.js?f=state&t=1"]
		Type dimmer : dim [stateTopic="zigbee2mqtt/bk_light_1", commandTopic="zigbee2mqtt/bk_light_1/set", transformationPattern="REGEX:(.*\"brightness\".*)∩JS:codegen-brightness.js", transformationPatternOut="JS:codegen-cmd-value.js?f=brightness&t=1", min=1, max=254]
		Type dimmer : dim_fast [stateTopic="zigbee2mqtt/bk_light_1", commandTopic="zigbee2mqtt/bk_light_1/set", transformationPattern="REGEX:(.*\"brightness\".*)∩JS:codegen-brightness.js", transformationPatternOut="JS:codegen-cmd-value.js?f=brightness&t=0", min=1, max=254]
		Type dimmer : ct [stateTopic="zigbee2mqtt/bk_light_1", commandTopic="zigbee2mqtt/bk_light_1/set", transformationPattern="REGEX:(.*\"color_temp\".*)∩JSONPATH:$.color_temp", transformationPatternOut="JS:codegen-cmd-value.js?f=color_temp&t=3", min=150, max=500]
		Type number : link [stateTopic="zigbee2mqtt/bk_light_1", transformationPattern="REGEX:(.*\"linkquality\".*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/bk_light_1", transformationPattern="REGEX:(.*\"update_available\".*)∩JSONPATH:$.update_available", on="true", off="false"]
}
// Garten wasser remote (0xccccccfffe58f1c3)
// IKEA TRADFRI ON/OFF switch (E1743) / https://www.zigbee2mqtt.io/devices/E1743.html
Thing mqtt:topic:openhab:garten_wasser_remote "Garten wasser remote" (mqtt:broker:openhab) {
	Channels:
		Type string : action [stateTopic="zigbee2mqtt/garten_wasser_remote", commandTopic="zigbee2mqtt/garten_wasser_remote/set", transformationPattern="REGEX:(.*\"action\".*)∩JSONPATH:$.action", trigger="true"]
		Type number : battery [stateTopic="zigbee2mqtt/garten_wasser_remote", transformationPattern="REGEX:(.*\"battery\".*)∩JSONPATH:$.battery", unit="%"]
		Type switch : battery_low [stateTopic="zigbee2mqtt/garten_wasser_remote", transformationPattern="REGEX:(.*\"battery\".*)∩JS:codegen-lowbat.js"]
		Type number : link [stateTopic="zigbee2mqtt/garten_wasser_remote", transformationPattern="REGEX:(.*\"linkquality\".*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/garten_wasser_remote", transformationPattern="REGEX:(.*\"update_available\".*)∩JSONPATH:$.update_available", on="true", off="false"]
}
// EG Router (0x00124b000b4ed5cc)
// CC2530.ROUTER - Custom devices (DiY) / https://www.zigbee2mqtt.io/devices/CC2530.ROUTER.html
Thing mqtt:topic:openhab:eg_router "EG Router" (mqtt:broker:openhab) {
	Channels:
		Type number : link [stateTopic="zigbee2mqtt/eg_router", transformationPattern="REGEX:(.*\"linkquality\".*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/eg_router", transformationPattern="REGEX:(.*\"update_available\".*)∩JSONPATH:$.update_available", on="true", off="false"]
}
// EG Corridor Light (0xa4c138a06ec38c9e)
// TuYa Wall dimmer module (TS110E_1gang_1) / https://www.zigbee2mqtt.io/devices/TS110E_1gang_1.html#tuya-ts110e_1gang_1
Thing mqtt:topic:openhab:fl_up_light "EG Corridor Light" (mqtt:broker:openhab) {
	Channels:
		Type switch : state [stateTopic="zigbee2mqtt/fl_up_light", commandTopic="zigbee2mqtt/fl_up_light/set", transformationPattern="JSONPATH:$.state", transformationPatternOut="JS:codegen-cmd-value.js?f=state&t=0"]
		Type dimmer : dim [stateTopic="zigbee2mqtt/fl_up_light", commandTopic="zigbee2mqtt/fl_up_light/set", transformationPattern="REGEX:(.*\"brightness\".*)∩JS:codegen-brightness.js", transformationPatternOut="JS:codegen-cmd-value.js?f=brightness&t=0", min=30, max=254]
		Type dimmer : dim_fast [stateTopic="zigbee2mqtt/fl_up_light", commandTopic="zigbee2mqtt/fl_up_light/set", transformationPattern="REGEX:(.*\"brightness\".*)∩JS:codegen-brightness.js", transformationPatternOut="JS:codegen-cmd-value.js?f=brightness&t=0", min=30, max=254]
		Type number : link [stateTopic="zigbee2mqtt/fl_up_light", transformationPattern="REGEX:(.*\"linkquality\".*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/fl_up_light", transformationPattern="REGEX:(.*\"update_available\".*)∩JSONPATH:$.update_available", on="true", off="false"]
}
// EG Decor light (0x9035eafffe20e847)
// IKEA TRADFRI LED bulb E27 WW clear 250 lumen, dimmable (LED1842G3) / https://www.zigbee2mqtt.io/devices/LED1842G3.html
Thing mqtt:topic:openhab:eg_decoration_light "EG Decor light" (mqtt:broker:openhab) {
	Channels:
		Type switch : state [stateTopic="zigbee2mqtt/eg_decoration_light", commandTopic="zigbee2mqtt/eg_decoration_light/set", transformationPattern="JSONPATH:$.state", transformationPatternOut="JS:codegen-cmd-value.js?f=state&t=1"]
		Type dimmer : dim [stateTopic="zigbee2mqtt/eg_decoration_light", commandTopic="zigbee2mqtt/eg_decoration_light/set", transformationPattern="REGEX:(.*\"brightness\".*)∩JS:codegen-brightness.js", transformationPatternOut="JS:codegen-cmd-value.js?f=brightness&t=1", min=1, max=254]
		Type dimmer : dim_fast [stateTopic="zigbee2mqtt/eg_decoration_light", commandTopic="zigbee2mqtt/eg_decoration_light/set", transformationPattern="REGEX:(.*\"brightness\".*)∩JS:codegen-brightness.js", transformationPatternOut="JS:codegen-cmd-value.js?f=brightness&t=0", min=1, max=254]
		Type number : link [stateTopic="zigbee2mqtt/eg_decoration_light", transformationPattern="REGEX:(.*\"linkquality\".*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/eg_decoration_light", transformationPattern="REGEX:(.*\"update_available\".*)∩JSONPATH:$.update_available", on="true", off="false"]
}
// Entrance Door sensor (0xa4c138182f60d651)
// TuYa Rechargeable Zigbee contact sensor (TS0203) / https://www.zigbee2mqtt.io/devices/TS0203.html#tuya-ts0203
Thing mqtt:topic:openhab:eg_main_door "Entrance Door sensor" (mqtt:broker:openhab) {
	Channels:
		Type contact : contact [stateTopic="zigbee2mqtt/eg_main_door", transformationPattern="REGEX:(.*\"contact\".*)∩JSONPATH:$.contact", on="false", off="true"]
		Type number : battery [stateTopic="zigbee2mqtt/eg_main_door", transformationPattern="REGEX:(.*\"battery\".*)∩JSONPATH:$.battery", unit="%"]
		Type datetime : activity [stateTopic="zigbee2mqtt/eg_main_door", transformationPattern="JS:codegen-activity.js"]
		Type switch : battery_low [stateTopic="zigbee2mqtt/eg_main_door", transformationPattern="REGEX:(.*\"battery\".*)∩JS:codegen-lowbat.js"]
		Type number : link [stateTopic="zigbee2mqtt/eg_main_door", transformationPattern="REGEX:(.*\"linkquality\".*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/eg_main_door", transformationPattern="REGEX:(.*\"update_available\".*)∩JSONPATH:$.update_available", on="true", off="false"]
		Type datetime : activity [stateTopic="zigbee2mqtt/eg_main_door", transformationPattern="JS:codegen-activity.js"]
}
// Entrance Door remote (0x1c34f1fffe830517)
// IKEA STYRBAR remote control N2 / https://www.zigbee2mqtt.io/devices/E2001_E2002.html
Thing mqtt:topic:openhab:fl_door_remote "Entrance Door remote" (mqtt:broker:openhab) {
	Channels:
		Type string : action [stateTopic="zigbee2mqtt/fl_door_remote", commandTopic="zigbee2mqtt/fl_door_remote/set", transformationPattern="REGEX:(.*\"action\".*)∩JSONPATH:$.action", trigger="true"]
		Type dimmer : dim [stateTopic="zigbee2mqtt/fl_door_remote", transformationPattern="REGEX:(.*\"action_brightness_delta\".*)∩JSONPATH:$.brightness", min=0, max=255]
		Type number : action_dim [stateTopic="zigbee2mqtt/fl_door_remote", transformationPattern="REGEX:(.*\"action_brightness_delta\".*)∩JSONPATH:$.action_brightness_delta", trigger="true"]
		Type number : battery [stateTopic="zigbee2mqtt/fl_door_remote", transformationPattern="REGEX:(.*\"battery\".*)∩JSONPATH:$.battery", unit="%"]
		Type switch : battery_low [stateTopic="zigbee2mqtt/fl_door_remote", transformationPattern="REGEX:(.*\"battery\".*)∩JS:codegen-lowbat.js"]
		Type number : link [stateTopic="zigbee2mqtt/fl_door_remote", transformationPattern="REGEX:(.*\"linkquality\".*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/fl_door_remote", transformationPattern="REGEX:(.*\"update_available\".*)∩JSONPATH:$.update_available", on="true", off="false"]
}
// Mirror remote (0x680ae2fffeab6b80)
// IKEA TRADFRI remote control (E1524/E1810) / https://www.zigbee2mqtt.io/devices/E1524_E1810.html
Thing mqtt:topic:openhab:mirror_remote "Mirror remote" (mqtt:broker:openhab) {
	Channels:
		Type string : action [stateTopic="zigbee2mqtt/mirror_remote", commandTopic="zigbee2mqtt/mirror_remote/set", transformationPattern="REGEX:(.*\"action\".*)∩JSONPATH:$.action", trigger="true"]
		Type number : battery [stateTopic="zigbee2mqtt/mirror_remote", transformationPattern="REGEX:(.*\"battery\".*)∩JSONPATH:$.battery", unit="%"]
		Type switch : battery_low [stateTopic="zigbee2mqtt/mirror_remote", transformationPattern="REGEX:(.*\"battery\".*)∩JS:codegen-lowbat.js"]
		Type number : link [stateTopic="zigbee2mqtt/mirror_remote", transformationPattern="REGEX:(.*\"linkquality\".*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/mirror_remote", transformationPattern="REGEX:(.*\"update_available\".*)∩JSONPATH:$.update_available", on="true", off="false"]
}
// BZ Light (toilet) (0xcc86ecfffea0c7cb)
// Livarno Home LED ceiling light (HG08008) / https://www.zigbee2mqtt.io/devices/HG08008.html#lidl-hg08008
Thing mqtt:topic:openhab:bz_light_1 "BZ Light (toilet)" (mqtt:broker:openhab) {
	Channels:
		Type switch : state [stateTopic="zigbee2mqtt/bz_light_1", commandTopic="zigbee2mqtt/bz_light_1/set", transformationPattern="JSONPATH:$.state", transformationPatternOut="JS:codegen-cmd-value.js?f=state&t=1"]
		Type dimmer : dim [stateTopic="zigbee2mqtt/bz_light_1", commandTopic="zigbee2mqtt/bz_light_1/set", transformationPattern="REGEX:(.*\"brightness\".*)∩JS:codegen-brightness.js", transformationPatternOut="JS:codegen-cmd-value.js?f=brightness&t=1", min=1, max=254]
		Type dimmer : dim_fast [stateTopic="zigbee2mqtt/bz_light_1", commandTopic="zigbee2mqtt/bz_light_1/set", transformationPattern="REGEX:(.*\"brightness\".*)∩JS:codegen-brightness.js", transformationPatternOut="JS:codegen-cmd-value.js?f=brightness&t=0", min=1, max=254]
		Type dimmer : ct [stateTopic="zigbee2mqtt/bz_light_1", commandTopic="zigbee2mqtt/bz_light_1/set", transformationPattern="REGEX:(.*\"color_temp\".*)∩JSONPATH:$.color_temp", transformationPatternOut="JS:codegen-cmd-value.js?f=color_temp&t=3", min=150, max=500]
		Type color : color [commandTopic="zigbee2mqtt/bz_light_1/set", transformationPatternOut="JS:codegen-cmd-color_xy.js"]
		Type string : color_mode [stateTopic="zigbee2mqtt/bz_light_1", transformationPattern="REGEX:(.*\"color_mode\".*)∩JSONPATH:$.color_mode"]
		Type number : link [stateTopic="zigbee2mqtt/bz_light_1", transformationPattern="REGEX:(.*\"linkquality\".*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/bz_light_1", transformationPattern="REGEX:(.*\"update_available\".*)∩JSONPATH:$.update_available", on="true", off="false"]
}
// BZ Light (shower) (0x04cd15fffedb319f)
// Livarno Home LED ceiling light (HG08008) / https://www.zigbee2mqtt.io/devices/HG08008.html#lidl-hg08008
Thing mqtt:topic:openhab:bz_light_2 "BZ Light (shower)" (mqtt:broker:openhab) {
	Channels:
		Type switch : state [stateTopic="zigbee2mqtt/bz_light_2", commandTopic="zigbee2mqtt/bz_light_2/set", transformationPattern="JSONPATH:$.state", transformationPatternOut="JS:codegen-cmd-value.js?f=state&t=1"]
		Type dimmer : dim [stateTopic="zigbee2mqtt/bz_light_2", commandTopic="zigbee2mqtt/bz_light_2/set", transformationPattern="REGEX:(.*\"brightness\".*)∩JS:codegen-brightness.js", transformationPatternOut="JS:codegen-cmd-value.js?f=brightness&t=1", min=1, max=254]
		Type dimmer : dim_fast [stateTopic="zigbee2mqtt/bz_light_2", commandTopic="zigbee2mqtt/bz_light_2/set", transformationPattern="REGEX:(.*\"brightness\".*)∩JS:codegen-brightness.js", transformationPatternOut="JS:codegen-cmd-value.js?f=brightness&t=0", min=1, max=254]
		Type dimmer : ct [stateTopic="zigbee2mqtt/bz_light_2", commandTopic="zigbee2mqtt/bz_light_2/set", transformationPattern="REGEX:(.*\"color_temp\".*)∩JSONPATH:$.color_temp", transformationPatternOut="JS:codegen-cmd-value.js?f=color_temp&t=3", min=150, max=500]
		Type color : color [commandTopic="zigbee2mqtt/bz_light_2/set", transformationPatternOut="JS:codegen-cmd-color_xy.js"]
		Type string : color_mode [stateTopic="zigbee2mqtt/bz_light_2", transformationPattern="REGEX:(.*\"color_mode\".*)∩JSONPATH:$.color_mode"]
		Type number : link [stateTopic="zigbee2mqtt/bz_light_2", transformationPattern="REGEX:(.*\"linkquality\".*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/bz_light_2", transformationPattern="REGEX:(.*\"update_available\".*)∩JSONPATH:$.update_available", on="true", off="false"]
}
// BZ Mirror (bz_mirror)
// Sonoff Mini Switch / https://templates.blakadder.com/sonoff_mini.html
Thing mqtt:topic:openhab:bz_mirror "BZ Mirror" (mqtt:broker:openhab) {
	Channels:
		Type number : rssi [stateTopic="tele/bz_mirror/STATE", transformationPattern="JSONPATH:$.Wifi.RSSI"]
		Type string : bssid [stateTopic="tele/bz_mirror/STATE", transformationPattern="JSONPATH:$.Wifi.BSSId"]
		Type number : la [stateTopic="tele/bz_mirror/STATE", transformationPattern="JSONPATH:$.LoadAvg"]
		Type datetime : activity [stateTopic="tele/bz_mirror/STATE", transformationPattern="JS:codegen-activity.js"]
		Type switch : POWER [stateTopic="stat/bz_mirror/RESULT", transformationPattern="JSONPATH:$.POWER", commandTopic="cmnd/bz_mirror/POWER", on="ON", off="OFF"]
}
// BZ Mirror switch (0xccccccfffef0356e)
// IKEA TRADFRI ON/OFF switch (E1743) / https://www.zigbee2mqtt.io/devices/E1743.html
Thing mqtt:topic:openhab:bz_mirror_switch "BZ Mirror switch" (mqtt:broker:openhab) {
	Channels:
		Type string : action [stateTopic="zigbee2mqtt/bz_mirror_switch", commandTopic="zigbee2mqtt/bz_mirror_switch/set", transformationPattern="REGEX:(.*\"action\".*)∩JSONPATH:$.action", trigger="true"]
		Type number : battery [stateTopic="zigbee2mqtt/bz_mirror_switch", transformationPattern="REGEX:(.*\"battery\".*)∩JSONPATH:$.battery", unit="%"]
		Type switch : battery_low [stateTopic="zigbee2mqtt/bz_mirror_switch", transformationPattern="REGEX:(.*\"battery\".*)∩JS:codegen-lowbat.js"]
		Type number : link [stateTopic="zigbee2mqtt/bz_mirror_switch", transformationPattern="REGEX:(.*\"linkquality\".*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/bz_mirror_switch", transformationPattern="REGEX:(.*\"update_available\".*)∩JSONPATH:$.update_available", on="true", off="false"]
}
// BZ Light Control (0x003c84fffe132b20)
// IKEA STYRBAR remote control N2 / https://www.zigbee2mqtt.io/devices/E2001_E2002.html
Thing mqtt:topic:openhab:bz_light_switch "BZ Light Control" (mqtt:broker:openhab) {
	Channels:
		Type string : action [stateTopic="zigbee2mqtt/bz_light_switch", commandTopic="zigbee2mqtt/bz_light_switch/set", transformationPattern="REGEX:(.*\"action\".*)∩JSONPATH:$.action", trigger="true"]
		Type dimmer : dim [stateTopic="zigbee2mqtt/bz_light_switch", transformationPattern="REGEX:(.*\"action_brightness_delta\".*)∩JSONPATH:$.brightness", min=0, max=255]
		Type number : action_dim [stateTopic="zigbee2mqtt/bz_light_switch", transformationPattern="REGEX:(.*\"action_brightness_delta\".*)∩JSONPATH:$.action_brightness_delta", trigger="true"]
		Type number : battery [stateTopic="zigbee2mqtt/bz_light_switch", transformationPattern="REGEX:(.*\"battery\".*)∩JSONPATH:$.battery", unit="%"]
		Type switch : battery_low [stateTopic="zigbee2mqtt/bz_light_switch", transformationPattern="REGEX:(.*\"battery\".*)∩JS:codegen-lowbat.js"]
		Type number : link [stateTopic="zigbee2mqtt/bz_light_switch", transformationPattern="REGEX:(.*\"linkquality\".*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/bz_light_switch", transformationPattern="REGEX:(.*\"update_available\".*)∩JSONPATH:$.update_available", on="true", off="false"]
}
// KS Main (0x588e81fffefb217b)
// Livarno Home Lux ceiling light (14147206L) / https://www.zigbee2mqtt.io/devices/14147206L.html#lidl-14147206l
Thing mqtt:topic:openhab:ks_up_light "KS Main" (mqtt:broker:openhab) {
	Channels:
		Type switch : state [stateTopic="zigbee2mqtt/ks_up_light", commandTopic="zigbee2mqtt/ks_up_light/set", transformationPattern="JSONPATH:$.state", transformationPatternOut="JS:codegen-cmd-value.js?f=state&t=1"]
		Type dimmer : dim [stateTopic="zigbee2mqtt/ks_up_light", commandTopic="zigbee2mqtt/ks_up_light/set", transformationPattern="REGEX:(.*\"brightness\".*)∩JS:codegen-brightness.js", transformationPatternOut="JS:codegen-cmd-value.js?f=brightness&t=1", min=1, max=254]
		Type dimmer : dim_fast [stateTopic="zigbee2mqtt/ks_up_light", commandTopic="zigbee2mqtt/ks_up_light/set", transformationPattern="REGEX:(.*\"brightness\".*)∩JS:codegen-brightness.js", transformationPatternOut="JS:codegen-cmd-value.js?f=brightness&t=0", min=1, max=254]
		Type dimmer : ct [stateTopic="zigbee2mqtt/ks_up_light", commandTopic="zigbee2mqtt/ks_up_light/set", transformationPattern="REGEX:(.*\"color_temp\".*)∩JSONPATH:$.color_temp", transformationPatternOut="JS:codegen-cmd-value.js?f=color_temp&t=3", min=150, max=500]
		Type number : link [stateTopic="zigbee2mqtt/ks_up_light", transformationPattern="REGEX:(.*\"linkquality\".*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/ks_up_light", transformationPattern="REGEX:(.*\"update_available\".*)∩JSONPATH:$.update_available", on="true", off="false"]
}
// KS Climate (0xa4c1386df39045f6)
// TuYa Temperature & humidity sensor / https://www.zigbee2mqtt.io/devices/TS0201.html
Thing mqtt:topic:openhab:ks_climate "KS Climate" (mqtt:broker:openhab) {
	Channels:
		Type number : temperature [stateTopic="zigbee2mqtt/ks_climate", transformationPattern="REGEX:(.*\"temperature\".*)∩JSONPATH:$.temperature", unit="C°"]
		Type number : humidity [stateTopic="zigbee2mqtt/ks_climate", transformationPattern="REGEX:(.*\"humidity\".*)∩JSONPATH:$.humidity", unit="%"]
		Type number : battery [stateTopic="zigbee2mqtt/ks_climate", transformationPattern="REGEX:(.*\"battery\".*)∩JSONPATH:$.battery", unit="%"]
		Type datetime : activity [stateTopic="zigbee2mqtt/ks_climate", transformationPattern="JS:codegen-activity.js"]
		Type switch : battery_low [stateTopic="zigbee2mqtt/ks_climate", transformationPattern="REGEX:(.*\"battery\".*)∩JS:codegen-lowbat.js"]
		Type number : link [stateTopic="zigbee2mqtt/ks_climate", transformationPattern="REGEX:(.*\"linkquality\".*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/ks_climate", transformationPattern="REGEX:(.*\"update_available\".*)∩JSONPATH:$.update_available", on="true", off="false"]
		Type datetime : activity [stateTopic="zigbee2mqtt/ks_climate", transformationPattern="JS:codegen-activity.js"]
}
// KS Night lamp (0x14b457fffe6383e5)
// TRADFRI LED bulb E14/E26/E27 600 lumen, dimmable, color, opal white (ebay) / https://www.zigbee2mqtt.io/devices/LED1624G9.html
Thing mqtt:topic:openhab:ks_light_night "KS Night lamp" (mqtt:broker:openhab) {
	Channels:
		Type switch : state [stateTopic="zigbee2mqtt/ks_light_night", commandTopic="zigbee2mqtt/ks_light_night/set", transformationPattern="JSONPATH:$.state", transformationPatternOut="JS:codegen-cmd-value.js?f=state&t=1"]
		Type dimmer : dim [stateTopic="zigbee2mqtt/ks_light_night", commandTopic="zigbee2mqtt/ks_light_night/set", transformationPattern="REGEX:(.*\"brightness\".*)∩JS:codegen-brightness.js", transformationPatternOut="JS:codegen-cmd-value.js?f=brightness&t=1", min=1, max=254]
		Type dimmer : dim_fast [stateTopic="zigbee2mqtt/ks_light_night", commandTopic="zigbee2mqtt/ks_light_night/set", transformationPattern="REGEX:(.*\"brightness\".*)∩JS:codegen-brightness.js", transformationPatternOut="JS:codegen-cmd-value.js?f=brightness&t=0", min=1, max=254]
		Type dimmer : ct [stateTopic="zigbee2mqtt/ks_light_night", commandTopic="zigbee2mqtt/ks_light_night/set", transformationPattern="REGEX:(.*\"color_temp\".*)∩JSONPATH:$.color_temp", transformationPatternOut="JS:codegen-cmd-value.js?f=color_temp&t=3", min=150, max=500]
		Type color : color [commandTopic="zigbee2mqtt/ks_light_night/set", transformationPatternOut="JS:codegen-cmd-color_xy.js"]
		Type string : color_mode [stateTopic="zigbee2mqtt/ks_light_night", transformationPattern="REGEX:(.*\"color_mode\".*)∩JSONPATH:$.color_mode"]
		Type number : link [stateTopic="zigbee2mqtt/ks_light_night", transformationPattern="REGEX:(.*\"linkquality\".*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/ks_light_night", transformationPattern="REGEX:(.*\"update_available\".*)∩JSONPATH:$.update_available", on="true", off="false"]
}
// KS Projector (0x7cb03eaa0a094d1d)
// OSRAM Smart+ plug / https://www.zigbee2mqtt.io/devices/AB3257001NJ.html
Thing mqtt:topic:openhab:ks_projector_power "KS Projector" (mqtt:broker:openhab) {
	Channels:
		Type switch : state [stateTopic="zigbee2mqtt/ks_projector_power", commandTopic="zigbee2mqtt/ks_projector_power/set", transformationPattern="JSONPATH:$.state", transformationPatternOut="JS:codegen-cmd-value.js?f=state&t=0"]
		Type number : link [stateTopic="zigbee2mqtt/ks_projector_power", transformationPattern="REGEX:(.*\"linkquality\".*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/ks_projector_power", transformationPattern="REGEX:(.*\"update_available\".*)∩JSONPATH:$.update_available", on="true", off="false"]
}
// KS Window 2 (0xa4c138f1bf27592c)
// TuYa Rechargeable Zigbee contact sensor (SNTZ007) / https://www.zigbee2mqtt.io/devices/SNTZ007.html
Thing mqtt:topic:openhab:ks_window_2 "KS Window 2" (mqtt:broker:openhab) {
	Channels:
		Type contact : contact [stateTopic="zigbee2mqtt/ks_window_2", transformationPattern="REGEX:(.*\"contact\".*)∩JSONPATH:$.contact", on="false", off="true"]
		Type number : battery [stateTopic="zigbee2mqtt/ks_window_2", transformationPattern="REGEX:(.*\"battery\".*)∩JSONPATH:$.battery", unit="%"]
		Type datetime : activity [stateTopic="zigbee2mqtt/ks_window_2", transformationPattern="JS:codegen-activity.js"]
		Type switch : battery_low [stateTopic="zigbee2mqtt/ks_window_2", transformationPattern="REGEX:(.*\"battery\".*)∩JS:codegen-lowbat.js"]
		Type number : link [stateTopic="zigbee2mqtt/ks_window_2", transformationPattern="REGEX:(.*\"linkquality\".*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/ks_window_2", transformationPattern="REGEX:(.*\"update_available\".*)∩JSONPATH:$.update_available", on="true", off="false"]
		Type datetime : activity [stateTopic="zigbee2mqtt/ks_window_2", transformationPattern="JS:codegen-activity.js"]
}
// KS Main remote (0x9035eafffee1ba1d)
// IKEA STYRBAR remote control N2 / https://www.zigbee2mqtt.io/devices/E2001_E2002.html
Thing mqtt:topic:openhab:ks_light_switch "KS Main remote" (mqtt:broker:openhab) {
	Channels:
		Type string : action [stateTopic="zigbee2mqtt/ks_light_switch", commandTopic="zigbee2mqtt/ks_light_switch/set", transformationPattern="REGEX:(.*\"action\".*)∩JSONPATH:$.action", trigger="true"]
		Type dimmer : dim [stateTopic="zigbee2mqtt/ks_light_switch", transformationPattern="REGEX:(.*\"action_brightness_delta\".*)∩JSONPATH:$.brightness", min=0, max=255]
		Type number : action_dim [stateTopic="zigbee2mqtt/ks_light_switch", transformationPattern="REGEX:(.*\"action_brightness_delta\".*)∩JSONPATH:$.action_brightness_delta", trigger="true"]
		Type number : battery [stateTopic="zigbee2mqtt/ks_light_switch", transformationPattern="REGEX:(.*\"battery\".*)∩JSONPATH:$.battery", unit="%"]
		Type switch : battery_low [stateTopic="zigbee2mqtt/ks_light_switch", transformationPattern="REGEX:(.*\"battery\".*)∩JS:codegen-lowbat.js"]
		Type number : link [stateTopic="zigbee2mqtt/ks_light_switch", transformationPattern="REGEX:(.*\"linkquality\".*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/ks_light_switch", transformationPattern="REGEX:(.*\"update_available\".*)∩JSONPATH:$.update_available", on="true", off="false"]
}
// WZ Climate (0xa4c1386a03a53708)
// TuYa Temperature & humidity sensor / https://www.zigbee2mqtt.io/devices/TS0201.html
Thing mqtt:topic:openhab:wz_climate "WZ Climate" (mqtt:broker:openhab) {
	Channels:
		Type number : temperature [stateTopic="zigbee2mqtt/wz_climate", transformationPattern="REGEX:(.*\"temperature\".*)∩JSONPATH:$.temperature", unit="C°"]
		Type number : humidity [stateTopic="zigbee2mqtt/wz_climate", transformationPattern="REGEX:(.*\"humidity\".*)∩JSONPATH:$.humidity", unit="%"]
		Type number : battery [stateTopic="zigbee2mqtt/wz_climate", transformationPattern="REGEX:(.*\"battery\".*)∩JSONPATH:$.battery", unit="%"]
		Type datetime : activity [stateTopic="zigbee2mqtt/wz_climate", transformationPattern="JS:codegen-activity.js"]
		Type switch : battery_low [stateTopic="zigbee2mqtt/wz_climate", transformationPattern="REGEX:(.*\"battery\".*)∩JS:codegen-lowbat.js"]
		Type number : link [stateTopic="zigbee2mqtt/wz_climate", transformationPattern="REGEX:(.*\"linkquality\".*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/wz_climate", transformationPattern="REGEX:(.*\"update_available\".*)∩JSONPATH:$.update_available", on="true", off="false"]
		Type datetime : activity [stateTopic="zigbee2mqtt/wz_climate", transformationPattern="JS:codegen-activity.js"]
}
// Bedroom main remote (0x003c84fffe16f988)
// IKEA STYRBAR remote control N2 / https://www.zigbee2mqtt.io/devices/E2001_E2002.html
Thing mqtt:topic:openhab:wz_up_remote "Bedroom main remote" (mqtt:broker:openhab) {
	Channels:
		Type string : action [stateTopic="zigbee2mqtt/wz_up_remote", commandTopic="zigbee2mqtt/wz_up_remote/set", transformationPattern="REGEX:(.*\"action\".*)∩JSONPATH:$.action", trigger="true"]
		Type dimmer : dim [stateTopic="zigbee2mqtt/wz_up_remote", transformationPattern="REGEX:(.*\"action_brightness_delta\".*)∩JSONPATH:$.brightness", min=0, max=255]
		Type number : action_dim [stateTopic="zigbee2mqtt/wz_up_remote", transformationPattern="REGEX:(.*\"action_brightness_delta\".*)∩JSONPATH:$.action_brightness_delta", trigger="true"]
		Type number : battery [stateTopic="zigbee2mqtt/wz_up_remote", transformationPattern="REGEX:(.*\"battery\".*)∩JSONPATH:$.battery", unit="%"]
		Type switch : battery_low [stateTopic="zigbee2mqtt/wz_up_remote", transformationPattern="REGEX:(.*\"battery\".*)∩JS:codegen-lowbat.js"]
		Type number : link [stateTopic="zigbee2mqtt/wz_up_remote", transformationPattern="REGEX:(.*\"linkquality\".*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/wz_up_remote", transformationPattern="REGEX:(.*\"update_available\".*)∩JSONPATH:$.update_available", on="true", off="false"]
}
// WZ Main (0x588e81fffefe9a05)
// Livarno Home Lux ceiling light (14147206L) / https://www.zigbee2mqtt.io/devices/14147206L.html#lidl-14147206l
Thing mqtt:topic:openhab:wz_up_light "WZ Main" (mqtt:broker:openhab) {
	Channels:
		Type switch : state [stateTopic="zigbee2mqtt/wz_up_light", commandTopic="zigbee2mqtt/wz_up_light/set", transformationPattern="JSONPATH:$.state", transformationPatternOut="JS:codegen-cmd-value.js?f=state&t=1"]
		Type dimmer : dim [stateTopic="zigbee2mqtt/wz_up_light", commandTopic="zigbee2mqtt/wz_up_light/set", transformationPattern="REGEX:(.*\"brightness\".*)∩JS:codegen-brightness.js", transformationPatternOut="JS:codegen-cmd-value.js?f=brightness&t=1", min=1, max=254]
		Type dimmer : dim_fast [stateTopic="zigbee2mqtt/wz_up_light", commandTopic="zigbee2mqtt/wz_up_light/set", transformationPattern="REGEX:(.*\"brightness\".*)∩JS:codegen-brightness.js", transformationPatternOut="JS:codegen-cmd-value.js?f=brightness&t=0", min=1, max=254]
		Type dimmer : ct [stateTopic="zigbee2mqtt/wz_up_light", commandTopic="zigbee2mqtt/wz_up_light/set", transformationPattern="REGEX:(.*\"color_temp\".*)∩JSONPATH:$.color_temp", transformationPatternOut="JS:codegen-cmd-value.js?f=color_temp&t=3", min=150, max=500]
		Type number : link [stateTopic="zigbee2mqtt/wz_up_light", transformationPattern="REGEX:(.*\"linkquality\".*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/wz_up_light", transformationPattern="REGEX:(.*\"update_available\".*)∩JSONPATH:$.update_available", on="true", off="false"]
}
// WZ Julia stand (0x5cc7c1fffe4c4a46)
// TRADFRI LED bulb E14/E26/E27 600 lumen, dimmable, color, opal white (ebay) / https://www.zigbee2mqtt.io/devices/LED1624G9.html
Thing mqtt:topic:openhab:wz_julia_stand_light "WZ Julia stand" (mqtt:broker:openhab) {
	Channels:
		Type switch : state [stateTopic="zigbee2mqtt/wz_julia_stand_light", commandTopic="zigbee2mqtt/wz_julia_stand_light/set", transformationPattern="JSONPATH:$.state", transformationPatternOut="JS:codegen-cmd-value.js?f=state&t=1"]
		Type dimmer : dim [stateTopic="zigbee2mqtt/wz_julia_stand_light", commandTopic="zigbee2mqtt/wz_julia_stand_light/set", transformationPattern="REGEX:(.*\"brightness\".*)∩JS:codegen-brightness.js", transformationPatternOut="JS:codegen-cmd-value.js?f=brightness&t=1", min=1, max=254]
		Type dimmer : dim_fast [stateTopic="zigbee2mqtt/wz_julia_stand_light", commandTopic="zigbee2mqtt/wz_julia_stand_light/set", transformationPattern="REGEX:(.*\"brightness\".*)∩JS:codegen-brightness.js", transformationPatternOut="JS:codegen-cmd-value.js?f=brightness&t=0", min=1, max=254]
		Type dimmer : ct [stateTopic="zigbee2mqtt/wz_julia_stand_light", commandTopic="zigbee2mqtt/wz_julia_stand_light/set", transformationPattern="REGEX:(.*\"color_temp\".*)∩JSONPATH:$.color_temp", transformationPatternOut="JS:codegen-cmd-value.js?f=color_temp&t=3", min=150, max=500]
		Type color : color [commandTopic="zigbee2mqtt/wz_julia_stand_light/set", transformationPatternOut="JS:codegen-cmd-color_xy.js"]
		Type string : color_mode [stateTopic="zigbee2mqtt/wz_julia_stand_light", transformationPattern="REGEX:(.*\"color_mode\".*)∩JSONPATH:$.color_mode"]
		Type number : link [stateTopic="zigbee2mqtt/wz_julia_stand_light", transformationPattern="REGEX:(.*\"linkquality\".*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/wz_julia_stand_light", transformationPattern="REGEX:(.*\"update_available\".*)∩JSONPATH:$.update_available", on="true", off="false"]
}
// WZ Julia desktop (0xec1bbdfffe1b89d1)
// IKEA TRADFRI LED bulb E27 1000 lumen, dimmable, white spectrum, opal white (LED1732G11) / https://www.zigbee2mqtt.io/devices/LED1732G11.html
Thing mqtt:topic:openhab:wz_julia_desktop_light "WZ Julia desktop" (mqtt:broker:openhab) {
	Channels:
		Type switch : state [stateTopic="zigbee2mqtt/wz_julia_desktop_light", commandTopic="zigbee2mqtt/wz_julia_desktop_light/set", transformationPattern="JSONPATH:$.state", transformationPatternOut="JS:codegen-cmd-value.js?f=state&t=1"]
		Type dimmer : dim [stateTopic="zigbee2mqtt/wz_julia_desktop_light", commandTopic="zigbee2mqtt/wz_julia_desktop_light/set", transformationPattern="REGEX:(.*\"brightness\".*)∩JS:codegen-brightness.js", transformationPatternOut="JS:codegen-cmd-value.js?f=brightness&t=1", min=1, max=254]
		Type dimmer : dim_fast [stateTopic="zigbee2mqtt/wz_julia_desktop_light", commandTopic="zigbee2mqtt/wz_julia_desktop_light/set", transformationPattern="REGEX:(.*\"brightness\".*)∩JS:codegen-brightness.js", transformationPatternOut="JS:codegen-cmd-value.js?f=brightness&t=0", min=1, max=254]
		Type dimmer : ct [stateTopic="zigbee2mqtt/wz_julia_desktop_light", commandTopic="zigbee2mqtt/wz_julia_desktop_light/set", transformationPattern="REGEX:(.*\"color_temp\".*)∩JSONPATH:$.color_temp", transformationPatternOut="JS:codegen-cmd-value.js?f=color_temp&t=3", min=150, max=500]
		Type number : link [stateTopic="zigbee2mqtt/wz_julia_desktop_light", transformationPattern="REGEX:(.*\"linkquality\".*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/wz_julia_desktop_light", transformationPattern="REGEX:(.*\"update_available\".*)∩JSONPATH:$.update_available", on="true", off="false"]
}
// WZ Julia remote (0x1c34f1fffe7ccde1)
// IKEA STYRBAR remote control N2 / https://www.zigbee2mqtt.io/devices/E2001_E2002.html
Thing mqtt:topic:openhab:sz_julia_remote "WZ Julia remote" (mqtt:broker:openhab) {
	Channels:
		Type string : action [stateTopic="zigbee2mqtt/sz_julia_remote", commandTopic="zigbee2mqtt/sz_julia_remote/set", transformationPattern="REGEX:(.*\"action\".*)∩JSONPATH:$.action", trigger="true"]
		Type dimmer : dim [stateTopic="zigbee2mqtt/sz_julia_remote", transformationPattern="REGEX:(.*\"action_brightness_delta\".*)∩JSONPATH:$.brightness", min=0, max=255]
		Type number : action_dim [stateTopic="zigbee2mqtt/sz_julia_remote", transformationPattern="REGEX:(.*\"action_brightness_delta\".*)∩JSONPATH:$.action_brightness_delta", trigger="true"]
		Type number : battery [stateTopic="zigbee2mqtt/sz_julia_remote", transformationPattern="REGEX:(.*\"battery\".*)∩JSONPATH:$.battery", unit="%"]
		Type switch : battery_low [stateTopic="zigbee2mqtt/sz_julia_remote", transformationPattern="REGEX:(.*\"battery\".*)∩JS:codegen-lowbat.js"]
		Type number : link [stateTopic="zigbee2mqtt/sz_julia_remote", transformationPattern="REGEX:(.*\"linkquality\".*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/sz_julia_remote", transformationPattern="REGEX:(.*\"update_available\".*)∩JSONPATH:$.update_available", on="true", off="false"]
}
// WZ Color Decor (0x8cf681fffef62c85)
// Livarno Lux E14 candle RGB (HG07834B) / https://www.zigbee2mqtt.io/devices/HG07834B.html#lidl-hg07834b
Thing mqtt:topic:openhab:wz_light_color "WZ Color Decor" (mqtt:broker:openhab) {
	Channels:
		Type switch : state [stateTopic="zigbee2mqtt/wz_light_color", commandTopic="zigbee2mqtt/wz_light_color/set", transformationPattern="JSONPATH:$.state", transformationPatternOut="JS:codegen-cmd-value.js?f=state&t=1"]
		Type dimmer : dim [stateTopic="zigbee2mqtt/wz_light_color", commandTopic="zigbee2mqtt/wz_light_color/set", transformationPattern="REGEX:(.*\"brightness\".*)∩JS:codegen-brightness.js", transformationPatternOut="JS:codegen-cmd-value.js?f=brightness&t=1", min=1, max=254]
		Type dimmer : dim_fast [stateTopic="zigbee2mqtt/wz_light_color", commandTopic="zigbee2mqtt/wz_light_color/set", transformationPattern="REGEX:(.*\"brightness\".*)∩JS:codegen-brightness.js", transformationPatternOut="JS:codegen-cmd-value.js?f=brightness&t=0", min=1, max=254]
		Type dimmer : ct [stateTopic="zigbee2mqtt/wz_light_color", commandTopic="zigbee2mqtt/wz_light_color/set", transformationPattern="REGEX:(.*\"color_temp\".*)∩JSONPATH:$.color_temp", transformationPatternOut="JS:codegen-cmd-value.js?f=color_temp&t=3", min=150, max=500]
		Type color : color [commandTopic="zigbee2mqtt/wz_light_color/set", transformationPatternOut="JS:codegen-cmd-color_xy.js"]
		Type string : color_mode [stateTopic="zigbee2mqtt/wz_light_color", transformationPattern="REGEX:(.*\"color_mode\".*)∩JSONPATH:$.color_mode"]
		Type number : link [stateTopic="zigbee2mqtt/wz_light_color", transformationPattern="REGEX:(.*\"linkquality\".*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/wz_light_color", transformationPattern="REGEX:(.*\"update_available\".*)∩JSONPATH:$.update_available", on="true", off="false"]
}
// WZ Decor lamp 1 (0xec1bbdfffe972819)
// IKEA TRADFRI LED bulb E27 WW clear 250 lumen, dimmable (LED1842G3) / https://www.zigbee2mqtt.io/devices/LED1842G3.html
Thing mqtt:topic:openhab:wz_declamp_1 "WZ Decor lamp 1" (mqtt:broker:openhab) {
	Channels:
		Type switch : state [stateTopic="zigbee2mqtt/wz_declamp_1", commandTopic="zigbee2mqtt/wz_declamp_1/set", transformationPattern="JSONPATH:$.state", transformationPatternOut="JS:codegen-cmd-value.js?f=state&t=1"]
		Type dimmer : dim [stateTopic="zigbee2mqtt/wz_declamp_1", commandTopic="zigbee2mqtt/wz_declamp_1/set", transformationPattern="REGEX:(.*\"brightness\".*)∩JS:codegen-brightness.js", transformationPatternOut="JS:codegen-cmd-value.js?f=brightness&t=3", min=1, max=254]
		Type dimmer : dim_fast [stateTopic="zigbee2mqtt/wz_declamp_1", commandTopic="zigbee2mqtt/wz_declamp_1/set", transformationPattern="REGEX:(.*\"brightness\".*)∩JS:codegen-brightness.js", transformationPatternOut="JS:codegen-cmd-value.js?f=brightness&t=0", min=1, max=254]
		Type number : link [stateTopic="zigbee2mqtt/wz_declamp_1", transformationPattern="REGEX:(.*\"linkquality\".*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/wz_declamp_1", transformationPattern="REGEX:(.*\"update_available\".*)∩JSONPATH:$.update_available", on="true", off="false"]
}
// WZ Decor lamp 2 (0xec1bbdfffe972203)
// IKEA TRADFRI LED bulb E27 WW clear 250 lumen, dimmable (LED1842G3) / https://www.zigbee2mqtt.io/devices/LED1842G3.html
Thing mqtt:topic:openhab:wz_declamp_2 "WZ Decor lamp 2" (mqtt:broker:openhab) {
	Channels:
		Type switch : state [stateTopic="zigbee2mqtt/wz_declamp_2", commandTopic="zigbee2mqtt/wz_declamp_2/set", transformationPattern="JSONPATH:$.state", transformationPatternOut="JS:codegen-cmd-value.js?f=state&t=1"]
		Type dimmer : dim [stateTopic="zigbee2mqtt/wz_declamp_2", commandTopic="zigbee2mqtt/wz_declamp_2/set", transformationPattern="REGEX:(.*\"brightness\".*)∩JS:codegen-brightness.js", transformationPatternOut="JS:codegen-cmd-value.js?f=brightness&t=3", min=1, max=254]
		Type dimmer : dim_fast [stateTopic="zigbee2mqtt/wz_declamp_2", commandTopic="zigbee2mqtt/wz_declamp_2/set", transformationPattern="REGEX:(.*\"brightness\".*)∩JS:codegen-brightness.js", transformationPatternOut="JS:codegen-cmd-value.js?f=brightness&t=0", min=1, max=254]
		Type number : link [stateTopic="zigbee2mqtt/wz_declamp_2", transformationPattern="REGEX:(.*\"linkquality\".*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/wz_declamp_2", transformationPattern="REGEX:(.*\"update_available\".*)∩JSONPATH:$.update_available", on="true", off="false"]
}
// WZ Decor lamp 3 (0xec1bbdfffe91007b)
// IKEA TRADFRI LED bulb E27 WW clear 250 lumen, dimmable (LED1842G3) / https://www.zigbee2mqtt.io/devices/LED1842G3.html
Thing mqtt:topic:openhab:wz_declamp_3 "WZ Decor lamp 3" (mqtt:broker:openhab) {
	Channels:
		Type switch : state [stateTopic="zigbee2mqtt/wz_declamp_3", commandTopic="zigbee2mqtt/wz_declamp_3/set", transformationPattern="JSONPATH:$.state", transformationPatternOut="JS:codegen-cmd-value.js?f=state&t=1"]
		Type dimmer : dim [stateTopic="zigbee2mqtt/wz_declamp_3", commandTopic="zigbee2mqtt/wz_declamp_3/set", transformationPattern="REGEX:(.*\"brightness\".*)∩JS:codegen-brightness.js", transformationPatternOut="JS:codegen-cmd-value.js?f=brightness&t=3", min=1, max=254]
		Type dimmer : dim_fast [stateTopic="zigbee2mqtt/wz_declamp_3", commandTopic="zigbee2mqtt/wz_declamp_3/set", transformationPattern="REGEX:(.*\"brightness\".*)∩JS:codegen-brightness.js", transformationPatternOut="JS:codegen-cmd-value.js?f=brightness&t=0", min=1, max=254]
		Type number : link [stateTopic="zigbee2mqtt/wz_declamp_3", transformationPattern="REGEX:(.*\"linkquality\".*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/wz_declamp_3", transformationPattern="REGEX:(.*\"update_available\".*)∩JSONPATH:$.update_available", on="true", off="false"]
}
// WZ Window 1 (0xa4c13804963f4ccf)
// TuYa Rechargeable Zigbee contact sensor (SNTZ007) / https://www.zigbee2mqtt.io/devices/SNTZ007.html
Thing mqtt:topic:openhab:wz_window_1 "WZ Window 1" (mqtt:broker:openhab) {
	Channels:
		Type contact : contact [stateTopic="zigbee2mqtt/wz_window_1", transformationPattern="REGEX:(.*\"contact\".*)∩JSONPATH:$.contact", on="false", off="true"]
		Type number : battery [stateTopic="zigbee2mqtt/wz_window_1", transformationPattern="REGEX:(.*\"battery\".*)∩JSONPATH:$.battery", unit="%"]
		Type datetime : activity [stateTopic="zigbee2mqtt/wz_window_1", transformationPattern="JS:codegen-activity.js"]
		Type switch : battery_low [stateTopic="zigbee2mqtt/wz_window_1", transformationPattern="REGEX:(.*\"battery\".*)∩JS:codegen-lowbat.js"]
		Type number : link [stateTopic="zigbee2mqtt/wz_window_1", transformationPattern="REGEX:(.*\"linkquality\".*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/wz_window_1", transformationPattern="REGEX:(.*\"update_available\".*)∩JSONPATH:$.update_available", on="true", off="false"]
		Type datetime : activity [stateTopic="zigbee2mqtt/wz_window_1", transformationPattern="JS:codegen-activity.js"]
}
// SZ Climate (sz_climate)
// Petro.ws CO₂ sensor module / https://github.com/petrows/smarthome-co2-module
Thing mqtt:topic:openhab:sz_climate "SZ Climate" (mqtt:broker:openhab) {
	Channels:
		Type number : co2 [stateTopic="petrows/5C:CF:7F:68:19:46/STATE", transformationPattern="JSONPATH:$.S8.CO2", unit="ppm"]
		Type switch : co2_led [stateTopic="petrows/5C:CF:7F:68:19:46/STATE", transformationPattern="JSONPATH:$.S8.led", on="1", off="0"]
		Type number : temperature [stateTopic="petrows/5C:CF:7F:68:19:46/STATE", transformationPattern="JSONPATH:$.DHT22.Temperature", unit="°C"]
		Type number : humidity [stateTopic="petrows/5C:CF:7F:68:19:46/STATE", transformationPattern="JSONPATH:$.DHT22.Humidity", unit="%"]
		Type number : rssi [stateTopic="petrows/5C:CF:7F:68:19:46/STATE", transformationPattern="JSONPATH:$.Wifi.RSSI"]
		Type string : bssid [stateTopic="petrows/5C:CF:7F:68:19:46/STATE", transformationPattern="JSONPATH:$.Wifi.BSSId"]
		Type datetime : activity [stateTopic="petrows/5C:CF:7F:68:19:46/STATE", transformationPattern="JS:codegen-activity.js"]
}
// SZ Main (0x842e14fffe0eb8a0)
// Livarno Home Lux ceiling light (14147206L) / https://www.zigbee2mqtt.io/devices/14147206L.html#lidl-14147206l
Thing mqtt:topic:openhab:sz_up_light "SZ Main" (mqtt:broker:openhab) {
	Channels:
		Type switch : state [stateTopic="zigbee2mqtt/sz_up_light", commandTopic="zigbee2mqtt/sz_up_light/set", transformationPattern="JSONPATH:$.state", transformationPatternOut="JS:codegen-cmd-value.js?f=state&t=1"]
		Type dimmer : dim [stateTopic="zigbee2mqtt/sz_up_light", commandTopic="zigbee2mqtt/sz_up_light/set", transformationPattern="REGEX:(.*\"brightness\".*)∩JS:codegen-brightness.js", transformationPatternOut="JS:codegen-cmd-value.js?f=brightness&t=1", min=1, max=254]
		Type dimmer : dim_fast [stateTopic="zigbee2mqtt/sz_up_light", commandTopic="zigbee2mqtt/sz_up_light/set", transformationPattern="REGEX:(.*\"brightness\".*)∩JS:codegen-brightness.js", transformationPatternOut="JS:codegen-cmd-value.js?f=brightness&t=0", min=1, max=254]
		Type dimmer : ct [stateTopic="zigbee2mqtt/sz_up_light", commandTopic="zigbee2mqtt/sz_up_light/set", transformationPattern="REGEX:(.*\"color_temp\".*)∩JSONPATH:$.color_temp", transformationPatternOut="JS:codegen-cmd-value.js?f=color_temp&t=3", min=150, max=500]
		Type number : link [stateTopic="zigbee2mqtt/sz_up_light", transformationPattern="REGEX:(.*\"linkquality\".*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/sz_up_light", transformationPattern="REGEX:(.*\"update_available\".*)∩JSONPATH:$.update_available", on="true", off="false"]
}
// SZ Main remote (0xb4e3f9fffeb35529)
// IKEA STYRBAR remote control N2 / https://www.zigbee2mqtt.io/devices/E2001_E2002.html
Thing mqtt:topic:openhab:sz_up_remote "SZ Main remote" (mqtt:broker:openhab) {
	Channels:
		Type string : action [stateTopic="zigbee2mqtt/sz_up_remote", commandTopic="zigbee2mqtt/sz_up_remote/set", transformationPattern="REGEX:(.*\"action\".*)∩JSONPATH:$.action", trigger="true"]
		Type dimmer : dim [stateTopic="zigbee2mqtt/sz_up_remote", transformationPattern="REGEX:(.*\"action_brightness_delta\".*)∩JSONPATH:$.brightness", min=0, max=255]
		Type number : action_dim [stateTopic="zigbee2mqtt/sz_up_remote", transformationPattern="REGEX:(.*\"action_brightness_delta\".*)∩JSONPATH:$.action_brightness_delta", trigger="true"]
		Type number : battery [stateTopic="zigbee2mqtt/sz_up_remote", transformationPattern="REGEX:(.*\"battery\".*)∩JSONPATH:$.battery", unit="%"]
		Type switch : battery_low [stateTopic="zigbee2mqtt/sz_up_remote", transformationPattern="REGEX:(.*\"battery\".*)∩JS:codegen-lowbat.js"]
		Type number : link [stateTopic="zigbee2mqtt/sz_up_remote", transformationPattern="REGEX:(.*\"linkquality\".*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/sz_up_remote", transformationPattern="REGEX:(.*\"update_available\".*)∩JSONPATH:$.update_available", on="true", off="false"]
}
// SZ remote L (0x94deb8fffea8a1f9)
// IKEA STYRBAR remote control N2 / https://www.zigbee2mqtt.io/devices/E2001_E2002.html
Thing mqtt:topic:openhab:sz_bed_l_remote "SZ remote L" (mqtt:broker:openhab) {
	Channels:
		Type string : action [stateTopic="zigbee2mqtt/sz_bed_l_remote", commandTopic="zigbee2mqtt/sz_bed_l_remote/set", transformationPattern="REGEX:(.*\"action\".*)∩JSONPATH:$.action", trigger="true"]
		Type dimmer : dim [stateTopic="zigbee2mqtt/sz_bed_l_remote", transformationPattern="REGEX:(.*\"action_brightness_delta\".*)∩JSONPATH:$.brightness", min=0, max=255]
		Type number : action_dim [stateTopic="zigbee2mqtt/sz_bed_l_remote", transformationPattern="REGEX:(.*\"action_brightness_delta\".*)∩JSONPATH:$.action_brightness_delta", trigger="true"]
		Type number : battery [stateTopic="zigbee2mqtt/sz_bed_l_remote", transformationPattern="REGEX:(.*\"battery\".*)∩JSONPATH:$.battery", unit="%"]
		Type switch : battery_low [stateTopic="zigbee2mqtt/sz_bed_l_remote", transformationPattern="REGEX:(.*\"battery\".*)∩JS:codegen-lowbat.js"]
		Type number : link [stateTopic="zigbee2mqtt/sz_bed_l_remote", transformationPattern="REGEX:(.*\"linkquality\".*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/sz_bed_l_remote", transformationPattern="REGEX:(.*\"update_available\".*)∩JSONPATH:$.update_available", on="true", off="false"]
}
// SZ remote R (0x540f57fffe1e420c)
// IKEA STYRBAR remote control N2 / https://www.zigbee2mqtt.io/devices/E2001_E2002.html
Thing mqtt:topic:openhab:sz_bed_r_remote "SZ remote R" (mqtt:broker:openhab) {
	Channels:
		Type string : action [stateTopic="zigbee2mqtt/sz_bed_r_remote", commandTopic="zigbee2mqtt/sz_bed_r_remote/set", transformationPattern="REGEX:(.*\"action\".*)∩JSONPATH:$.action", trigger="true"]
		Type dimmer : dim [stateTopic="zigbee2mqtt/sz_bed_r_remote", transformationPattern="REGEX:(.*\"action_brightness_delta\".*)∩JSONPATH:$.brightness", min=0, max=255]
		Type number : action_dim [stateTopic="zigbee2mqtt/sz_bed_r_remote", transformationPattern="REGEX:(.*\"action_brightness_delta\".*)∩JSONPATH:$.action_brightness_delta", trigger="true"]
		Type number : battery [stateTopic="zigbee2mqtt/sz_bed_r_remote", transformationPattern="REGEX:(.*\"battery\".*)∩JSONPATH:$.battery", unit="%"]
		Type switch : battery_low [stateTopic="zigbee2mqtt/sz_bed_r_remote", transformationPattern="REGEX:(.*\"battery\".*)∩JS:codegen-lowbat.js"]
		Type number : link [stateTopic="zigbee2mqtt/sz_bed_r_remote", transformationPattern="REGEX:(.*\"linkquality\".*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/sz_bed_r_remote", transformationPattern="REGEX:(.*\"update_available\".*)∩JSONPATH:$.update_available", on="true", off="false"]
}
// Bedroom curtains remote (0x8cf681fffe36d14e)
// IKEA TRADFRI open/close remote (E1766) / https://www.zigbee2mqtt.io/devices/E1766.html
Thing mqtt:topic:openhab:sz_curtain_remote "Bedroom curtains remote" (mqtt:broker:openhab) {
	Channels:
		Type string : action [stateTopic="zigbee2mqtt/sz_curtain_remote", commandTopic="zigbee2mqtt/sz_curtain_remote/set", transformationPattern="REGEX:(.*\"action\".*)∩JSONPATH:$.action", trigger="true"]
		Type number : battery [stateTopic="zigbee2mqtt/sz_curtain_remote", transformationPattern="REGEX:(.*\"battery\".*)∩JSONPATH:$.battery", unit="%"]
		Type switch : battery_low [stateTopic="zigbee2mqtt/sz_curtain_remote", transformationPattern="REGEX:(.*\"battery\".*)∩JS:codegen-lowbat.js"]
		Type number : link [stateTopic="zigbee2mqtt/sz_curtain_remote", transformationPattern="REGEX:(.*\"linkquality\".*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/sz_curtain_remote", transformationPattern="REGEX:(.*\"update_available\".*)∩JSONPATH:$.update_available", on="true", off="false"]
}
// SZ Bedside drawler (0x287681fffe95cba4)
// IKEA TRADFRI driver for wireless control / https://www.zigbee2mqtt.io/devices/ICPSHC24-10EU-IL-1.html
Thing mqtt:topic:openhab:sz_bedside_drawler_light "SZ Bedside drawler" (mqtt:broker:openhab) {
	Channels:
		Type switch : state [stateTopic="zigbee2mqtt/sz_bedside_drawler_light", commandTopic="zigbee2mqtt/sz_bedside_drawler_light/set", transformationPattern="JSONPATH:$.state", transformationPatternOut="JS:codegen-cmd-value.js?f=state&t=0"]
		Type dimmer : dim [stateTopic="zigbee2mqtt/sz_bedside_drawler_light", commandTopic="zigbee2mqtt/sz_bedside_drawler_light/set", transformationPattern="REGEX:(.*\"brightness\".*)∩JS:codegen-brightness.js", transformationPatternOut="JS:codegen-cmd-value.js?f=brightness&t=0", min=1, max=254]
		Type dimmer : dim_fast [stateTopic="zigbee2mqtt/sz_bedside_drawler_light", commandTopic="zigbee2mqtt/sz_bedside_drawler_light/set", transformationPattern="REGEX:(.*\"brightness\".*)∩JS:codegen-brightness.js", transformationPatternOut="JS:codegen-cmd-value.js?f=brightness&t=0", min=1, max=254]
		Type number : link [stateTopic="zigbee2mqtt/sz_bedside_drawler_light", transformationPattern="REGEX:(.*\"linkquality\".*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/sz_bedside_drawler_light", transformationPattern="REGEX:(.*\"update_available\".*)∩JSONPATH:$.update_available", on="true", off="false"]
}
// SZ Cabinet (0x90ab96fffe52f8fa)
// IKEA TRADFRI driver for wireless control / https://www.zigbee2mqtt.io/devices/ICPSHC24-10EU-IL-1.html
Thing mqtt:topic:openhab:sz_cabinet_light "SZ Cabinet" (mqtt:broker:openhab) {
	Channels:
		Type switch : state [stateTopic="zigbee2mqtt/sz_cabinet_light", commandTopic="zigbee2mqtt/sz_cabinet_light/set", transformationPattern="JSONPATH:$.state", transformationPatternOut="JS:codegen-cmd-value.js?f=state&t=0"]
		Type dimmer : dim [stateTopic="zigbee2mqtt/sz_cabinet_light", commandTopic="zigbee2mqtt/sz_cabinet_light/set", transformationPattern="REGEX:(.*\"brightness\".*)∩JS:codegen-brightness.js", transformationPatternOut="JS:codegen-cmd-value.js?f=brightness&t=0", min=1, max=254]
		Type dimmer : dim_fast [stateTopic="zigbee2mqtt/sz_cabinet_light", commandTopic="zigbee2mqtt/sz_cabinet_light/set", transformationPattern="REGEX:(.*\"brightness\".*)∩JS:codegen-brightness.js", transformationPatternOut="JS:codegen-cmd-value.js?f=brightness&t=0", min=1, max=254]
		Type number : link [stateTopic="zigbee2mqtt/sz_cabinet_light", transformationPattern="REGEX:(.*\"linkquality\".*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/sz_cabinet_light", transformationPattern="REGEX:(.*\"update_available\".*)∩JSONPATH:$.update_available", on="true", off="false"]
}
// SZ Bed L (0x9035eafffe93bfc6)
// TRADFRI bulb E12/E14 WS globe 450/470 lumen, dimmable, white spectrum, opal white / https://www.zigbee2mqtt.io/devices/LED2101G4.html
Thing mqtt:topic:openhab:sz_bed_light_l "SZ Bed L" (mqtt:broker:openhab) {
	Channels:
		Type switch : state [stateTopic="zigbee2mqtt/sz_bed_light_l", commandTopic="zigbee2mqtt/sz_bed_light_l/set", transformationPattern="JSONPATH:$.state", transformationPatternOut="JS:codegen-cmd-value.js?f=state&t=1"]
		Type dimmer : dim [stateTopic="zigbee2mqtt/sz_bed_light_l", commandTopic="zigbee2mqtt/sz_bed_light_l/set", transformationPattern="REGEX:(.*\"brightness\".*)∩JS:codegen-brightness.js", transformationPatternOut="JS:codegen-cmd-value.js?f=brightness&t=1", min=1, max=254]
		Type dimmer : dim_fast [stateTopic="zigbee2mqtt/sz_bed_light_l", commandTopic="zigbee2mqtt/sz_bed_light_l/set", transformationPattern="REGEX:(.*\"brightness\".*)∩JS:codegen-brightness.js", transformationPatternOut="JS:codegen-cmd-value.js?f=brightness&t=0", min=1, max=254]
		Type dimmer : ct [stateTopic="zigbee2mqtt/sz_bed_light_l", commandTopic="zigbee2mqtt/sz_bed_light_l/set", transformationPattern="REGEX:(.*\"color_temp\".*)∩JSONPATH:$.color_temp", transformationPatternOut="JS:codegen-cmd-value.js?f=color_temp&t=3", min=150, max=500]
		Type number : link [stateTopic="zigbee2mqtt/sz_bed_light_l", transformationPattern="REGEX:(.*\"linkquality\".*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/sz_bed_light_l", transformationPattern="REGEX:(.*\"update_available\".*)∩JSONPATH:$.update_available", on="true", off="false"]
}
// SZ Bed R (0x94deb8fffeda7949)
// TRADFRI bulb E12/E14 WS globe 450/470 lumen, dimmable, white spectrum, opal white / https://www.zigbee2mqtt.io/devices/LED2101G4.html
Thing mqtt:topic:openhab:sz_bed_light_r "SZ Bed R" (mqtt:broker:openhab) {
	Channels:
		Type switch : state [stateTopic="zigbee2mqtt/sz_bed_light_r", commandTopic="zigbee2mqtt/sz_bed_light_r/set", transformationPattern="JSONPATH:$.state", transformationPatternOut="JS:codegen-cmd-value.js?f=state&t=1"]
		Type dimmer : dim [stateTopic="zigbee2mqtt/sz_bed_light_r", commandTopic="zigbee2mqtt/sz_bed_light_r/set", transformationPattern="REGEX:(.*\"brightness\".*)∩JS:codegen-brightness.js", transformationPatternOut="JS:codegen-cmd-value.js?f=brightness&t=1", min=1, max=254]
		Type dimmer : dim_fast [stateTopic="zigbee2mqtt/sz_bed_light_r", commandTopic="zigbee2mqtt/sz_bed_light_r/set", transformationPattern="REGEX:(.*\"brightness\".*)∩JS:codegen-brightness.js", transformationPatternOut="JS:codegen-cmd-value.js?f=brightness&t=0", min=1, max=254]
		Type dimmer : ct [stateTopic="zigbee2mqtt/sz_bed_light_r", commandTopic="zigbee2mqtt/sz_bed_light_r/set", transformationPattern="REGEX:(.*\"color_temp\".*)∩JSONPATH:$.color_temp", transformationPatternOut="JS:codegen-cmd-value.js?f=color_temp&t=3", min=150, max=500]
		Type number : link [stateTopic="zigbee2mqtt/sz_bed_light_r", transformationPattern="REGEX:(.*\"linkquality\".*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/sz_bed_light_r", transformationPattern="REGEX:(.*\"update_available\".*)∩JSONPATH:$.update_available", on="true", off="false"]
}
// KU Climate (0xa4c138f5460e22dd)
// TuYa Temperature & humidity sensor / https://www.zigbee2mqtt.io/devices/TS0201.html
Thing mqtt:topic:openhab:ku_climate "KU Climate" (mqtt:broker:openhab) {
	Channels:
		Type number : temperature [stateTopic="zigbee2mqtt/ku_climate", transformationPattern="REGEX:(.*\"temperature\".*)∩JSONPATH:$.temperature", unit="C°"]
		Type number : humidity [stateTopic="zigbee2mqtt/ku_climate", transformationPattern="REGEX:(.*\"humidity\".*)∩JSONPATH:$.humidity", unit="%"]
		Type number : battery [stateTopic="zigbee2mqtt/ku_climate", transformationPattern="REGEX:(.*\"battery\".*)∩JSONPATH:$.battery", unit="%"]
		Type datetime : activity [stateTopic="zigbee2mqtt/ku_climate", transformationPattern="JS:codegen-activity.js"]
		Type switch : battery_low [stateTopic="zigbee2mqtt/ku_climate", transformationPattern="REGEX:(.*\"battery\".*)∩JS:codegen-lowbat.js"]
		Type number : link [stateTopic="zigbee2mqtt/ku_climate", transformationPattern="REGEX:(.*\"linkquality\".*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/ku_climate", transformationPattern="REGEX:(.*\"update_available\".*)∩JSONPATH:$.update_available", on="true", off="false"]
		Type datetime : activity [stateTopic="zigbee2mqtt/ku_climate", transformationPattern="JS:codegen-activity.js"]
}
// KU Light Button (Spüle) (0x00158d0001be5b2d)
// Xiaomi MiJia wireless switch (WXKG01LM) / https://www.zigbee2mqtt.io/devices/WXKG01LM.html
Thing mqtt:topic:openhab:ku_light_switch_spule "KU Light Button (Spüle)" (mqtt:broker:openhab) {
	Channels:
		Type string : action [stateTopic="zigbee2mqtt/ku_light_switch_spule", commandTopic="zigbee2mqtt/ku_light_switch_spule/set", transformationPattern="REGEX:(.*\"action\".*)∩JSONPATH:$.action", trigger="true"]
		Type number : battery [stateTopic="zigbee2mqtt/ku_light_switch_spule", transformationPattern="REGEX:(.*\"battery\".*)∩JSONPATH:$.battery", unit="%"]
		Type switch : battery_low [stateTopic="zigbee2mqtt/ku_light_switch_spule", transformationPattern="REGEX:(.*\"battery\".*)∩JS:codegen-lowbat.js"]
		Type number : link [stateTopic="zigbee2mqtt/ku_light_switch_spule", transformationPattern="REGEX:(.*\"linkquality\".*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/ku_light_switch_spule", transformationPattern="REGEX:(.*\"update_available\".*)∩JSONPATH:$.update_available", on="true", off="false"]
}
// KU Light Button (Kochfield) (0x680ae2fffeaf18d4)
// IKEA TRADFRI remote control (E1524/E1810) / https://www.zigbee2mqtt.io/devices/E1524_E1810.html
Thing mqtt:topic:openhab:ku_light_switch_kochfeld "KU Light Button (Kochfield)" (mqtt:broker:openhab) {
	Channels:
		Type string : action [stateTopic="zigbee2mqtt/ku_light_switch_kochfeld", commandTopic="zigbee2mqtt/ku_light_switch_kochfeld/set", transformationPattern="REGEX:(.*\"action\".*)∩JSONPATH:$.action", trigger="true"]
		Type number : battery [stateTopic="zigbee2mqtt/ku_light_switch_kochfeld", transformationPattern="REGEX:(.*\"battery\".*)∩JSONPATH:$.battery", unit="%"]
		Type switch : battery_low [stateTopic="zigbee2mqtt/ku_light_switch_kochfeld", transformationPattern="REGEX:(.*\"battery\".*)∩JS:codegen-lowbat.js"]
		Type number : link [stateTopic="zigbee2mqtt/ku_light_switch_kochfeld", transformationPattern="REGEX:(.*\"linkquality\".*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/ku_light_switch_kochfeld", transformationPattern="REGEX:(.*\"update_available\".*)∩JSONPATH:$.update_available", on="true", off="false"]
}
// KU Light Arbeit (0xec1bbdfffea37757)
// Lidl Silvercrest smart plug (EU, CH, FR, BS, DK) (HG06337) / https://www.zigbee2mqtt.io/devices/HG06337.html
Thing mqtt:topic:openhab:ku_light_arbeitplatte "KU Light Arbeit" (mqtt:broker:openhab) {
	Channels:
		Type switch : state [stateTopic="zigbee2mqtt/ku_light_arbeitplatte", commandTopic="zigbee2mqtt/ku_light_arbeitplatte/set", transformationPattern="JSONPATH:$.state", transformationPatternOut="JS:codegen-cmd-value.js?f=state&t=0"]
		Type number : link [stateTopic="zigbee2mqtt/ku_light_arbeitplatte", transformationPattern="REGEX:(.*\"linkquality\".*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/ku_light_arbeitplatte", transformationPattern="REGEX:(.*\"update_available\".*)∩JSONPATH:$.update_available", on="true", off="false"]
}
// KU Light Table SW (0x04cd15fffe789098)
// IKEA STYRBAR remote control N2 / https://www.zigbee2mqtt.io/devices/E2001_E2002.html
Thing mqtt:topic:openhab:ku_light_table_switch "KU Light Table SW" (mqtt:broker:openhab) {
	Channels:
		Type string : action [stateTopic="zigbee2mqtt/ku_light_table_switch", commandTopic="zigbee2mqtt/ku_light_table_switch/set", transformationPattern="REGEX:(.*\"action\".*)∩JSONPATH:$.action", trigger="true"]
		Type dimmer : dim [stateTopic="zigbee2mqtt/ku_light_table_switch", transformationPattern="REGEX:(.*\"action_brightness_delta\".*)∩JSONPATH:$.brightness", min=0, max=255]
		Type number : action_dim [stateTopic="zigbee2mqtt/ku_light_table_switch", transformationPattern="REGEX:(.*\"action_brightness_delta\".*)∩JSONPATH:$.action_brightness_delta", trigger="true"]
		Type number : battery [stateTopic="zigbee2mqtt/ku_light_table_switch", transformationPattern="REGEX:(.*\"battery\".*)∩JSONPATH:$.battery", unit="%"]
		Type switch : battery_low [stateTopic="zigbee2mqtt/ku_light_table_switch", transformationPattern="REGEX:(.*\"battery\".*)∩JS:codegen-lowbat.js"]
		Type number : link [stateTopic="zigbee2mqtt/ku_light_table_switch", transformationPattern="REGEX:(.*\"linkquality\".*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/ku_light_table_switch", transformationPattern="REGEX:(.*\"update_available\".*)∩JSONPATH:$.update_available", on="true", off="false"]
}
// KU Light Table (0xec1bbdfffe4695b5)
// IKEA TRADFRI LED bulb E26/E27 806 lumen, dimmable, warm white (LED1836G9) / https://www.zigbee2mqtt.io/devices/LED1836G9.html
Thing mqtt:topic:openhab:ku_light_table "KU Light Table" (mqtt:broker:openhab) {
	Channels:
		Type switch : state [stateTopic="zigbee2mqtt/ku_light_table", commandTopic="zigbee2mqtt/ku_light_table/set", transformationPattern="JSONPATH:$.state", transformationPatternOut="JS:codegen-cmd-value.js?f=state&t=1"]
		Type dimmer : dim [stateTopic="zigbee2mqtt/ku_light_table", commandTopic="zigbee2mqtt/ku_light_table/set", transformationPattern="REGEX:(.*\"brightness\".*)∩JS:codegen-brightness.js", transformationPatternOut="JS:codegen-cmd-value.js?f=brightness&t=3", min=1, max=254]
		Type dimmer : dim_fast [stateTopic="zigbee2mqtt/ku_light_table", commandTopic="zigbee2mqtt/ku_light_table/set", transformationPattern="REGEX:(.*\"brightness\".*)∩JS:codegen-brightness.js", transformationPatternOut="JS:codegen-cmd-value.js?f=brightness&t=0", min=1, max=254]
		Type number : link [stateTopic="zigbee2mqtt/ku_light_table", transformationPattern="REGEX:(.*\"linkquality\".*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/ku_light_table", transformationPattern="REGEX:(.*\"update_available\".*)∩JSONPATH:$.update_available", on="true", off="false"]
}
// KU Light SW (0xa4c138b192bc39c0)
// TS0601_switch - TuYa 1, 2, 3 or 4 gang switch (Router) / https://www.zigbee2mqtt.io/devices/TS0601_switch.html
Thing mqtt:topic:openhab:ku_light_switch "KU Light SW" (mqtt:broker:openhab) {
	Channels:
		Type switch : state_left [stateTopic="zigbee2mqtt/ku_light_switch", commandTopic="zigbee2mqtt/ku_light_switch/set", transformationPattern="JSONPATH:$.state_left", formatBeforePublish="{\"state_left\": \"%s\"}"]
		Type switch : state_right [stateTopic="zigbee2mqtt/ku_light_switch", commandTopic="zigbee2mqtt/ku_light_switch/set", transformationPattern="JSONPATH:$.state_right", formatBeforePublish="{\"state_right\": \"%s\"}"]
		Type number : link [stateTopic="zigbee2mqtt/ku_light_switch", transformationPattern="REGEX:(.*\"linkquality\".*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/ku_light_switch", transformationPattern="REGEX:(.*\"update_available\".*)∩JSONPATH:$.update_available", on="true", off="false"]
}
// KU Window Door (0xa4c1389dec8b9204)
// TuYa Rechargeable Zigbee contact sensor (SNTZ007) / https://www.zigbee2mqtt.io/devices/SNTZ007.html
Thing mqtt:topic:openhab:ku_window_door "KU Window Door" (mqtt:broker:openhab) {
	Channels:
		Type contact : contact [stateTopic="zigbee2mqtt/ku_window_door", transformationPattern="REGEX:(.*\"contact\".*)∩JSONPATH:$.contact", on="false", off="true"]
		Type number : battery [stateTopic="zigbee2mqtt/ku_window_door", transformationPattern="REGEX:(.*\"battery\".*)∩JSONPATH:$.battery", unit="%"]
		Type datetime : activity [stateTopic="zigbee2mqtt/ku_window_door", transformationPattern="JS:codegen-activity.js"]
		Type switch : battery_low [stateTopic="zigbee2mqtt/ku_window_door", transformationPattern="REGEX:(.*\"battery\".*)∩JS:codegen-lowbat.js"]
		Type number : link [stateTopic="zigbee2mqtt/ku_window_door", transformationPattern="REGEX:(.*\"linkquality\".*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/ku_window_door", transformationPattern="REGEX:(.*\"update_available\".*)∩JSONPATH:$.update_available", on="true", off="false"]
		Type datetime : activity [stateTopic="zigbee2mqtt/ku_window_door", transformationPattern="JS:codegen-activity.js"]
}
// Treppe Door sensor (0xccccccfffed82b91)
// TuYa Rechargeable Zigbee contact sensor (SNTZ007) / https://www.zigbee2mqtt.io/devices/SNTZ007.html
Thing mqtt:topic:openhab:tr_door_sensor "Treppe Door sensor" (mqtt:broker:openhab) {
	Channels:
		Type contact : contact [stateTopic="zigbee2mqtt/tr_door_sensor", transformationPattern="REGEX:(.*\"contact\".*)∩JSONPATH:$.contact", on="false", off="true"]
		Type number : battery [stateTopic="zigbee2mqtt/tr_door_sensor", transformationPattern="REGEX:(.*\"battery\".*)∩JSONPATH:$.battery", unit="%"]
		Type datetime : activity [stateTopic="zigbee2mqtt/tr_door_sensor", transformationPattern="JS:codegen-activity.js"]
		Type switch : battery_low [stateTopic="zigbee2mqtt/tr_door_sensor", transformationPattern="REGEX:(.*\"battery\".*)∩JS:codegen-lowbat.js"]
		Type number : link [stateTopic="zigbee2mqtt/tr_door_sensor", transformationPattern="REGEX:(.*\"linkquality\".*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/tr_door_sensor", transformationPattern="REGEX:(.*\"update_available\".*)∩JSONPATH:$.update_available", on="true", off="false"]
		Type datetime : activity [stateTopic="zigbee2mqtt/tr_door_sensor", transformationPattern="JS:codegen-activity.js"]
}
// Treppe Up switch (0x680ae2fffe1a92f3)
// IKEA TRADFRI ON/OFF switch (E1743) / https://www.zigbee2mqtt.io/devices/E1743.html
Thing mqtt:topic:openhab:tr_up_switch "Treppe Up switch" (mqtt:broker:openhab) {
	Channels:
		Type string : action [stateTopic="zigbee2mqtt/tr_up_switch", commandTopic="zigbee2mqtt/tr_up_switch/set", transformationPattern="REGEX:(.*\"action\".*)∩JSONPATH:$.action", trigger="true"]
		Type number : battery [stateTopic="zigbee2mqtt/tr_up_switch", transformationPattern="REGEX:(.*\"battery\".*)∩JSONPATH:$.battery", unit="%"]
		Type switch : battery_low [stateTopic="zigbee2mqtt/tr_up_switch", transformationPattern="REGEX:(.*\"battery\".*)∩JS:codegen-lowbat.js"]
		Type number : link [stateTopic="zigbee2mqtt/tr_up_switch", transformationPattern="REGEX:(.*\"linkquality\".*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/tr_up_switch", transformationPattern="REGEX:(.*\"update_available\".*)∩JSONPATH:$.update_available", on="true", off="false"]
}
// Treppe Down switch (0x04cd15fffe75c518)
// IKEA STYRBAR remote control N2 / https://www.zigbee2mqtt.io/devices/E2001_E2002.html
Thing mqtt:topic:openhab:tr_down_switch "Treppe Down switch" (mqtt:broker:openhab) {
	Channels:
		Type string : action [stateTopic="zigbee2mqtt/tr_down_switch", commandTopic="zigbee2mqtt/tr_down_switch/set", transformationPattern="REGEX:(.*\"action\".*)∩JSONPATH:$.action", trigger="true"]
		Type dimmer : dim [stateTopic="zigbee2mqtt/tr_down_switch", transformationPattern="REGEX:(.*\"action_brightness_delta\".*)∩JSONPATH:$.brightness", min=0, max=255]
		Type number : action_dim [stateTopic="zigbee2mqtt/tr_down_switch", transformationPattern="REGEX:(.*\"action_brightness_delta\".*)∩JSONPATH:$.action_brightness_delta", trigger="true"]
		Type number : battery [stateTopic="zigbee2mqtt/tr_down_switch", transformationPattern="REGEX:(.*\"battery\".*)∩JSONPATH:$.battery", unit="%"]
		Type switch : battery_low [stateTopic="zigbee2mqtt/tr_down_switch", transformationPattern="REGEX:(.*\"battery\".*)∩JS:codegen-lowbat.js"]
		Type number : link [stateTopic="zigbee2mqtt/tr_down_switch", transformationPattern="REGEX:(.*\"linkquality\".*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/tr_down_switch", transformationPattern="REGEX:(.*\"update_available\".*)∩JSONPATH:$.update_available", on="true", off="false"]
}
// Treppe Up light (0xd0cf5efffee892b0)
// IKEA TRADFRI LED bulb E27 1000 lumen, dimmable, white spectrum, opal white (LED1732G11) / https://www.zigbee2mqtt.io/devices/LED1732G11.html
Thing mqtt:topic:openhab:tr_up_light "Treppe Up light" (mqtt:broker:openhab) {
	Channels:
		Type switch : state [stateTopic="zigbee2mqtt/tr_up_light", commandTopic="zigbee2mqtt/tr_up_light/set", transformationPattern="JSONPATH:$.state", transformationPatternOut="JS:codegen-cmd-value.js?f=state&t=1"]
		Type dimmer : dim [stateTopic="zigbee2mqtt/tr_up_light", commandTopic="zigbee2mqtt/tr_up_light/set", transformationPattern="REGEX:(.*\"brightness\".*)∩JS:codegen-brightness.js", transformationPatternOut="JS:codegen-cmd-value.js?f=brightness&t=1", min=1, max=254]
		Type dimmer : dim_fast [stateTopic="zigbee2mqtt/tr_up_light", commandTopic="zigbee2mqtt/tr_up_light/set", transformationPattern="REGEX:(.*\"brightness\".*)∩JS:codegen-brightness.js", transformationPatternOut="JS:codegen-cmd-value.js?f=brightness&t=0", min=1, max=254]
		Type dimmer : ct [stateTopic="zigbee2mqtt/tr_up_light", commandTopic="zigbee2mqtt/tr_up_light/set", transformationPattern="REGEX:(.*\"color_temp\".*)∩JSONPATH:$.color_temp", transformationPatternOut="JS:codegen-cmd-value.js?f=color_temp&t=3", min=150, max=500]
		Type number : link [stateTopic="zigbee2mqtt/tr_up_light", transformationPattern="REGEX:(.*\"linkquality\".*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/tr_up_light", transformationPattern="REGEX:(.*\"update_available\".*)∩JSONPATH:$.update_available", on="true", off="false"]
}
// Treppe Down light (0x04cd15fffedb31f7)
// Livarno Home LED ceiling light (HG08008) / https://www.zigbee2mqtt.io/devices/HG08008.html#lidl-hg08008
Thing mqtt:topic:openhab:tr_down_light "Treppe Down light" (mqtt:broker:openhab) {
	Channels:
		Type switch : state [stateTopic="zigbee2mqtt/tr_down_light", commandTopic="zigbee2mqtt/tr_down_light/set", transformationPattern="JSONPATH:$.state", transformationPatternOut="JS:codegen-cmd-value.js?f=state&t=1"]
		Type dimmer : dim [stateTopic="zigbee2mqtt/tr_down_light", commandTopic="zigbee2mqtt/tr_down_light/set", transformationPattern="REGEX:(.*\"brightness\".*)∩JS:codegen-brightness.js", transformationPatternOut="JS:codegen-cmd-value.js?f=brightness&t=1", min=1, max=254]
		Type dimmer : dim_fast [stateTopic="zigbee2mqtt/tr_down_light", commandTopic="zigbee2mqtt/tr_down_light/set", transformationPattern="REGEX:(.*\"brightness\".*)∩JS:codegen-brightness.js", transformationPatternOut="JS:codegen-cmd-value.js?f=brightness&t=0", min=1, max=254]
		Type dimmer : ct [stateTopic="zigbee2mqtt/tr_down_light", commandTopic="zigbee2mqtt/tr_down_light/set", transformationPattern="REGEX:(.*\"color_temp\".*)∩JSONPATH:$.color_temp", transformationPatternOut="JS:codegen-cmd-value.js?f=color_temp&t=3", min=150, max=500]
		Type color : color [commandTopic="zigbee2mqtt/tr_down_light/set", transformationPatternOut="JS:codegen-cmd-color_xy.js"]
		Type string : color_mode [stateTopic="zigbee2mqtt/tr_down_light", transformationPattern="REGEX:(.*\"color_mode\".*)∩JSONPATH:$.color_mode"]
		Type number : link [stateTopic="zigbee2mqtt/tr_down_light", transformationPattern="REGEX:(.*\"linkquality\".*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/tr_down_light", transformationPattern="REGEX:(.*\"update_available\".*)∩JSONPATH:$.update_available", on="true", off="false"]
}
// Treppe motion (0xbc33acfffe872049)
// IKEA TRADFRI motion sensor (E1525/E1745) / https://www.zigbee2mqtt.io/devices/E1525_E1745.html
Thing mqtt:topic:openhab:tr_motion "Treppe motion" (mqtt:broker:openhab) {
	Channels:
		Type switch : occupancy [stateTopic="zigbee2mqtt/tr_motion", transformationPattern="REGEX:(.*\"occupancy\".*)∩JSONPATH:$.occupancy", on="true", off="false"]
		Type number : battery [stateTopic="zigbee2mqtt/tr_motion", transformationPattern="REGEX:(.*\"battery\".*)∩JSONPATH:$.battery", unit="%"]
		Type datetime : activity [stateTopic="zigbee2mqtt/tr_motion", transformationPattern="JS:codegen-activity.js"]
		Type switch : battery_low [stateTopic="zigbee2mqtt/tr_motion", transformationPattern="REGEX:(.*\"battery\".*)∩JS:codegen-lowbat.js"]
		Type number : link [stateTopic="zigbee2mqtt/tr_motion", transformationPattern="REGEX:(.*\"linkquality\".*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/tr_motion", transformationPattern="REGEX:(.*\"update_available\".*)∩JSONPATH:$.update_available", on="true", off="false"]
		Type datetime : activity [stateTopic="zigbee2mqtt/tr_motion", transformationPattern="JS:codegen-activity.js"]
}
// Treppe climate (0xa4c1383cc92cbbd2)
// TuYa Temperature & humidity sensor / https://www.zigbee2mqtt.io/devices/TS0201.html
Thing mqtt:topic:openhab:tr_climate "Treppe climate" (mqtt:broker:openhab) {
	Channels:
		Type number : temperature [stateTopic="zigbee2mqtt/tr_climate", transformationPattern="REGEX:(.*\"temperature\".*)∩JSONPATH:$.temperature", unit="C°"]
		Type number : humidity [stateTopic="zigbee2mqtt/tr_climate", transformationPattern="REGEX:(.*\"humidity\".*)∩JSONPATH:$.humidity", unit="%"]
		Type number : battery [stateTopic="zigbee2mqtt/tr_climate", transformationPattern="REGEX:(.*\"battery\".*)∩JSONPATH:$.battery", unit="%"]
		Type datetime : activity [stateTopic="zigbee2mqtt/tr_climate", transformationPattern="JS:codegen-activity.js"]
		Type switch : battery_low [stateTopic="zigbee2mqtt/tr_climate", transformationPattern="REGEX:(.*\"battery\".*)∩JS:codegen-lowbat.js"]
		Type number : link [stateTopic="zigbee2mqtt/tr_climate", transformationPattern="REGEX:(.*\"linkquality\".*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/tr_climate", transformationPattern="REGEX:(.*\"update_available\".*)∩JSONPATH:$.update_available", on="true", off="false"]
		Type datetime : activity [stateTopic="zigbee2mqtt/tr_climate", transformationPattern="JS:codegen-activity.js"]
}
// KG Window (Cabinet) (0xccccccfffed82ba3)
// TuYa Rechargeable Zigbee contact sensor (SNTZ007) / https://www.zigbee2mqtt.io/devices/SNTZ007.html
Thing mqtt:topic:openhab:kg_window_1 "KG Window (Cabinet)" (mqtt:broker:openhab) {
	Channels:
		Type contact : contact [stateTopic="zigbee2mqtt/kg_window_1", transformationPattern="REGEX:(.*\"contact\".*)∩JSONPATH:$.contact", on="false", off="true"]
		Type number : battery [stateTopic="zigbee2mqtt/kg_window_1", transformationPattern="REGEX:(.*\"battery\".*)∩JSONPATH:$.battery", unit="%"]
		Type datetime : activity [stateTopic="zigbee2mqtt/kg_window_1", transformationPattern="JS:codegen-activity.js"]
		Type switch : battery_low [stateTopic="zigbee2mqtt/kg_window_1", transformationPattern="REGEX:(.*\"battery\".*)∩JS:codegen-lowbat.js"]
		Type number : link [stateTopic="zigbee2mqtt/kg_window_1", transformationPattern="REGEX:(.*\"linkquality\".*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/kg_window_1", transformationPattern="REGEX:(.*\"update_available\".*)∩JSONPATH:$.update_available", on="true", off="false"]
		Type datetime : activity [stateTopic="zigbee2mqtt/kg_window_1", transformationPattern="JS:codegen-activity.js"]
}
// KG Window (Hobbyraum) (0xa4c1381a072fcf8b)
// TuYa Rechargeable Zigbee contact sensor (SNTZ007) / https://www.zigbee2mqtt.io/devices/SNTZ007.html
Thing mqtt:topic:openhab:kg_window_2 "KG Window (Hobbyraum)" (mqtt:broker:openhab) {
	Channels:
		Type contact : contact [stateTopic="zigbee2mqtt/kg_window_2", transformationPattern="REGEX:(.*\"contact\".*)∩JSONPATH:$.contact", on="false", off="true"]
		Type number : battery [stateTopic="zigbee2mqtt/kg_window_2", transformationPattern="REGEX:(.*\"battery\".*)∩JSONPATH:$.battery", unit="%"]
		Type datetime : activity [stateTopic="zigbee2mqtt/kg_window_2", transformationPattern="JS:codegen-activity.js"]
		Type switch : battery_low [stateTopic="zigbee2mqtt/kg_window_2", transformationPattern="REGEX:(.*\"battery\".*)∩JS:codegen-lowbat.js"]
		Type number : link [stateTopic="zigbee2mqtt/kg_window_2", transformationPattern="REGEX:(.*\"linkquality\".*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/kg_window_2", transformationPattern="REGEX:(.*\"update_available\".*)∩JSONPATH:$.update_available", on="true", off="false"]
		Type datetime : activity [stateTopic="zigbee2mqtt/kg_window_2", transformationPattern="JS:codegen-activity.js"]
}
// KG Cabinet door (0xa4c138312d2c455f)
// TuYa Rechargeable Zigbee contact sensor (SNTZ007) / https://www.zigbee2mqtt.io/devices/SNTZ007.html
Thing mqtt:topic:openhab:kg_cabinet_door "KG Cabinet door" (mqtt:broker:openhab) {
	Channels:
		Type contact : contact [stateTopic="zigbee2mqtt/kg_cabinet_door", transformationPattern="REGEX:(.*\"contact\".*)∩JSONPATH:$.contact", on="false", off="true"]
		Type number : battery [stateTopic="zigbee2mqtt/kg_cabinet_door", transformationPattern="REGEX:(.*\"battery\".*)∩JSONPATH:$.battery", unit="%"]
		Type datetime : activity [stateTopic="zigbee2mqtt/kg_cabinet_door", transformationPattern="JS:codegen-activity.js"]
		Type switch : battery_low [stateTopic="zigbee2mqtt/kg_cabinet_door", transformationPattern="REGEX:(.*\"battery\".*)∩JS:codegen-lowbat.js"]
		Type number : link [stateTopic="zigbee2mqtt/kg_cabinet_door", transformationPattern="REGEX:(.*\"linkquality\".*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/kg_cabinet_door", transformationPattern="REGEX:(.*\"update_available\".*)∩JSONPATH:$.update_available", on="true", off="false"]
		Type datetime : activity [stateTopic="zigbee2mqtt/kg_cabinet_door", transformationPattern="JS:codegen-activity.js"]
}
// KG Climate (0xa4c138234138f73a)
// TuYa Temperature & humidity sensor / https://www.zigbee2mqtt.io/devices/TS0201.html
Thing mqtt:topic:openhab:kg_climate "KG Climate" (mqtt:broker:openhab) {
	Channels:
		Type number : temperature [stateTopic="zigbee2mqtt/kg_climate", transformationPattern="REGEX:(.*\"temperature\".*)∩JSONPATH:$.temperature", unit="C°"]
		Type number : humidity [stateTopic="zigbee2mqtt/kg_climate", transformationPattern="REGEX:(.*\"humidity\".*)∩JSONPATH:$.humidity", unit="%"]
		Type number : battery [stateTopic="zigbee2mqtt/kg_climate", transformationPattern="REGEX:(.*\"battery\".*)∩JSONPATH:$.battery", unit="%"]
		Type datetime : activity [stateTopic="zigbee2mqtt/kg_climate", transformationPattern="JS:codegen-activity.js"]
		Type switch : battery_low [stateTopic="zigbee2mqtt/kg_climate", transformationPattern="REGEX:(.*\"battery\".*)∩JS:codegen-lowbat.js"]
		Type number : link [stateTopic="zigbee2mqtt/kg_climate", transformationPattern="REGEX:(.*\"linkquality\".*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/kg_climate", transformationPattern="REGEX:(.*\"update_available\".*)∩JSONPATH:$.update_available", on="true", off="false"]
		Type datetime : activity [stateTopic="zigbee2mqtt/kg_climate", transformationPattern="JS:codegen-activity.js"]
}
// Petro Desktop up light 1 (0x04cd15fffe35f24e)
// IKEA TRADFRI LED bulb E27 1000 lumen, dimmable, white spectrum, opal white (LED1732G11) / https://www.zigbee2mqtt.io/devices/LED1732G11.html
Thing mqtt:topic:openhab:desktop_petro_up_light_1 "Petro Desktop up light 1" (mqtt:broker:openhab) {
	Channels:
		Type switch : state [stateTopic="zigbee2mqtt/desktop_petro_up_light_1", commandTopic="zigbee2mqtt/desktop_petro_up_light_1/set", transformationPattern="JSONPATH:$.state", transformationPatternOut="JS:codegen-cmd-value.js?f=state&t=1"]
		Type dimmer : dim [stateTopic="zigbee2mqtt/desktop_petro_up_light_1", commandTopic="zigbee2mqtt/desktop_petro_up_light_1/set", transformationPattern="REGEX:(.*\"brightness\".*)∩JS:codegen-brightness.js", transformationPatternOut="JS:codegen-cmd-value.js?f=brightness&t=3", min=1, max=254]
		Type dimmer : dim_fast [stateTopic="zigbee2mqtt/desktop_petro_up_light_1", commandTopic="zigbee2mqtt/desktop_petro_up_light_1/set", transformationPattern="REGEX:(.*\"brightness\".*)∩JS:codegen-brightness.js", transformationPatternOut="JS:codegen-cmd-value.js?f=brightness&t=0", min=1, max=254]
		Type dimmer : ct [stateTopic="zigbee2mqtt/desktop_petro_up_light_1", commandTopic="zigbee2mqtt/desktop_petro_up_light_1/set", transformationPattern="REGEX:(.*\"color_temp\".*)∩JSONPATH:$.color_temp", transformationPatternOut="JS:codegen-cmd-value.js?f=color_temp&t=3", min=150, max=500]
		Type number : link [stateTopic="zigbee2mqtt/desktop_petro_up_light_1", transformationPattern="REGEX:(.*\"linkquality\".*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/desktop_petro_up_light_1", transformationPattern="REGEX:(.*\"update_available\".*)∩JSONPATH:$.update_available", on="true", off="false"]
}
// Petro Desktop up light 2 (0x04cd15fffe6bf002)
// IKEA TRADFRI LED bulb E27 1000 lumen, dimmable, white spectrum, opal white (LED1732G11) / https://www.zigbee2mqtt.io/devices/LED1732G11.html
Thing mqtt:topic:openhab:desktop_petro_up_light_2 "Petro Desktop up light 2" (mqtt:broker:openhab) {
	Channels:
		Type switch : state [stateTopic="zigbee2mqtt/desktop_petro_up_light_2", commandTopic="zigbee2mqtt/desktop_petro_up_light_2/set", transformationPattern="JSONPATH:$.state", transformationPatternOut="JS:codegen-cmd-value.js?f=state&t=1"]
		Type dimmer : dim [stateTopic="zigbee2mqtt/desktop_petro_up_light_2", commandTopic="zigbee2mqtt/desktop_petro_up_light_2/set", transformationPattern="REGEX:(.*\"brightness\".*)∩JS:codegen-brightness.js", transformationPatternOut="JS:codegen-cmd-value.js?f=brightness&t=3", min=1, max=254]
		Type dimmer : dim_fast [stateTopic="zigbee2mqtt/desktop_petro_up_light_2", commandTopic="zigbee2mqtt/desktop_petro_up_light_2/set", transformationPattern="REGEX:(.*\"brightness\".*)∩JS:codegen-brightness.js", transformationPatternOut="JS:codegen-cmd-value.js?f=brightness&t=0", min=1, max=254]
		Type dimmer : ct [stateTopic="zigbee2mqtt/desktop_petro_up_light_2", commandTopic="zigbee2mqtt/desktop_petro_up_light_2/set", transformationPattern="REGEX:(.*\"color_temp\".*)∩JSONPATH:$.color_temp", transformationPatternOut="JS:codegen-cmd-value.js?f=color_temp&t=3", min=150, max=500]
		Type number : link [stateTopic="zigbee2mqtt/desktop_petro_up_light_2", transformationPattern="REGEX:(.*\"linkquality\".*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/desktop_petro_up_light_2", transformationPattern="REGEX:(.*\"update_available\".*)∩JSONPATH:$.update_available", on="true", off="false"]
}
// Petro Desktop up light 3 (0x04cd15fffe73ecb6)
// IKEA TRADFRI LED bulb E27 1000 lumen, dimmable, white spectrum, opal white (LED1732G11) / https://www.zigbee2mqtt.io/devices/LED1732G11.html
Thing mqtt:topic:openhab:desktop_petro_up_light_3 "Petro Desktop up light 3" (mqtt:broker:openhab) {
	Channels:
		Type switch : state [stateTopic="zigbee2mqtt/desktop_petro_up_light_3", commandTopic="zigbee2mqtt/desktop_petro_up_light_3/set", transformationPattern="JSONPATH:$.state", transformationPatternOut="JS:codegen-cmd-value.js?f=state&t=1"]
		Type dimmer : dim [stateTopic="zigbee2mqtt/desktop_petro_up_light_3", commandTopic="zigbee2mqtt/desktop_petro_up_light_3/set", transformationPattern="REGEX:(.*\"brightness\".*)∩JS:codegen-brightness.js", transformationPatternOut="JS:codegen-cmd-value.js?f=brightness&t=3", min=1, max=254]
		Type dimmer : dim_fast [stateTopic="zigbee2mqtt/desktop_petro_up_light_3", commandTopic="zigbee2mqtt/desktop_petro_up_light_3/set", transformationPattern="REGEX:(.*\"brightness\".*)∩JS:codegen-brightness.js", transformationPatternOut="JS:codegen-cmd-value.js?f=brightness&t=0", min=1, max=254]
		Type dimmer : ct [stateTopic="zigbee2mqtt/desktop_petro_up_light_3", commandTopic="zigbee2mqtt/desktop_petro_up_light_3/set", transformationPattern="REGEX:(.*\"color_temp\".*)∩JSONPATH:$.color_temp", transformationPatternOut="JS:codegen-cmd-value.js?f=color_temp&t=3", min=150, max=500]
		Type number : link [stateTopic="zigbee2mqtt/desktop_petro_up_light_3", transformationPattern="REGEX:(.*\"linkquality\".*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/desktop_petro_up_light_3", transformationPattern="REGEX:(.*\"update_available\".*)∩JSONPATH:$.update_available", on="true", off="false"]
}
// Petro Desktop light (0xccccccfffed8ef9d)
// IKEA TRADFRI LED bulb E27 806 lumen, dimmable, white spectrum, clear (LED1736G9) / https://www.zigbee2mqtt.io/devices/LED1736G9.html
Thing mqtt:topic:openhab:desktop_petro_light "Petro Desktop light" (mqtt:broker:openhab) {
	Channels:
		Type switch : state [stateTopic="zigbee2mqtt/desktop_petro_light", commandTopic="zigbee2mqtt/desktop_petro_light/set", transformationPattern="JSONPATH:$.state", transformationPatternOut="JS:codegen-cmd-value.js?f=state&t=1"]
		Type dimmer : dim [stateTopic="zigbee2mqtt/desktop_petro_light", commandTopic="zigbee2mqtt/desktop_petro_light/set", transformationPattern="REGEX:(.*\"brightness\".*)∩JS:codegen-brightness.js", transformationPatternOut="JS:codegen-cmd-value.js?f=brightness&t=3", min=1, max=254]
		Type dimmer : dim_fast [stateTopic="zigbee2mqtt/desktop_petro_light", commandTopic="zigbee2mqtt/desktop_petro_light/set", transformationPattern="REGEX:(.*\"brightness\".*)∩JS:codegen-brightness.js", transformationPatternOut="JS:codegen-cmd-value.js?f=brightness&t=0", min=1, max=254]
		Type dimmer : ct [stateTopic="zigbee2mqtt/desktop_petro_light", commandTopic="zigbee2mqtt/desktop_petro_light/set", transformationPattern="REGEX:(.*\"color_temp\".*)∩JSONPATH:$.color_temp", transformationPatternOut="JS:codegen-cmd-value.js?f=color_temp&t=3", min=150, max=500]
		Type number : link [stateTopic="zigbee2mqtt/desktop_petro_light", transformationPattern="REGEX:(.*\"linkquality\".*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/desktop_petro_light", transformationPattern="REGEX:(.*\"update_available\".*)∩JSONPATH:$.update_available", on="true", off="false"]
}
// Petro Desktop PC (desktop_petro_pc_power)
// Sonoff Mini Switch / https://templates.blakadder.com/sonoff_mini.html
Thing mqtt:topic:openhab:desktop_petro_pc_power "Petro Desktop PC" (mqtt:broker:openhab) {
	Channels:
		Type number : rssi [stateTopic="tele/desktop_petro_pc_power/STATE", transformationPattern="JSONPATH:$.Wifi.RSSI"]
		Type string : bssid [stateTopic="tele/desktop_petro_pc_power/STATE", transformationPattern="JSONPATH:$.Wifi.BSSId"]
		Type number : la [stateTopic="tele/desktop_petro_pc_power/STATE", transformationPattern="JSONPATH:$.LoadAvg"]
		Type datetime : activity [stateTopic="tele/desktop_petro_pc_power/STATE", transformationPattern="JS:codegen-activity.js"]
		Type switch : POWER [stateTopic="stat/desktop_petro_pc_power/RESULT", transformationPattern="JSONPATH:$.POWER", commandTopic="cmnd/desktop_petro_pc_power/POWER", on="ON", off="OFF"]
}
// Petro Desktop remote (0x000d6ffffee8357d)
// IKEA TRADFRI remote control (E1524/E1810) / https://www.zigbee2mqtt.io/devices/E1524_E1810.html
Thing mqtt:topic:openhab:desktop_petro_remote "Petro Desktop remote" (mqtt:broker:openhab) {
	Channels:
		Type string : action [stateTopic="zigbee2mqtt/desktop_petro_remote", commandTopic="zigbee2mqtt/desktop_petro_remote/set", transformationPattern="REGEX:(.*\"action\".*)∩JSONPATH:$.action", trigger="true"]
		Type number : battery [stateTopic="zigbee2mqtt/desktop_petro_remote", transformationPattern="REGEX:(.*\"battery\".*)∩JSONPATH:$.battery", unit="%"]
		Type switch : battery_low [stateTopic="zigbee2mqtt/desktop_petro_remote", transformationPattern="REGEX:(.*\"battery\".*)∩JS:codegen-lowbat.js"]
		Type number : link [stateTopic="zigbee2mqtt/desktop_petro_remote", transformationPattern="REGEX:(.*\"linkquality\".*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/desktop_petro_remote", transformationPattern="REGEX:(.*\"update_available\".*)∩JSONPATH:$.update_available", on="true", off="false"]
}
// KG Hobbyraum (Work light) (0x7cb03eaa0a0a1103)
// OSRAM Smart+ plug / https://www.zigbee2mqtt.io/devices/AB3257001NJ.html
Thing mqtt:topic:openhab:kg_main1_work_light "KG Hobbyraum (Work light)" (mqtt:broker:openhab) {
	Channels:
		Type switch : state [stateTopic="zigbee2mqtt/kg_main1_work_light", commandTopic="zigbee2mqtt/kg_main1_work_light/set", transformationPattern="JSONPATH:$.state", transformationPatternOut="JS:codegen-cmd-value.js?f=state&t=0"]
		Type number : link [stateTopic="zigbee2mqtt/kg_main1_work_light", transformationPattern="REGEX:(.*\"linkquality\".*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/kg_main1_work_light", transformationPattern="REGEX:(.*\"update_available\".*)∩JSONPATH:$.update_available", on="true", off="false"]
}
// KG Hobbyraum (Workshop) (kg_main1_light)
// Sonoff Touch EU Switch (1 gang) / https://templates.blakadder.com/sonoff_touch_eu.html
Thing mqtt:topic:openhab:kg_main1_light "KG Hobbyraum (Workshop)" (mqtt:broker:openhab) {
	Channels:
		Type number : rssi [stateTopic="tele/kg_main1_light/STATE", transformationPattern="JSONPATH:$.Wifi.RSSI"]
		Type string : bssid [stateTopic="tele/kg_main1_light/STATE", transformationPattern="JSONPATH:$.Wifi.BSSId"]
		Type number : la [stateTopic="tele/kg_main1_light/STATE", transformationPattern="JSONPATH:$.LoadAvg"]
		Type datetime : activity [stateTopic="tele/kg_main1_light/STATE", transformationPattern="JS:codegen-activity.js"]
		Type switch : POWER [stateTopic="stat/kg_main1_light/RESULT", transformationPattern="JSONPATH:$.POWER", commandTopic="cmnd/kg_main1_light/POWER", on="ON", off="OFF"]
}
// KG Hobbyraum (Haupt) (kg_main2_light)
// Sonoff Touch EU Switch (1 gang) / https://templates.blakadder.com/sonoff_touch_eu.html
Thing mqtt:topic:openhab:kg_main2_light "KG Hobbyraum (Haupt)" (mqtt:broker:openhab) {
	Channels:
		Type number : rssi [stateTopic="tele/kg_main2_light/STATE", transformationPattern="JSONPATH:$.Wifi.RSSI"]
		Type string : bssid [stateTopic="tele/kg_main2_light/STATE", transformationPattern="JSONPATH:$.Wifi.BSSId"]
		Type number : la [stateTopic="tele/kg_main2_light/STATE", transformationPattern="JSONPATH:$.LoadAvg"]
		Type datetime : activity [stateTopic="tele/kg_main2_light/STATE", transformationPattern="JS:codegen-activity.js"]
		Type switch : POWER [stateTopic="stat/kg_main2_light/RESULT", transformationPattern="JSONPATH:$.POWER", commandTopic="cmnd/kg_main2_light/POWER", on="ON", off="OFF"]
}
// KG Heuzung (Haupt) (kg_hz_main_light)
// Sonoff Mini Switch / https://templates.blakadder.com/sonoff_mini.html
Thing mqtt:topic:openhab:kg_hz_main_light "KG Heuzung (Haupt)" (mqtt:broker:openhab) {
	Channels:
		Type number : rssi [stateTopic="tele/kg_hz_main_light/STATE", transformationPattern="JSONPATH:$.Wifi.RSSI"]
		Type string : bssid [stateTopic="tele/kg_hz_main_light/STATE", transformationPattern="JSONPATH:$.Wifi.BSSId"]
		Type number : la [stateTopic="tele/kg_hz_main_light/STATE", transformationPattern="JSONPATH:$.LoadAvg"]
		Type datetime : activity [stateTopic="tele/kg_hz_main_light/STATE", transformationPattern="JS:codegen-activity.js"]
		Type switch : POWER [stateTopic="stat/kg_hz_main_light/RESULT", transformationPattern="JSONPATH:$.POWER", commandTopic="cmnd/kg_hz_main_light/POWER", on="ON", off="OFF"]
}
// Garden water (garten_wasser_sw)
// Sonoff Mini Switch / https://templates.blakadder.com/sonoff_mini.html
Thing mqtt:topic:openhab:garten_wasser_sw "Garden water" (mqtt:broker:openhab) {
	Channels:
		Type number : rssi [stateTopic="tele/garten_wasser_sw/STATE", transformationPattern="JSONPATH:$.Wifi.RSSI"]
		Type string : bssid [stateTopic="tele/garten_wasser_sw/STATE", transformationPattern="JSONPATH:$.Wifi.BSSId"]
		Type number : la [stateTopic="tele/garten_wasser_sw/STATE", transformationPattern="JSONPATH:$.LoadAvg"]
		Type datetime : activity [stateTopic="tele/garten_wasser_sw/STATE", transformationPattern="JS:codegen-activity.js"]
		Type switch : POWER [stateTopic="stat/garten_wasser_sw/RESULT", transformationPattern="JSONPATH:$.POWER", commandTopic="cmnd/garten_wasser_sw/POWER", on="ON", off="OFF"]
}
// Warehouse 3 leak (0x00158d0006b7aa81)
// Xiaomi Aqara water leak sensor (SJCGQ11LM) / https://www.zigbee2mqtt.io/devices/SJCGQ11LM.html
Thing mqtt:topic:openhab:garten_wasser_leak "Warehouse 3 leak" (mqtt:broker:openhab) {
	Channels:
		Type switch : leak [stateTopic="zigbee2mqtt/garten_wasser_leak", transformationPattern="REGEX:(.*\"leak\".*)∩JSONPATH:$.leak", on="true", off="false"]
		Type number : battery [stateTopic="zigbee2mqtt/garten_wasser_leak", transformationPattern="REGEX:(.*\"battery\".*)∩JSONPATH:$.battery", unit="%"]
		Type datetime : activity [stateTopic="zigbee2mqtt/garten_wasser_leak", transformationPattern="JS:codegen-activity.js"]
		Type switch : battery_low [stateTopic="zigbee2mqtt/garten_wasser_leak", transformationPattern="REGEX:(.*\"battery\".*)∩JS:codegen-lowbat.js"]
		Type number : link [stateTopic="zigbee2mqtt/garten_wasser_leak", transformationPattern="REGEX:(.*\"linkquality\".*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/garten_wasser_leak", transformationPattern="REGEX:(.*\"update_available\".*)∩JSONPATH:$.update_available", on="true", off="false"]
		Type datetime : activity [stateTopic="zigbee2mqtt/garten_wasser_leak", transformationPattern="JS:codegen-activity.js"]
}
// KG Lager 1 (Haupt) (kg_lager1_main_light)
// Sonoff Mini Switch / https://templates.blakadder.com/sonoff_mini.html
Thing mqtt:topic:openhab:kg_lager1_main_light "KG Lager 1 (Haupt)" (mqtt:broker:openhab) {
	Channels:
		Type number : rssi [stateTopic="tele/kg_lager1_main_light/STATE", transformationPattern="JSONPATH:$.Wifi.RSSI"]
		Type string : bssid [stateTopic="tele/kg_lager1_main_light/STATE", transformationPattern="JSONPATH:$.Wifi.BSSId"]
		Type number : la [stateTopic="tele/kg_lager1_main_light/STATE", transformationPattern="JSONPATH:$.LoadAvg"]
		Type datetime : activity [stateTopic="tele/kg_lager1_main_light/STATE", transformationPattern="JS:codegen-activity.js"]
		Type switch : POWER [stateTopic="stat/kg_lager1_main_light/RESULT", transformationPattern="JSONPATH:$.POWER", commandTopic="cmnd/kg_lager1_main_light/POWER", on="ON", off="OFF"]
}
// KG Lager 3 Climate (0xa4c1381155f63287)
// TuYa Temperature & humidity sensor / https://www.zigbee2mqtt.io/devices/TS0201.html
Thing mqtt:topic:openhab:lg3_climate "KG Lager 3 Climate" (mqtt:broker:openhab) {
	Channels:
		Type number : temperature [stateTopic="zigbee2mqtt/lg3_climate", transformationPattern="REGEX:(.*\"temperature\".*)∩JSONPATH:$.temperature", unit="C°"]
		Type number : humidity [stateTopic="zigbee2mqtt/lg3_climate", transformationPattern="REGEX:(.*\"humidity\".*)∩JSONPATH:$.humidity", unit="%"]
		Type number : battery [stateTopic="zigbee2mqtt/lg3_climate", transformationPattern="REGEX:(.*\"battery\".*)∩JSONPATH:$.battery", unit="%"]
		Type datetime : activity [stateTopic="zigbee2mqtt/lg3_climate", transformationPattern="JS:codegen-activity.js"]
		Type switch : battery_low [stateTopic="zigbee2mqtt/lg3_climate", transformationPattern="REGEX:(.*\"battery\".*)∩JS:codegen-lowbat.js"]
		Type number : link [stateTopic="zigbee2mqtt/lg3_climate", transformationPattern="REGEX:(.*\"linkquality\".*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/lg3_climate", transformationPattern="REGEX:(.*\"update_available\".*)∩JSONPATH:$.update_available", on="true", off="false"]
		Type datetime : activity [stateTopic="zigbee2mqtt/lg3_climate", transformationPattern="JS:codegen-activity.js"]
}
// KG Lager 3 motion (0x04cd15fffe873cb7)
// IKEA TRADFRI motion sensor (E1525/E1745) / https://www.zigbee2mqtt.io/devices/E1525_E1745.html
Thing mqtt:topic:openhab:kg_lager3_motion "KG Lager 3 motion" (mqtt:broker:openhab) {
	Channels:
		Type switch : occupancy [stateTopic="zigbee2mqtt/kg_lager3_motion", transformationPattern="REGEX:(.*\"occupancy\".*)∩JSONPATH:$.occupancy", on="true", off="false"]
		Type number : battery [stateTopic="zigbee2mqtt/kg_lager3_motion", transformationPattern="REGEX:(.*\"battery\".*)∩JSONPATH:$.battery", unit="%"]
		Type datetime : activity [stateTopic="zigbee2mqtt/kg_lager3_motion", transformationPattern="JS:codegen-activity.js"]
		Type switch : battery_low [stateTopic="zigbee2mqtt/kg_lager3_motion", transformationPattern="REGEX:(.*\"battery\".*)∩JS:codegen-lowbat.js"]
		Type number : link [stateTopic="zigbee2mqtt/kg_lager3_motion", transformationPattern="REGEX:(.*\"linkquality\".*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/kg_lager3_motion", transformationPattern="REGEX:(.*\"update_available\".*)∩JSONPATH:$.update_available", on="true", off="false"]
		Type datetime : activity [stateTopic="zigbee2mqtt/kg_lager3_motion", transformationPattern="JS:codegen-activity.js"]
}
// KG Lager 3 door (0xa4c138a52c4e5c19)
// TuYa Rechargeable Zigbee contact sensor (TS0203) / https://www.zigbee2mqtt.io/devices/TS0203.html#tuya-ts0203
Thing mqtt:topic:openhab:kg_lager3_door "KG Lager 3 door" (mqtt:broker:openhab) {
	Channels:
		Type contact : contact [stateTopic="zigbee2mqtt/kg_lager3_door", transformationPattern="REGEX:(.*\"contact\".*)∩JSONPATH:$.contact", on="false", off="true"]
		Type number : battery [stateTopic="zigbee2mqtt/kg_lager3_door", transformationPattern="REGEX:(.*\"battery\".*)∩JSONPATH:$.battery", unit="%"]
		Type datetime : activity [stateTopic="zigbee2mqtt/kg_lager3_door", transformationPattern="JS:codegen-activity.js"]
		Type switch : battery_low [stateTopic="zigbee2mqtt/kg_lager3_door", transformationPattern="REGEX:(.*\"battery\".*)∩JS:codegen-lowbat.js"]
		Type number : link [stateTopic="zigbee2mqtt/kg_lager3_door", transformationPattern="REGEX:(.*\"linkquality\".*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/kg_lager3_door", transformationPattern="REGEX:(.*\"update_available\".*)∩JSONPATH:$.update_available", on="true", off="false"]
		Type datetime : activity [stateTopic="zigbee2mqtt/kg_lager3_door", transformationPattern="JS:codegen-activity.js"]
}
// KG Lager 3 (Haupt) (lg3_up_light)
// Sonoff Mini Switch / https://templates.blakadder.com/sonoff_mini.html
Thing mqtt:topic:openhab:lg3_up_light "KG Lager 3 (Haupt)" (mqtt:broker:openhab) {
	Channels:
		Type number : rssi [stateTopic="tele/lg3_up_light/STATE", transformationPattern="JSONPATH:$.Wifi.RSSI"]
		Type string : bssid [stateTopic="tele/lg3_up_light/STATE", transformationPattern="JSONPATH:$.Wifi.BSSId"]
		Type number : la [stateTopic="tele/lg3_up_light/STATE", transformationPattern="JSONPATH:$.LoadAvg"]
		Type datetime : activity [stateTopic="tele/lg3_up_light/STATE", transformationPattern="JS:codegen-activity.js"]
		Type switch : POWER [stateTopic="stat/lg3_up_light/RESULT", transformationPattern="JSONPATH:$.POWER", commandTopic="cmnd/lg3_up_light/POWER", on="ON", off="OFF"]
}
// KG Lager 4 (Haupt) (kg_lager4_main_light)
// Sonoff Mini Switch / https://templates.blakadder.com/sonoff_mini.html
Thing mqtt:topic:openhab:kg_lager4_main_light "KG Lager 4 (Haupt)" (mqtt:broker:openhab) {
	Channels:
		Type number : rssi [stateTopic="tele/kg_lager4_main_light/STATE", transformationPattern="JSONPATH:$.Wifi.RSSI"]
		Type string : bssid [stateTopic="tele/kg_lager4_main_light/STATE", transformationPattern="JSONPATH:$.Wifi.BSSId"]
		Type number : la [stateTopic="tele/kg_lager4_main_light/STATE", transformationPattern="JSONPATH:$.LoadAvg"]
		Type datetime : activity [stateTopic="tele/kg_lager4_main_light/STATE", transformationPattern="JS:codegen-activity.js"]
		Type switch : POWER [stateTopic="stat/kg_lager4_main_light/RESULT", transformationPattern="JSONPATH:$.POWER", commandTopic="cmnd/kg_lager4_main_light/POWER", on="ON", off="OFF"]
}
// KG Lager 4 (1) (0xccccccfffedf345a)
// IKEA TRADFRI LED bulb E26/E27 806 lumen, dimmable, warm white (LED1836G9) / https://www.zigbee2mqtt.io/devices/LED1836G9.html
Thing mqtt:topic:openhab:kg_lager4_1_light "KG Lager 4 (1)" (mqtt:broker:openhab) {
	Channels:
		Type switch : state [stateTopic="zigbee2mqtt/kg_lager4_1_light", commandTopic="zigbee2mqtt/kg_lager4_1_light/set", transformationPattern="JSONPATH:$.state", transformationPatternOut="JS:codegen-cmd-value.js?f=state&t=1"]
		Type dimmer : dim [stateTopic="zigbee2mqtt/kg_lager4_1_light", commandTopic="zigbee2mqtt/kg_lager4_1_light/set", transformationPattern="REGEX:(.*\"brightness\".*)∩JS:codegen-brightness.js", transformationPatternOut="JS:codegen-cmd-value.js?f=brightness&t=1", min=1, max=254]
		Type dimmer : dim_fast [stateTopic="zigbee2mqtt/kg_lager4_1_light", commandTopic="zigbee2mqtt/kg_lager4_1_light/set", transformationPattern="REGEX:(.*\"brightness\".*)∩JS:codegen-brightness.js", transformationPatternOut="JS:codegen-cmd-value.js?f=brightness&t=0", min=1, max=254]
		Type number : link [stateTopic="zigbee2mqtt/kg_lager4_1_light", transformationPattern="REGEX:(.*\"linkquality\".*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/kg_lager4_1_light", transformationPattern="REGEX:(.*\"update_available\".*)∩JSONPATH:$.update_available", on="true", off="false"]
}
// KG Lager 4 (2) (0xccccccfffedf5314)
// IKEA TRADFRI LED bulb E26/E27 806 lumen, dimmable, warm white (LED1836G9) / https://www.zigbee2mqtt.io/devices/LED1836G9.html
Thing mqtt:topic:openhab:kg_lager4_2_light "KG Lager 4 (2)" (mqtt:broker:openhab) {
	Channels:
		Type switch : state [stateTopic="zigbee2mqtt/kg_lager4_2_light", commandTopic="zigbee2mqtt/kg_lager4_2_light/set", transformationPattern="JSONPATH:$.state", transformationPatternOut="JS:codegen-cmd-value.js?f=state&t=1"]
		Type dimmer : dim [stateTopic="zigbee2mqtt/kg_lager4_2_light", commandTopic="zigbee2mqtt/kg_lager4_2_light/set", transformationPattern="REGEX:(.*\"brightness\".*)∩JS:codegen-brightness.js", transformationPatternOut="JS:codegen-cmd-value.js?f=brightness&t=1", min=1, max=254]
		Type dimmer : dim_fast [stateTopic="zigbee2mqtt/kg_lager4_2_light", commandTopic="zigbee2mqtt/kg_lager4_2_light/set", transformationPattern="REGEX:(.*\"brightness\".*)∩JS:codegen-brightness.js", transformationPatternOut="JS:codegen-cmd-value.js?f=brightness&t=0", min=1, max=254]
		Type number : link [stateTopic="zigbee2mqtt/kg_lager4_2_light", transformationPattern="REGEX:(.*\"linkquality\".*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/kg_lager4_2_light", transformationPattern="REGEX:(.*\"update_available\".*)∩JSONPATH:$.update_available", on="true", off="false"]
}
// KG Lager switch (0xb43522fffe790ebe)
// IKEA TRADFRI ON/OFF switch (E1743) / https://www.zigbee2mqtt.io/devices/E1743.html
Thing mqtt:topic:openhab:kg_lager4_switch "KG Lager switch" (mqtt:broker:openhab) {
	Channels:
		Type string : action [stateTopic="zigbee2mqtt/kg_lager4_switch", commandTopic="zigbee2mqtt/kg_lager4_switch/set", transformationPattern="REGEX:(.*\"action\".*)∩JSONPATH:$.action", trigger="true"]
		Type number : battery [stateTopic="zigbee2mqtt/kg_lager4_switch", transformationPattern="REGEX:(.*\"battery\".*)∩JSONPATH:$.battery", unit="%"]
		Type switch : battery_low [stateTopic="zigbee2mqtt/kg_lager4_switch", transformationPattern="REGEX:(.*\"battery\".*)∩JS:codegen-lowbat.js"]
		Type number : link [stateTopic="zigbee2mqtt/kg_lager4_switch", transformationPattern="REGEX:(.*\"linkquality\".*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/kg_lager4_switch", transformationPattern="REGEX:(.*\"update_available\".*)∩JSONPATH:$.update_available", on="true", off="false"]
}
// KG Lager motion (0xbc33acfffe84ca1e)
// IKEA TRADFRI motion sensor (E1525/E1745) / https://www.zigbee2mqtt.io/devices/E1525_E1745.html
Thing mqtt:topic:openhab:kg_lager4_motion "KG Lager motion" (mqtt:broker:openhab) {
	Channels:
		Type switch : occupancy [stateTopic="zigbee2mqtt/kg_lager4_motion", transformationPattern="REGEX:(.*\"occupancy\".*)∩JSONPATH:$.occupancy", on="true", off="false"]
		Type number : battery [stateTopic="zigbee2mqtt/kg_lager4_motion", transformationPattern="REGEX:(.*\"battery\".*)∩JSONPATH:$.battery", unit="%"]
		Type datetime : activity [stateTopic="zigbee2mqtt/kg_lager4_motion", transformationPattern="JS:codegen-activity.js"]
		Type switch : battery_low [stateTopic="zigbee2mqtt/kg_lager4_motion", transformationPattern="REGEX:(.*\"battery\".*)∩JS:codegen-lowbat.js"]
		Type number : link [stateTopic="zigbee2mqtt/kg_lager4_motion", transformationPattern="REGEX:(.*\"linkquality\".*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/kg_lager4_motion", transformationPattern="REGEX:(.*\"update_available\".*)∩JSONPATH:$.update_available", on="true", off="false"]
		Type datetime : activity [stateTopic="zigbee2mqtt/kg_lager4_motion", transformationPattern="JS:codegen-activity.js"]
}
// Warehouse 4 leak (0x00158d000488052c)
// Xiaomi Aqara water leak sensor (SJCGQ11LM) / https://www.zigbee2mqtt.io/devices/SJCGQ11LM.html
Thing mqtt:topic:openhab:kg_lager4_leak "Warehouse 4 leak" (mqtt:broker:openhab) {
	Channels:
		Type switch : leak [stateTopic="zigbee2mqtt/kg_lager4_leak", transformationPattern="REGEX:(.*\"leak\".*)∩JSONPATH:$.leak", on="true", off="false"]
		Type number : battery [stateTopic="zigbee2mqtt/kg_lager4_leak", transformationPattern="REGEX:(.*\"battery\".*)∩JSONPATH:$.battery", unit="%"]
		Type datetime : activity [stateTopic="zigbee2mqtt/kg_lager4_leak", transformationPattern="JS:codegen-activity.js"]
		Type switch : battery_low [stateTopic="zigbee2mqtt/kg_lager4_leak", transformationPattern="REGEX:(.*\"battery\".*)∩JS:codegen-lowbat.js"]
		Type number : link [stateTopic="zigbee2mqtt/kg_lager4_leak", transformationPattern="REGEX:(.*\"linkquality\".*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/kg_lager4_leak", transformationPattern="REGEX:(.*\"update_available\".*)∩JSONPATH:$.update_available", on="true", off="false"]
		Type datetime : activity [stateTopic="zigbee2mqtt/kg_lager4_leak", transformationPattern="JS:codegen-activity.js"]
}
// SZ heating (0x0c4314fffe63b727)
// Silvercrest radiator valve with thermostat / https://www.zigbee2mqtt.io/devices/368308_2010.html
Thing mqtt:topic:openhab:sz_heating "SZ heating" (mqtt:broker:openhab) {
	Channels:
		Type number : thermostat [stateTopic="zigbee2mqtt/sz_heating", commandTopic="zigbee2mqtt/sz_heating/set", transformationPattern="REGEX:(.*\"current_heating_setpoint\".*)∩JSONPATH:$.current_heating_setpoint", transformationPatternOut="JS:codegen-cmd-float.js?f=current_heating_setpoint", unit="C°"]
		Type string : thermostat_mode [stateTopic="zigbee2mqtt/sz_heating", commandTopic="zigbee2mqtt/sz_heating/set", transformationPattern="REGEX:(.*\"system_mode\".*)∩JSONPATH:$.system_mode", formatBeforePublish="{\"system_mode\": \"%s\"}"]
		Type string : thermostat_preset [stateTopic="zigbee2mqtt/sz_heating", commandTopic="zigbee2mqtt/sz_heating/set", transformationPattern="REGEX:(.*\"preset\".*)∩JSONPATH:$.preset", formatBeforePublish="{\"preset\": \"%s\"}"]
		Type switch : thermostat_enable [stateTopic="zigbee2mqtt/sz_heating", commandTopic="zigbee2mqtt/sz_heating/set", transformationPattern="REGEX:(.*\"system_mode\".*)∩JS:codegen-thermostat-enable.js", transformationPatternOut="JS:codegen-cmd-thermostat-enable.js"]
		Type string : local_temperature_calibration [stateTopic="zigbee2mqtt/sz_heating", commandTopic="zigbee2mqtt/sz_heating/set", transformationPattern="REGEX:(.*\"local_temperature_calibration\".*)∩JSONPATH:$.local_temperature_calibration", transformationPatternOut="JS:codegen-cmd-float.js?f=local_temperature_calibration", unit="C°"]
		Type number : local_temperature [stateTopic="zigbee2mqtt/sz_heating", transformationPattern="REGEX:(.*\"local_temperature\".*)∩JSONPATH:$.local_temperature", unit="C°"]
		Type number : battery_voltage [stateTopic="zigbee2mqtt/sz_heating", transformationPattern="REGEX:(.*\"battery_voltage\".*)∩JSONPATH:$.battery_voltage", unit="mV"]
		Type datetime : activity [stateTopic="zigbee2mqtt/sz_heating", transformationPattern="JS:codegen-activity.js"]
		Type switch : battery_low [stateTopic="zigbee2mqtt/sz_heating", transformationPattern="REGEX:(.*\"battery\".*)∩S:codegen-lowbat-1xAA.js", unit="mV"]
		Type number : link [stateTopic="zigbee2mqtt/sz_heating", transformationPattern="REGEX:(.*\"linkquality\".*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/sz_heating", transformationPattern="REGEX:(.*\"update_available\".*)∩JSONPATH:$.update_available", on="true", off="false"]
		Type datetime : activity [stateTopic="zigbee2mqtt/sz_heating", transformationPattern="JS:codegen-activity.js"]
}
// KS heating (0x0c4314fffe62f090)
// Silvercrest radiator valve with thermostat / https://www.zigbee2mqtt.io/devices/368308_2010.html
Thing mqtt:topic:openhab:ks_heating "KS heating" (mqtt:broker:openhab) {
	Channels:
		Type number : thermostat [stateTopic="zigbee2mqtt/ks_heating", commandTopic="zigbee2mqtt/ks_heating/set", transformationPattern="REGEX:(.*\"current_heating_setpoint\".*)∩JSONPATH:$.current_heating_setpoint", transformationPatternOut="JS:codegen-cmd-float.js?f=current_heating_setpoint", unit="C°"]
		Type string : thermostat_mode [stateTopic="zigbee2mqtt/ks_heating", commandTopic="zigbee2mqtt/ks_heating/set", transformationPattern="REGEX:(.*\"system_mode\".*)∩JSONPATH:$.system_mode", formatBeforePublish="{\"system_mode\": \"%s\"}"]
		Type string : thermostat_preset [stateTopic="zigbee2mqtt/ks_heating", commandTopic="zigbee2mqtt/ks_heating/set", transformationPattern="REGEX:(.*\"preset\".*)∩JSONPATH:$.preset", formatBeforePublish="{\"preset\": \"%s\"}"]
		Type switch : thermostat_enable [stateTopic="zigbee2mqtt/ks_heating", commandTopic="zigbee2mqtt/ks_heating/set", transformationPattern="REGEX:(.*\"system_mode\".*)∩JS:codegen-thermostat-enable.js", transformationPatternOut="JS:codegen-cmd-thermostat-enable.js"]
		Type string : local_temperature_calibration [stateTopic="zigbee2mqtt/ks_heating", commandTopic="zigbee2mqtt/ks_heating/set", transformationPattern="REGEX:(.*\"local_temperature_calibration\".*)∩JSONPATH:$.local_temperature_calibration", transformationPatternOut="JS:codegen-cmd-float.js?f=local_temperature_calibration", unit="C°"]
		Type number : local_temperature [stateTopic="zigbee2mqtt/ks_heating", transformationPattern="REGEX:(.*\"local_temperature\".*)∩JSONPATH:$.local_temperature", unit="C°"]
		Type number : battery_voltage [stateTopic="zigbee2mqtt/ks_heating", transformationPattern="REGEX:(.*\"battery_voltage\".*)∩JSONPATH:$.battery_voltage", unit="mV"]
		Type datetime : activity [stateTopic="zigbee2mqtt/ks_heating", transformationPattern="JS:codegen-activity.js"]
		Type switch : battery_low [stateTopic="zigbee2mqtt/ks_heating", transformationPattern="REGEX:(.*\"battery\".*)∩S:codegen-lowbat-1xAA.js", unit="mV"]
		Type number : link [stateTopic="zigbee2mqtt/ks_heating", transformationPattern="REGEX:(.*\"linkquality\".*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/ks_heating", transformationPattern="REGEX:(.*\"update_available\".*)∩JSONPATH:$.update_available", on="true", off="false"]
		Type datetime : activity [stateTopic="zigbee2mqtt/ks_heating", transformationPattern="JS:codegen-activity.js"]
}
// KU heating (0x0c4314fffe73bf1f)
// Silvercrest radiator valve with thermostat / https://www.zigbee2mqtt.io/devices/368308_2010.html
Thing mqtt:topic:openhab:ku_heating "KU heating" (mqtt:broker:openhab) {
	Channels:
		Type number : thermostat [stateTopic="zigbee2mqtt/ku_heating", commandTopic="zigbee2mqtt/ku_heating/set", transformationPattern="REGEX:(.*\"current_heating_setpoint\".*)∩JSONPATH:$.current_heating_setpoint", transformationPatternOut="JS:codegen-cmd-float.js?f=current_heating_setpoint", unit="C°"]
		Type string : thermostat_mode [stateTopic="zigbee2mqtt/ku_heating", commandTopic="zigbee2mqtt/ku_heating/set", transformationPattern="REGEX:(.*\"system_mode\".*)∩JSONPATH:$.system_mode", formatBeforePublish="{\"system_mode\": \"%s\"}"]
		Type string : thermostat_preset [stateTopic="zigbee2mqtt/ku_heating", commandTopic="zigbee2mqtt/ku_heating/set", transformationPattern="REGEX:(.*\"preset\".*)∩JSONPATH:$.preset", formatBeforePublish="{\"preset\": \"%s\"}"]
		Type switch : thermostat_enable [stateTopic="zigbee2mqtt/ku_heating", commandTopic="zigbee2mqtt/ku_heating/set", transformationPattern="REGEX:(.*\"system_mode\".*)∩JS:codegen-thermostat-enable.js", transformationPatternOut="JS:codegen-cmd-thermostat-enable.js"]
		Type string : local_temperature_calibration [stateTopic="zigbee2mqtt/ku_heating", commandTopic="zigbee2mqtt/ku_heating/set", transformationPattern="REGEX:(.*\"local_temperature_calibration\".*)∩JSONPATH:$.local_temperature_calibration", transformationPatternOut="JS:codegen-cmd-float.js?f=local_temperature_calibration", unit="C°"]
		Type number : local_temperature [stateTopic="zigbee2mqtt/ku_heating", transformationPattern="REGEX:(.*\"local_temperature\".*)∩JSONPATH:$.local_temperature", unit="C°"]
		Type number : battery_voltage [stateTopic="zigbee2mqtt/ku_heating", transformationPattern="REGEX:(.*\"battery_voltage\".*)∩JSONPATH:$.battery_voltage", unit="mV"]
		Type datetime : activity [stateTopic="zigbee2mqtt/ku_heating", transformationPattern="JS:codegen-activity.js"]
		Type switch : battery_low [stateTopic="zigbee2mqtt/ku_heating", transformationPattern="REGEX:(.*\"battery\".*)∩S:codegen-lowbat-1xAA.js", unit="mV"]
		Type number : link [stateTopic="zigbee2mqtt/ku_heating", transformationPattern="REGEX:(.*\"linkquality\".*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/ku_heating", transformationPattern="REGEX:(.*\"update_available\".*)∩JSONPATH:$.update_available", on="true", off="false"]
		Type datetime : activity [stateTopic="zigbee2mqtt/ku_heating", transformationPattern="JS:codegen-activity.js"]
}
// WZ heating (0x0c4314fffe73c43f)
// Silvercrest radiator valve with thermostat / https://www.zigbee2mqtt.io/devices/368308_2010.html
Thing mqtt:topic:openhab:wz_heating "WZ heating" (mqtt:broker:openhab) {
	Channels:
		Type number : thermostat [stateTopic="zigbee2mqtt/wz_heating", commandTopic="zigbee2mqtt/wz_heating/set", transformationPattern="REGEX:(.*\"current_heating_setpoint\".*)∩JSONPATH:$.current_heating_setpoint", transformationPatternOut="JS:codegen-cmd-float.js?f=current_heating_setpoint", unit="C°"]
		Type string : thermostat_mode [stateTopic="zigbee2mqtt/wz_heating", commandTopic="zigbee2mqtt/wz_heating/set", transformationPattern="REGEX:(.*\"system_mode\".*)∩JSONPATH:$.system_mode", formatBeforePublish="{\"system_mode\": \"%s\"}"]
		Type string : thermostat_preset [stateTopic="zigbee2mqtt/wz_heating", commandTopic="zigbee2mqtt/wz_heating/set", transformationPattern="REGEX:(.*\"preset\".*)∩JSONPATH:$.preset", formatBeforePublish="{\"preset\": \"%s\"}"]
		Type switch : thermostat_enable [stateTopic="zigbee2mqtt/wz_heating", commandTopic="zigbee2mqtt/wz_heating/set", transformationPattern="REGEX:(.*\"system_mode\".*)∩JS:codegen-thermostat-enable.js", transformationPatternOut="JS:codegen-cmd-thermostat-enable.js"]
		Type string : local_temperature_calibration [stateTopic="zigbee2mqtt/wz_heating", commandTopic="zigbee2mqtt/wz_heating/set", transformationPattern="REGEX:(.*\"local_temperature_calibration\".*)∩JSONPATH:$.local_temperature_calibration", transformationPatternOut="JS:codegen-cmd-float.js?f=local_temperature_calibration", unit="C°"]
		Type number : local_temperature [stateTopic="zigbee2mqtt/wz_heating", transformationPattern="REGEX:(.*\"local_temperature\".*)∩JSONPATH:$.local_temperature", unit="C°"]
		Type number : battery_voltage [stateTopic="zigbee2mqtt/wz_heating", transformationPattern="REGEX:(.*\"battery_voltage\".*)∩JSONPATH:$.battery_voltage", unit="mV"]
		Type datetime : activity [stateTopic="zigbee2mqtt/wz_heating", transformationPattern="JS:codegen-activity.js"]
		Type switch : battery_low [stateTopic="zigbee2mqtt/wz_heating", transformationPattern="REGEX:(.*\"battery\".*)∩S:codegen-lowbat-1xAA.js", unit="mV"]
		Type number : link [stateTopic="zigbee2mqtt/wz_heating", transformationPattern="REGEX:(.*\"linkquality\".*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/wz_heating", transformationPattern="REGEX:(.*\"update_available\".*)∩JSONPATH:$.update_available", on="true", off="false"]
		Type datetime : activity [stateTopic="zigbee2mqtt/wz_heating", transformationPattern="JS:codegen-activity.js"]
}
// KG heating (0x0c4314fffe5c6913)
// Silvercrest radiator valve with thermostat / https://www.zigbee2mqtt.io/devices/368308_2010.html
Thing mqtt:topic:openhab:kg_heating "KG heating" (mqtt:broker:openhab) {
	Channels:
		Type number : thermostat [stateTopic="zigbee2mqtt/kg_heating", commandTopic="zigbee2mqtt/kg_heating/set", transformationPattern="REGEX:(.*\"current_heating_setpoint\".*)∩JSONPATH:$.current_heating_setpoint", transformationPatternOut="JS:codegen-cmd-float.js?f=current_heating_setpoint", unit="C°"]
		Type string : thermostat_mode [stateTopic="zigbee2mqtt/kg_heating", commandTopic="zigbee2mqtt/kg_heating/set", transformationPattern="REGEX:(.*\"system_mode\".*)∩JSONPATH:$.system_mode", formatBeforePublish="{\"system_mode\": \"%s\"}"]
		Type string : thermostat_preset [stateTopic="zigbee2mqtt/kg_heating", commandTopic="zigbee2mqtt/kg_heating/set", transformationPattern="REGEX:(.*\"preset\".*)∩JSONPATH:$.preset", formatBeforePublish="{\"preset\": \"%s\"}"]
		Type switch : thermostat_enable [stateTopic="zigbee2mqtt/kg_heating", commandTopic="zigbee2mqtt/kg_heating/set", transformationPattern="REGEX:(.*\"system_mode\".*)∩JS:codegen-thermostat-enable.js", transformationPatternOut="JS:codegen-cmd-thermostat-enable.js"]
		Type string : local_temperature_calibration [stateTopic="zigbee2mqtt/kg_heating", commandTopic="zigbee2mqtt/kg_heating/set", transformationPattern="REGEX:(.*\"local_temperature_calibration\".*)∩JSONPATH:$.local_temperature_calibration", transformationPatternOut="JS:codegen-cmd-float.js?f=local_temperature_calibration", unit="C°"]
		Type number : local_temperature [stateTopic="zigbee2mqtt/kg_heating", transformationPattern="REGEX:(.*\"local_temperature\".*)∩JSONPATH:$.local_temperature", unit="C°"]
		Type number : battery_voltage [stateTopic="zigbee2mqtt/kg_heating", transformationPattern="REGEX:(.*\"battery_voltage\".*)∩JSONPATH:$.battery_voltage", unit="mV"]
		Type datetime : activity [stateTopic="zigbee2mqtt/kg_heating", transformationPattern="JS:codegen-activity.js"]
		Type switch : battery_low [stateTopic="zigbee2mqtt/kg_heating", transformationPattern="REGEX:(.*\"battery\".*)∩S:codegen-lowbat-1xAA.js", unit="mV"]
		Type number : link [stateTopic="zigbee2mqtt/kg_heating", transformationPattern="REGEX:(.*\"linkquality\".*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/kg_heating", transformationPattern="REGEX:(.*\"update_available\".*)∩JSONPATH:$.update_available", on="true", off="false"]
		Type datetime : activity [stateTopic="zigbee2mqtt/kg_heating", transformationPattern="JS:codegen-activity.js"]
}
// SZ Christmas light (0x7cb03eaa0a093a8b)
// OSRAM Smart+ plug / https://www.zigbee2mqtt.io/devices/AB3257001NJ.html
Thing mqtt:topic:openhab:sz_christmas_light "SZ Christmas light" (mqtt:broker:openhab) {
	Channels:
		Type switch : state [stateTopic="zigbee2mqtt/sz_christmas_light", commandTopic="zigbee2mqtt/sz_christmas_light/set", transformationPattern="JSONPATH:$.state", transformationPatternOut="JS:codegen-cmd-value.js?f=state&t=0"]
		Type number : link [stateTopic="zigbee2mqtt/sz_christmas_light", transformationPattern="REGEX:(.*\"linkquality\".*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/sz_christmas_light", transformationPattern="REGEX:(.*\"update_available\".*)∩JSONPATH:$.update_available", on="true", off="false"]
}
// KS Christmas light (0x7cb03eaa0a094303)
// OSRAM Smart+ plug / https://www.zigbee2mqtt.io/devices/AB3257001NJ.html
Thing mqtt:topic:openhab:ks_christmas_light "KS Christmas light" (mqtt:broker:openhab) {
	Channels:
		Type switch : state [stateTopic="zigbee2mqtt/ks_christmas_light", commandTopic="zigbee2mqtt/ks_christmas_light/set", transformationPattern="JSONPATH:$.state", transformationPatternOut="JS:codegen-cmd-value.js?f=state&t=0"]
		Type number : link [stateTopic="zigbee2mqtt/ks_christmas_light", transformationPattern="REGEX:(.*\"linkquality\".*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/ks_christmas_light", transformationPattern="REGEX:(.*\"update_available\".*)∩JSONPATH:$.update_available", on="true", off="false"]
}
// Balkon Christmas light (0x7cb03eaa0a094bf2)
// OSRAM Smart+ plug / https://www.zigbee2mqtt.io/devices/AB3257001NJ.html
Thing mqtt:topic:openhab:bk_christmas_light "Balkon Christmas light" (mqtt:broker:openhab) {
	Channels:
		Type switch : state [stateTopic="zigbee2mqtt/bk_christmas_light", commandTopic="zigbee2mqtt/bk_christmas_light/set", transformationPattern="JSONPATH:$.state", transformationPatternOut="JS:codegen-cmd-value.js?f=state&t=0"]
		Type number : link [stateTopic="zigbee2mqtt/bk_christmas_light", transformationPattern="REGEX:(.*\"linkquality\".*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/bk_christmas_light", transformationPattern="REGEX:(.*\"update_available\".*)∩JSONPATH:$.update_available", on="true", off="false"]
}
// SZ Shutter (0xa4c138fd0fd1c168)
// Curtains module (1 gang) / https://www.zigbee2mqtt.io/devices/TS130F.html
Thing mqtt:topic:openhab:sz_shutter "SZ Shutter" (mqtt:broker:openhab) {
	Channels:
		Type string : moving [stateTopic="zigbee2mqtt/sz_shutter", transformationPattern="JSONPATH:$.moving"]
		Type string : state [stateTopic="zigbee2mqtt/sz_shutter", commandTopic="zigbee2mqtt/sz_shutter/set", transformationPattern="JSONPATH:$.state", formatBeforePublish="{\"state\": \"%s\"}"]
		Type dimmer : position [stateTopic="zigbee2mqtt/sz_shutter", commandTopic="zigbee2mqtt/sz_shutter/set", transformationPattern="JS:codegen-rpos.js?channel=position", transformationPatternOut="JS:codegen-cmd-rpos.js?channel=position"]
		Type switch : calibration [stateTopic="zigbee2mqtt/sz_shutter", commandTopic="zigbee2mqtt/sz_shutter/set", transformationPattern="JSONPATH:$.calibration", formatBeforePublish="{\"calibration\": \"%s\"}"]
		Type number : link [stateTopic="zigbee2mqtt/sz_shutter", transformationPattern="REGEX:(.*\"linkquality\".*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/sz_shutter", transformationPattern="REGEX:(.*\"update_available\".*)∩JSONPATH:$.update_available", on="true", off="false"]
}
// KS Blinds (0xa4c13878cea182ad)
// Curtains module (2 gang) / https://www.zigbee2mqtt.io/devices/TS130F_dual.html
Thing mqtt:topic:openhab:ks_shutter "KS Blinds" (mqtt:broker:openhab) {
	Channels:
		Type string : moving_left [stateTopic="zigbee2mqtt/ks_shutter", transformationPattern="JSONPATH:$.moving_left"]
		Type string : state_left [stateTopic="zigbee2mqtt/ks_shutter", commandTopic="zigbee2mqtt/ks_shutter/set", transformationPattern="JSONPATH:$.state_left", formatBeforePublish="{\"state_left\": \"%s\"}"]
		Type dimmer : position_left [stateTopic="zigbee2mqtt/ks_shutter", commandTopic="zigbee2mqtt/ks_shutter/set", transformationPattern="JS:codegen-rpos.js?channel=position_left", transformationPatternOut="JS:codegen-cmd-rpos.js?channel=position_left"]
		Type switch : calibration_left [stateTopic="zigbee2mqtt/ks_shutter", commandTopic="zigbee2mqtt/ks_shutter/set", transformationPattern="JSONPATH:$.calibration_left", formatBeforePublish="{\"calibration_left\": \"%s\"}"]
		Type string : moving_right [stateTopic="zigbee2mqtt/ks_shutter", transformationPattern="JSONPATH:$.moving_right"]
		Type string : state_right [stateTopic="zigbee2mqtt/ks_shutter", commandTopic="zigbee2mqtt/ks_shutter/set", transformationPattern="JSONPATH:$.state_right", formatBeforePublish="{\"state_right\": \"%s\"}"]
		Type dimmer : position_right [stateTopic="zigbee2mqtt/ks_shutter", commandTopic="zigbee2mqtt/ks_shutter/set", transformationPattern="JS:codegen-rpos.js?channel=position_right", transformationPatternOut="JS:codegen-cmd-rpos.js?channel=position_right"]
		Type switch : calibration_right [stateTopic="zigbee2mqtt/ks_shutter", commandTopic="zigbee2mqtt/ks_shutter/set", transformationPattern="JSONPATH:$.calibration_right", formatBeforePublish="{\"calibration_right\": \"%s\"}"]
		Type number : link [stateTopic="zigbee2mqtt/ks_shutter", transformationPattern="REGEX:(.*\"linkquality\".*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/ks_shutter", transformationPattern="REGEX:(.*\"update_available\".*)∩JSONPATH:$.update_available", on="true", off="false"]
}
// KU Shutter (0xa4c138018d7a55bf)
// Curtains module (1 gang) / https://www.zigbee2mqtt.io/devices/TS130F.html
Thing mqtt:topic:openhab:ku_shutter "KU Shutter" (mqtt:broker:openhab) {
	Channels:
		Type string : moving [stateTopic="zigbee2mqtt/ku_shutter", transformationPattern="JSONPATH:$.moving"]
		Type string : state [stateTopic="zigbee2mqtt/ku_shutter", commandTopic="zigbee2mqtt/ku_shutter/set", transformationPattern="JSONPATH:$.state", formatBeforePublish="{\"state\": \"%s\"}"]
		Type dimmer : position [stateTopic="zigbee2mqtt/ku_shutter", commandTopic="zigbee2mqtt/ku_shutter/set", transformationPattern="JS:codegen-rpos.js?channel=position", transformationPatternOut="JS:codegen-cmd-rpos.js?channel=position"]
		Type switch : calibration [stateTopic="zigbee2mqtt/ku_shutter", commandTopic="zigbee2mqtt/ku_shutter/set", transformationPattern="JSONPATH:$.calibration", formatBeforePublish="{\"calibration\": \"%s\"}"]
		Type number : link [stateTopic="zigbee2mqtt/ku_shutter", transformationPattern="REGEX:(.*\"linkquality\".*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/ku_shutter", transformationPattern="REGEX:(.*\"update_available\".*)∩JSONPATH:$.update_available", on="true", off="false"]
}
// Ext backup power supply (0x7cb03eaa0a09e7bc)
// OSRAM Smart+ plug / https://www.zigbee2mqtt.io/devices/AB3257001NJ.html
Thing mqtt:topic:openhab:backup_ext_power "Ext backup power supply" (mqtt:broker:openhab) {
	Channels:
		Type switch : state [stateTopic="zigbee2mqtt/backup_ext_power", commandTopic="zigbee2mqtt/backup_ext_power/set", transformationPattern="JSONPATH:$.state", transformationPatternOut="JS:codegen-cmd-value.js?f=state&t=0"]
		Type number : link [stateTopic="zigbee2mqtt/backup_ext_power", transformationPattern="REGEX:(.*\"linkquality\".*)∩JSONPATH:$.linkquality"]
		Type switch : ota [stateTopic="zigbee2mqtt/backup_ext_power", transformationPattern="REGEX:(.*\"update_available\".*)∩JSONPATH:$.update_available", on="true", off="false"]
}
