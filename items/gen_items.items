
// ==========================================
// THIS FILE IS AUTO GENERATED
// Do not edit by hands
// Use this command to regenerate:
// python3 ./bin/codegen.py
// ==========================================


// Sturbar test (0x04cd15fffe6d57dc)
// IKEA STYRBAR remote control N2 / https://www.zigbee2mqtt.io/devices/E2001_E2002.html
Dimmer sturbar_test_dim "Sturbar test DIM [%d %%]" <light> (g_all_dim) {channel="mqtt:topic:openhab:sturbar_test:dim"}
Switch sturbar_test_lowbatt "Sturbar test BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:sturbar_test:battery_low"}
Switch sturbar_test_ota "Sturbar test OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:sturbar_test:ota"}
Number:Dimensionless sturbar_test_link "Sturbar test LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:sturbar_test:link"}
Number:Dimensionless sturbar_test_battery "Sturbar test  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:sturbar_test:battery"}
// Outside Climate (0x00158d0001c2cc22)
// Xiaomi MiJia temperature & humidity sensor (WSDCGQ01LM) / https://www.zigbee2mqtt.io/devices/WSDCGQ01LM.html
Switch ext_climate_lowbatt "Outside Climate BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:ext_climate:battery_low"}
Switch ext_climate_ota "Outside Climate OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:ext_climate:ota"}
Number:Dimensionless ext_climate_link "Outside Climate LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:ext_climate:link"}
DateTime ext_climate_activity "Outside Climate activity [JS(codegen-display-activity.js):%s]" <time> (g_all_activity) {channel="mqtt:topic:openhab:ext_climate:activity"}
Number:Temperature ext_climate_temperature "Outside Climate temp  [%.0f %unit%]" <temperature> (g_all_temperature) {channel="mqtt:topic:openhab:ext_climate:temperature"}
Number:Dimensionless ext_climate_humidity "Outside Climate humidity  [%.0f %%]" <humidity> (g_all_humidity) {channel="mqtt:topic:openhab:ext_climate:humidity"}
Number:Dimensionless ext_climate_battery "Outside Climate  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:ext_climate:battery"}
// Balkon light 1 (0x14b457fffe399241)
// IKEA TRADFRI LED bulb E27 1000 lumen, dimmable, white spectrum, opal white (LED1732G11) / https://www.zigbee2mqtt.io/devices/LED1732G11.html
Dimmer bk_light_1_dim "Balkon light 1 DIM [%d %%]" <light> (g_all_dim,bk_light_dim) {channel="mqtt:topic:openhab:bk_light_1:dim"}
Dimmer bk_light_1_dim_fast "Balkon light 1 DIM-F [%d %%]" (g_all_dim_fast) {channel="mqtt:topic:openhab:bk_light_1:dim_fast"}
Dimmer bk_light_1_ct "Balkon light 1 CT [JS(codegen-mired.js): %s]" <light> (g_all_ct,bk_light_ct) {channel="mqtt:topic:openhab:bk_light_1:ct"}
Switch bk_light_1_ota "Balkon light 1 OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:bk_light_1:ota"}
Number:Dimensionless bk_light_1_link "Balkon light 1 LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:bk_light_1:link"}
Switch bk_light_1_sw "Balkon light 1" <light> (g_all_sw,all_light,bk_light) {channel="mqtt:topic:openhab:bk_light_1:state"}
// Garten wasser remote (0xccccccfffe58f1c3)
// IKEA TRADFRI ON/OFF switch (E1743) / https://www.zigbee2mqtt.io/devices/E1743.html
Switch garten_wasser_remote_lowbatt "Garten wasser remote BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:garten_wasser_remote:battery_low"}
Switch garten_wasser_remote_ota "Garten wasser remote OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:garten_wasser_remote:ota"}
Number:Dimensionless garten_wasser_remote_link "Garten wasser remote LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:garten_wasser_remote:link"}
Number:Dimensionless garten_wasser_remote_battery "Garten wasser remote  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:garten_wasser_remote:battery"}
// Mirror remote (0x680ae2fffeab6b80)
// IKEA TRADFRI remote control (E1524/E1810) / https://www.zigbee2mqtt.io/devices/E1524_E1810.html
Switch mirror_remote_lowbatt "Mirror remote BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:mirror_remote:battery_low"}
Switch mirror_remote_ota "Mirror remote OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:mirror_remote:ota"}
Number:Dimensionless mirror_remote_link "Mirror remote LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:mirror_remote:link"}
Number:Dimensionless mirror_remote_battery "Mirror remote  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:mirror_remote:battery"}
// Leave switch (0x680ae2fffe16e111)
// IKEA TRADFRI ON/OFF switch (E1743) / https://www.zigbee2mqtt.io/devices/E1743.html
Switch eg_leave_switch_lowbatt "Leave switch BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:eg_leave_switch:battery_low"}
Switch eg_leave_switch_ota "Leave switch OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:eg_leave_switch:ota"}
Number:Dimensionless eg_leave_switch_link "Leave switch LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:eg_leave_switch:link"}
Number:Dimensionless eg_leave_switch_battery "Leave switch  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:eg_leave_switch:battery"}
// EG Router (0x00124b000b4ed5cc)
// CC2530.ROUTER - Custom devices (DiY) / https://www.zigbee2mqtt.io/devices/CC2530.ROUTER.html
Switch eg_router_ota "EG Router OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:eg_router:ota"}
Number:Dimensionless eg_router_link "EG Router LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:eg_router:link"}
// EG Corridor Light (0xa4c138a06ec38c9e)
// TuYa Wall dimmer module (TS110E_1gang_1) / https://www.zigbee2mqtt.io/devices/TS110E_1gang_1.html#tuya-ts110e_1gang_1
Dimmer eg_flur_light_dim "EG Corridor Light DIM [%d %%]" <light> (g_all_dim) {channel="mqtt:topic:openhab:eg_flur_light:dim"}
Dimmer eg_flur_light_dim_fast "EG Corridor Light DIM-F [%d %%]" (g_all_dim_fast) {channel="mqtt:topic:openhab:eg_flur_light:dim_fast"}
Switch eg_flur_light_ota "EG Corridor Light OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:eg_flur_light:ota"}
Number:Dimensionless eg_flur_light_link "EG Corridor Light LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:eg_flur_light:link"}
Switch eg_flur_light_sw "EG Corridor Light" <light> (g_all_sw,all_light,eg_light,fl_light) {channel="mqtt:topic:openhab:eg_flur_light:state"}
// EG Decor light (0x9035eafffe20e847)
// IKEA TRADFRI LED bulb E27 WW clear 250 lumen, dimmable (LED1842G3) / https://www.zigbee2mqtt.io/devices/LED1842G3.html
Dimmer eg_decoration_light_dim "EG Decor light DIM [%d %%]" <light> (g_all_dim,eg_light_auto_dim) {channel="mqtt:topic:openhab:eg_decoration_light:dim"}
Dimmer eg_decoration_light_dim_fast "EG Decor light DIM-F [%d %%]" (g_all_dim_fast) {channel="mqtt:topic:openhab:eg_decoration_light:dim_fast"}
Switch eg_decoration_light_ota "EG Decor light OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:eg_decoration_light:ota"}
Number:Dimensionless eg_decoration_light_link "EG Decor light LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:eg_decoration_light:link"}
Switch eg_decoration_light_sw "EG Decor light" <light> (g_all_sw,all_light,eg_light,eg_light_auto) {channel="mqtt:topic:openhab:eg_decoration_light:state"}
// Entrance Door sensor (0xa4c138182f60d651)
// TuYa Rechargeable Zigbee contact sensor (TS0203) / https://www.zigbee2mqtt.io/devices/TS0203.html#tuya-ts0203
Switch eg_main_door_lowbatt "Entrance Door sensor BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:eg_main_door:battery_low"}
Switch eg_main_door_ota "Entrance Door sensor OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:eg_main_door:ota"}
Number:Dimensionless eg_main_door_link "Entrance Door sensor LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:eg_main_door:link"}
DateTime eg_main_door_activity "Entrance Door sensor activity [JS(codegen-display-activity.js):%s]" <time> (g_all_activity) {channel="mqtt:topic:openhab:eg_main_door:activity"}
Contact eg_main_door_contact "Entrance Door sensor [%s]" <door> (g_all_contact) {channel="mqtt:topic:openhab:eg_main_door:contact"}
Number:Dimensionless eg_main_door_battery "Entrance Door sensor  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:eg_main_door:battery"}
// BZ Light (toilet) (0xcc86ecfffea0c7cb)
// Livarno Home LED ceiling light (HG08008) / https://www.zigbee2mqtt.io/devices/HG08008.html#lidl-hg08008
Dimmer bz_light_1_dim "BZ Light (toilet) DIM [%d %%]" <light> (g_all_dim,g_light_bz_dim) {channel="mqtt:topic:openhab:bz_light_1:dim"}
Dimmer bz_light_1_dim_fast "BZ Light (toilet) DIM-F [%d %%]" (g_all_dim_fast,g_light_bz_dim_fast) {channel="mqtt:topic:openhab:bz_light_1:dim_fast"}
Dimmer bz_light_1_ct "BZ Light (toilet) CT [JS(codegen-mired.js): %s]" <light> (g_all_ct,astro_color_light_ct,bz_light_ct) {channel="mqtt:topic:openhab:bz_light_1:ct"}
Color bz_light_1_color "BZ Light (toilet) Color" <colorwheel> (g_all_color,bz_light_color) {channel="mqtt:topic:openhab:bz_light_1:color"}
String bz_light_1_color_mode "BZ Light (toilet) Color mode" <colorwheel> (g_all_color_mode) {channel="mqtt:topic:openhab:bz_light_1:color_mode"}
Switch bz_light_1_ota "BZ Light (toilet) OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:bz_light_1:ota"}
Number:Dimensionless bz_light_1_link "BZ Light (toilet) LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:bz_light_1:link"}
Switch bz_light_1_sw_proxy "BZ Light (toilet) proxy" <light> (g_all_sw,all_light,eg_light,bz_light,bz_up_light)
Switch bz_light_1_sw "BZ Light (toilet)" <light> {channel="mqtt:topic:openhab:bz_light_1:state"}
// BZ Light (shower) (0x04cd15fffedb319f)
// Livarno Home LED ceiling light (HG08008) / https://www.zigbee2mqtt.io/devices/HG08008.html#lidl-hg08008
Dimmer bz_light_2_dim "BZ Light (shower) DIM [%d %%]" <light> (g_all_dim,g_light_bz_dim) {channel="mqtt:topic:openhab:bz_light_2:dim"}
Dimmer bz_light_2_dim_fast "BZ Light (shower) DIM-F [%d %%]" (g_all_dim_fast,g_light_bz_dim_fast) {channel="mqtt:topic:openhab:bz_light_2:dim_fast"}
Dimmer bz_light_2_ct "BZ Light (shower) CT [JS(codegen-mired.js): %s]" <light> (g_all_ct,astro_color_light_ct,bz_light_ct) {channel="mqtt:topic:openhab:bz_light_2:ct"}
Color bz_light_2_color "BZ Light (shower) Color" <colorwheel> (g_all_color,bz_light_color) {channel="mqtt:topic:openhab:bz_light_2:color"}
String bz_light_2_color_mode "BZ Light (shower) Color mode" <colorwheel> (g_all_color_mode) {channel="mqtt:topic:openhab:bz_light_2:color_mode"}
Switch bz_light_2_ota "BZ Light (shower) OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:bz_light_2:ota"}
Number:Dimensionless bz_light_2_link "BZ Light (shower) LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:bz_light_2:link"}
Switch bz_light_2_sw_proxy "BZ Light (shower) proxy" <light> (g_all_sw,all_light,eg_light,bz_light,bz_up_light)
Switch bz_light_2_sw "BZ Light (shower)" <light> {channel="mqtt:topic:openhab:bz_light_2:state"}
// BZ Mirror (bz_mirror)
// Sonoff Mini Switch / https://templates.blakadder.com/sonoff_mini.html
Switch bz_mirror "BZ Mirror" <light> (g_all_sw,all_light,eg_light,bz_light) {channel="mqtt:topic:openhab:bz_mirror:POWER"}
Number:Dimensionless bz_mirror_rssi "BZ Mirror RSSI [%.0f]" <network> (g_all_rssi) {channel="mqtt:topic:openhab:bz_mirror:rssi"}
String bz_mirror_bssid "BZ Mirror BSSID [%s]" <network> (g_all_bssid) {channel="mqtt:topic:openhab:bz_mirror:bssid"}
DateTime bz_mirror_activity "BZ Mirror activity [JS(codegen-display-activity.js):%s]" <time> (g_all_activity) {channel="mqtt:topic:openhab:bz_mirror:activity"}
// BZ Mirror switch (0xccccccfffef0356e)
// IKEA TRADFRI ON/OFF switch (E1743) / https://www.zigbee2mqtt.io/devices/E1743.html
Switch bz_mirror_switch_lowbatt "BZ Mirror switch BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:bz_mirror_switch:battery_low"}
Switch bz_mirror_switch_ota "BZ Mirror switch OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:bz_mirror_switch:ota"}
Number:Dimensionless bz_mirror_switch_link "BZ Mirror switch LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:bz_mirror_switch:link"}
Number:Dimensionless bz_mirror_switch_battery "BZ Mirror switch  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:bz_mirror_switch:battery"}
// BZ Light Control (0x003c84fffe132b20)
// IKEA STYRBAR remote control N2 / https://www.zigbee2mqtt.io/devices/E2001_E2002.html
Dimmer bz_light_switch_dim "BZ Light Control DIM [%d %%]" <light> (g_all_dim) {channel="mqtt:topic:openhab:bz_light_switch:dim"}
Switch bz_light_switch_lowbatt "BZ Light Control BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:bz_light_switch:battery_low"}
Switch bz_light_switch_ota "BZ Light Control OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:bz_light_switch:ota"}
Number:Dimensionless bz_light_switch_link "BZ Light Control LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:bz_light_switch:link"}
Number:Dimensionless bz_light_switch_battery "BZ Light Control  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:bz_light_switch:battery"}
// NS Main (0x588e81fffefb217b)
// Livarno Home Lux ceiling light (14147206L) / https://www.zigbee2mqtt.io/devices/14147206L.html#lidl-14147206l
Dimmer ns_main_light_dim "NS Main DIM [%d %%]" <light> (g_all_dim) {channel="mqtt:topic:openhab:ns_main_light:dim"}
Dimmer ns_main_light_dim_fast "NS Main DIM-F [%d %%]" (g_all_dim_fast) {channel="mqtt:topic:openhab:ns_main_light:dim_fast"}
Dimmer ns_main_light_ct "NS Main CT [JS(codegen-mired.js): %s]" <light> (g_all_ct,ks_light_ct,astro_color_light_ct) {channel="mqtt:topic:openhab:ns_main_light:ct"}
Switch ns_main_light_ota "NS Main OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:ns_main_light:ota"}
Number:Dimensionless ns_main_light_link "NS Main LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:ns_main_light:link"}
Switch ns_main_light_sw "NS Main" <light> (g_all_sw,all_light,eg_light,ks_light) {channel="mqtt:topic:openhab:ns_main_light:state"}
// NS Climate (0xa4c1386df39045f6)
// TuYa Temperature & humidity sensor / https://www.zigbee2mqtt.io/devices/TS0201.html
Switch ns_climate_lowbatt "NS Climate BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:ns_climate:battery_low"}
Switch ns_climate_ota "NS Climate OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:ns_climate:ota"}
Number:Dimensionless ns_climate_link "NS Climate LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:ns_climate:link"}
DateTime ns_climate_activity "NS Climate activity [JS(codegen-display-activity.js):%s]" <time> (g_all_activity) {channel="mqtt:topic:openhab:ns_climate:activity"}
Number:Temperature ns_climate_temperature "NS Climate temp  [%.0f %unit%]" <temperature> (g_all_temperature) {channel="mqtt:topic:openhab:ns_climate:temperature"}
Number:Dimensionless ns_climate_humidity "NS Climate humidity  [%.0f %%]" <humidity> (g_all_humidity) {channel="mqtt:topic:openhab:ns_climate:humidity"}
Number:Dimensionless ns_climate_battery "NS Climate  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:ns_climate:battery"}
// NS Night lamp (0x14b457fffe6383e5)
// TRADFRI LED bulb E14/E26/E27 600 lumen, dimmable, color, opal white (ebay) / https://www.zigbee2mqtt.io/devices/LED1624G9.html
Dimmer ns_night_lamp_dim "NS Night lamp DIM [%d %%]" <light> (g_all_dim) {channel="mqtt:topic:openhab:ns_night_lamp:dim"}
Dimmer ns_night_lamp_dim_fast "NS Night lamp DIM-F [%d %%]" (g_all_dim_fast) {channel="mqtt:topic:openhab:ns_night_lamp:dim_fast"}
Dimmer ns_night_lamp_ct "NS Night lamp CT [JS(codegen-mired.js): %s]" <light> (g_all_ct) {channel="mqtt:topic:openhab:ns_night_lamp:ct"}
Color ns_night_lamp_color "NS Night lamp Color" <colorwheel> (g_all_color) {channel="mqtt:topic:openhab:ns_night_lamp:color"}
String ns_night_lamp_color_mode "NS Night lamp Color mode" <colorwheel> (g_all_color_mode) {channel="mqtt:topic:openhab:ns_night_lamp:color_mode"}
Switch ns_night_lamp_ota "NS Night lamp OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:ns_night_lamp:ota"}
Number:Dimensionless ns_night_lamp_link "NS Night lamp LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:ns_night_lamp:link"}
Switch ns_night_lamp_sw "NS Night lamp" <light> (g_all_sw,all_light,eg_light,ks_light) {channel="mqtt:topic:openhab:ns_night_lamp:state"}
// NS Projector (0x7cb03eaa0a094d1d)
// OSRAM Smart+ plug / https://www.zigbee2mqtt.io/devices/AB3257001NJ.html
Switch ns_projector_power_ota "NS Projector OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:ns_projector_power:ota"}
Number:Dimensionless ns_projector_power_link "NS Projector LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:ns_projector_power:link"}
Switch ns_projector_power_sw "NS Projector" <light> (g_all_sw) {channel="mqtt:topic:openhab:ns_projector_power:state"}
// NS Window 2 (0xa4c138f1bf27592c)
// TuYa Rechargeable Zigbee contact sensor (SNTZ007) / https://www.zigbee2mqtt.io/devices/SNTZ007.html
Switch ns_window_2_lowbatt "NS Window 2 BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:ns_window_2:battery_low"}
Switch ns_window_2_ota "NS Window 2 OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:ns_window_2:ota"}
Number:Dimensionless ns_window_2_link "NS Window 2 LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:ns_window_2:link"}
DateTime ns_window_2_activity "NS Window 2 activity [JS(codegen-display-activity.js):%s]" <time> (g_all_activity) {channel="mqtt:topic:openhab:ns_window_2:activity"}
Contact ns_window_2_contact "NS Window 2 [%s]" <door> (g_all_contact,ns_windows) {channel="mqtt:topic:openhab:ns_window_2:contact"}
Number:Dimensionless ns_window_2_battery "NS Window 2  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:ns_window_2:battery"}
// NS Main remote (0x9035eafffee1ba1d)
// IKEA STYRBAR remote control N2 / https://www.zigbee2mqtt.io/devices/E2001_E2002.html
Dimmer ns_light_switch_dim "NS Main remote DIM [%d %%]" <light> (g_all_dim) {channel="mqtt:topic:openhab:ns_light_switch:dim"}
Switch ns_light_switch_lowbatt "NS Main remote BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:ns_light_switch:battery_low"}
Switch ns_light_switch_ota "NS Main remote OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:ns_light_switch:ota"}
Number:Dimensionless ns_light_switch_link "NS Main remote LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:ns_light_switch:link"}
Number:Dimensionless ns_light_switch_battery "NS Main remote  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:ns_light_switch:battery"}
// Bedroom main remote (0x003c84fffe16f988)
// IKEA STYRBAR remote control N2 / https://www.zigbee2mqtt.io/devices/E2001_E2002.html
Dimmer wz_remote_main_dim "Bedroom main remote DIM [%d %%]" <light> (g_all_dim) {channel="mqtt:topic:openhab:wz_remote_main:dim"}
Switch wz_remote_main_lowbatt "Bedroom main remote BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:wz_remote_main:battery_low"}
Switch wz_remote_main_ota "Bedroom main remote OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:wz_remote_main:ota"}
Number:Dimensionless wz_remote_main_link "Bedroom main remote LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:wz_remote_main:link"}
Number:Dimensionless wz_remote_main_battery "Bedroom main remote  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:wz_remote_main:battery"}
// SZ Main (0x588e81fffefe9a05)
// Livarno Home Lux ceiling light (14147206L) / https://www.zigbee2mqtt.io/devices/14147206L.html#lidl-14147206l
Dimmer wz_main_light_dim "SZ Main DIM [%d %%]" <light> (g_all_dim) {channel="mqtt:topic:openhab:wz_main_light:dim"}
Dimmer wz_main_light_dim_fast "SZ Main DIM-F [%d %%]" (g_all_dim_fast) {channel="mqtt:topic:openhab:wz_main_light:dim_fast"}
Dimmer wz_main_light_ct "SZ Main CT [JS(codegen-mired.js): %s]" <light> (g_all_ct,wz_light_ct,astro_color_light_ct) {channel="mqtt:topic:openhab:wz_main_light:ct"}
Switch wz_main_light_ota "SZ Main OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:wz_main_light:ota"}
Number:Dimensionless wz_main_light_link "SZ Main LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:wz_main_light:link"}
Switch wz_main_light_sw "SZ Main" <light> (g_all_sw,all_light,eg_light,wz_light) {channel="mqtt:topic:openhab:wz_main_light:state"}
// WZ Color Decor (0x8cf681fffef62c85)
// Livarno Lux E14 candle RGB (HG07834B) / https://www.zigbee2mqtt.io/devices/HG07834B.html#lidl-hg07834b
Dimmer wz_color_light_dim "WZ Color Decor DIM [%d %%]" <light> (g_all_dim) {channel="mqtt:topic:openhab:wz_color_light:dim"}
Dimmer wz_color_light_dim_fast "WZ Color Decor DIM-F [%d %%]" (g_all_dim_fast) {channel="mqtt:topic:openhab:wz_color_light:dim_fast"}
Dimmer wz_color_light_ct "WZ Color Decor CT [JS(codegen-mired.js): %s]" <light> (g_all_ct) {channel="mqtt:topic:openhab:wz_color_light:ct"}
Color wz_color_light_color "WZ Color Decor Color" <colorwheel> (g_all_color) {channel="mqtt:topic:openhab:wz_color_light:color"}
String wz_color_light_color_mode "WZ Color Decor Color mode" <colorwheel> (g_all_color_mode) {channel="mqtt:topic:openhab:wz_color_light:color_mode"}
Switch wz_color_light_ota "WZ Color Decor OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:wz_color_light:ota"}
Number:Dimensionless wz_color_light_link "WZ Color Decor LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:wz_color_light:link"}
Switch wz_color_light_sw_proxy "WZ Color Decor proxy" <light> (g_all_sw,all_light,eg_light,wz_light)
Switch wz_color_light_sw "WZ Color Decor" <light> {channel="mqtt:topic:openhab:wz_color_light:state"}
// WZ Decor lamp 1 (0xec1bbdfffe972819)
// IKEA TRADFRI LED bulb E27 WW clear 250 lumen, dimmable (LED1842G3) / https://www.zigbee2mqtt.io/devices/LED1842G3.html
Dimmer wz_declamp_1_dim "WZ Decor lamp 1 DIM [%d %%]" <light> (g_all_dim,wz_light_decor_brightness) {channel="mqtt:topic:openhab:wz_declamp_1:dim"}
Dimmer wz_declamp_1_dim_fast "WZ Decor lamp 1 DIM-F [%d %%]" (g_all_dim_fast) {channel="mqtt:topic:openhab:wz_declamp_1:dim_fast"}
Switch wz_declamp_1_ota "WZ Decor lamp 1 OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:wz_declamp_1:ota"}
Number:Dimensionless wz_declamp_1_link "WZ Decor lamp 1 LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:wz_declamp_1:link"}
Switch wz_declamp_1_sw "WZ Decor lamp 1" <light> (g_all_sw,all_light,eg_light,wz_light,wz_light_decor) {channel="mqtt:topic:openhab:wz_declamp_1:state"}
// WZ Decor lamp 2 (0xec1bbdfffe972203)
// IKEA TRADFRI LED bulb E27 WW clear 250 lumen, dimmable (LED1842G3) / https://www.zigbee2mqtt.io/devices/LED1842G3.html
Dimmer wz_declamp_2_dim "WZ Decor lamp 2 DIM [%d %%]" <light> (g_all_dim,wz_light_decor_brightness) {channel="mqtt:topic:openhab:wz_declamp_2:dim"}
Dimmer wz_declamp_2_dim_fast "WZ Decor lamp 2 DIM-F [%d %%]" (g_all_dim_fast) {channel="mqtt:topic:openhab:wz_declamp_2:dim_fast"}
Switch wz_declamp_2_ota "WZ Decor lamp 2 OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:wz_declamp_2:ota"}
Number:Dimensionless wz_declamp_2_link "WZ Decor lamp 2 LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:wz_declamp_2:link"}
Switch wz_declamp_2_sw "WZ Decor lamp 2" <light> (g_all_sw,all_light,eg_light,wz_light,wz_light_decor) {channel="mqtt:topic:openhab:wz_declamp_2:state"}
// WZ Decor lamp 3 (0xec1bbdfffe91007b)
// IKEA TRADFRI LED bulb E27 WW clear 250 lumen, dimmable (LED1842G3) / https://www.zigbee2mqtt.io/devices/LED1842G3.html
Dimmer wz_declamp_3_dim "WZ Decor lamp 3 DIM [%d %%]" <light> (g_all_dim,wz_light_decor_brightness) {channel="mqtt:topic:openhab:wz_declamp_3:dim"}
Dimmer wz_declamp_3_dim_fast "WZ Decor lamp 3 DIM-F [%d %%]" (g_all_dim_fast) {channel="mqtt:topic:openhab:wz_declamp_3:dim_fast"}
Switch wz_declamp_3_ota "WZ Decor lamp 3 OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:wz_declamp_3:ota"}
Number:Dimensionless wz_declamp_3_link "WZ Decor lamp 3 LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:wz_declamp_3:link"}
Switch wz_declamp_3_sw "WZ Decor lamp 3" <light> (g_all_sw,all_light,eg_light,wz_light,wz_light_decor) {channel="mqtt:topic:openhab:wz_declamp_3:state"}
// WZ Window 1 (0xa4c13804963f4ccf)
// TuYa Rechargeable Zigbee contact sensor (SNTZ007) / https://www.zigbee2mqtt.io/devices/SNTZ007.html
Switch wz_window_1_lowbatt "WZ Window 1 BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:wz_window_1:battery_low"}
Switch wz_window_1_ota "WZ Window 1 OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:wz_window_1:ota"}
Number:Dimensionless wz_window_1_link "WZ Window 1 LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:wz_window_1:link"}
DateTime wz_window_1_activity "WZ Window 1 activity [JS(codegen-display-activity.js):%s]" <time> (g_all_activity) {channel="mqtt:topic:openhab:wz_window_1:activity"}
Contact wz_window_1_contact "WZ Window 1 [%s]" <door> (g_all_contact,wz_windows) {channel="mqtt:topic:openhab:wz_window_1:contact"}
Number:Dimensionless wz_window_1_battery "WZ Window 1  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:wz_window_1:battery"}
// SZ Climate (0x847127fffec6acc3)
// TuYa Temperature & humidity sensor / https://www.zigbee2mqtt.io/devices/TS0201.html
Switch sz_climate_lowbatt "SZ Climate BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:sz_climate:battery_low"}
Switch sz_climate_ota "SZ Climate OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:sz_climate:ota"}
Number:Dimensionless sz_climate_link "SZ Climate LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:sz_climate:link"}
DateTime sz_climate_activity "SZ Climate activity [JS(codegen-display-activity.js):%s]" <time> (g_all_activity) {channel="mqtt:topic:openhab:sz_climate:activity"}
Number:Temperature sz_climate_temperature "SZ Climate temp  [%.0f %unit%]" <temperature> (g_all_temperature) {channel="mqtt:topic:openhab:sz_climate:temperature"}
Number:Dimensionless sz_climate_humidity "SZ Climate humidity  [%.0f %%]" <humidity> (g_all_humidity) {channel="mqtt:topic:openhab:sz_climate:humidity"}
Number:Dimensionless sz_climate_battery "SZ Climate  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:sz_climate:battery"}
// SZ Main (0x842e14fffe0eb8a0)
// Livarno Home Lux ceiling light (14147206L) / https://www.zigbee2mqtt.io/devices/14147206L.html#lidl-14147206l
Dimmer sz_main_light_dim "SZ Main DIM [%d %%]" <light> (g_all_dim) {channel="mqtt:topic:openhab:sz_main_light:dim"}
Dimmer sz_main_light_dim_fast "SZ Main DIM-F [%d %%]" (g_all_dim_fast) {channel="mqtt:topic:openhab:sz_main_light:dim_fast"}
Dimmer sz_main_light_ct "SZ Main CT [JS(codegen-mired.js): %s]" <light> (g_all_ct,astro_color_light_ct) {channel="mqtt:topic:openhab:sz_main_light:ct"}
Switch sz_main_light_ota "SZ Main OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:sz_main_light:ota"}
Number:Dimensionless sz_main_light_link "SZ Main LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:sz_main_light:link"}
Switch sz_main_light_sw "SZ Main" <light> (g_all_sw,all_light,eg_light,sz_light) {channel="mqtt:topic:openhab:sz_main_light:state"}
// FS Main remote (0xb4e3f9fffeb35529)
// IKEA STYRBAR remote control N2 / https://www.zigbee2mqtt.io/devices/E2001_E2002.html
Dimmer sz_remote_main_dim "FS Main remote DIM [%d %%]" <light> (g_all_dim) {channel="mqtt:topic:openhab:sz_remote_main:dim"}
Switch sz_remote_main_lowbatt "FS Main remote BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:sz_remote_main:battery_low"}
Switch sz_remote_main_ota "FS Main remote OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:sz_remote_main:ota"}
Number:Dimensionless sz_remote_main_link "FS Main remote LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:sz_remote_main:link"}
Number:Dimensionless sz_remote_main_battery "FS Main remote  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:sz_remote_main:battery"}
// Bedroom remote (0x14b457fffe7e2305)
// IKEA TRADFRI remote control (E1524/E1810) / https://www.zigbee2mqtt.io/devices/E1524_E1810.html
Switch sz_remote_bed_lowbatt "Bedroom remote BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:sz_remote_bed:battery_low"}
Switch sz_remote_bed_ota "Bedroom remote OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:sz_remote_bed:ota"}
Number:Dimensionless sz_remote_bed_link "Bedroom remote LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:sz_remote_bed:link"}
Number:Dimensionless sz_remote_bed_battery "Bedroom remote  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:sz_remote_bed:battery"}
// Bedroom curtains remote (0x8cf681fffe36d14e)
// IKEA TRADFRI open/close remote (E1766) / https://www.zigbee2mqtt.io/devices/E1766.html
Switch sz_curtain_remote_lowbatt "Bedroom curtains remote BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:sz_curtain_remote:battery_low"}
Switch sz_curtain_remote_ota "Bedroom curtains remote OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:sz_curtain_remote:ota"}
Number:Dimensionless sz_curtain_remote_link "Bedroom curtains remote LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:sz_curtain_remote:link"}
Number:Dimensionless sz_curtain_remote_battery "Bedroom curtains remote  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:sz_curtain_remote:battery"}
// SZ Bedside drawler (0x287681fffe95cba4)
// IKEA TRADFRI driver for wireless control / https://www.zigbee2mqtt.io/devices/ICPSHC24-10EU-IL-1.html
Dimmer sz_bedside_drawler_light_dim "SZ Bedside drawler DIM [%d %%]" <light> (g_all_dim) {channel="mqtt:topic:openhab:sz_bedside_drawler_light:dim"}
Dimmer sz_bedside_drawler_light_dim_fast "SZ Bedside drawler DIM-F [%d %%]" (g_all_dim_fast) {channel="mqtt:topic:openhab:sz_bedside_drawler_light:dim_fast"}
Switch sz_bedside_drawler_light_ota "SZ Bedside drawler OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:sz_bedside_drawler_light:ota"}
Number:Dimensionless sz_bedside_drawler_light_link "SZ Bedside drawler LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:sz_bedside_drawler_light:link"}
Switch sz_bedside_drawler_light_sw "SZ Bedside drawler" <light> (g_all_sw) {channel="mqtt:topic:openhab:sz_bedside_drawler_light:state"}
// SZ Bed L (0x287681fffe6f76fd)
// TRADFRI bulb E12/E14 WS globe 450/470 lumen, dimmable, white spectrum, opal white / https://www.zigbee2mqtt.io/devices/LED2101G4.html
Dimmer sz_bed_light_l_dim "SZ Bed L DIM [%d %%]" <light> (g_all_dim) {channel="mqtt:topic:openhab:sz_bed_light_l:dim"}
Dimmer sz_bed_light_l_dim_fast "SZ Bed L DIM-F [%d %%]" (g_all_dim_fast) {channel="mqtt:topic:openhab:sz_bed_light_l:dim_fast"}
Dimmer sz_bed_light_l_ct "SZ Bed L CT [JS(codegen-mired.js): %s]" <light> (g_all_ct) {channel="mqtt:topic:openhab:sz_bed_light_l:ct"}
Switch sz_bed_light_l_ota "SZ Bed L OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:sz_bed_light_l:ota"}
Number:Dimensionless sz_bed_light_l_link "SZ Bed L LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:sz_bed_light_l:link"}
Switch sz_bed_light_l_sw "SZ Bed L" <light> (g_all_sw,all_light,eg_light,sz_light) {channel="mqtt:topic:openhab:sz_bed_light_l:state"}
// SZ Bed R (0x90395efffeb9dcee)
// TRADFRI bulb E12/E14 WS globe 450/470 lumen, dimmable, white spectrum, opal white / https://www.zigbee2mqtt.io/devices/LED2101G4.html
Dimmer sz_bed_light_r_dim "SZ Bed R DIM [%d %%]" <light> (g_all_dim) {channel="mqtt:topic:openhab:sz_bed_light_r:dim"}
Dimmer sz_bed_light_r_dim_fast "SZ Bed R DIM-F [%d %%]" (g_all_dim_fast) {channel="mqtt:topic:openhab:sz_bed_light_r:dim_fast"}
Dimmer sz_bed_light_r_ct "SZ Bed R CT [JS(codegen-mired.js): %s]" <light> (g_all_ct) {channel="mqtt:topic:openhab:sz_bed_light_r:ct"}
Switch sz_bed_light_r_ota "SZ Bed R OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:sz_bed_light_r:ota"}
Number:Dimensionless sz_bed_light_r_link "SZ Bed R LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:sz_bed_light_r:link"}
Switch sz_bed_light_r_sw "SZ Bed R" <light> (g_all_sw,all_light,eg_light,sz_light) {channel="mqtt:topic:openhab:sz_bed_light_r:state"}
// KU Climate (0xa4c138f5460e22dd)
// TuYa Temperature & humidity sensor / https://www.zigbee2mqtt.io/devices/TS0201.html
Switch ku_climate_lowbatt "KU Climate BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:ku_climate:battery_low"}
Switch ku_climate_ota "KU Climate OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:ku_climate:ota"}
Number:Dimensionless ku_climate_link "KU Climate LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:ku_climate:link"}
DateTime ku_climate_activity "KU Climate activity [JS(codegen-display-activity.js):%s]" <time> (g_all_activity) {channel="mqtt:topic:openhab:ku_climate:activity"}
Number:Temperature ku_climate_temperature "KU Climate temp  [%.0f %unit%]" <temperature> (g_all_temperature) {channel="mqtt:topic:openhab:ku_climate:temperature"}
Number:Dimensionless ku_climate_humidity "KU Climate humidity  [%.0f %%]" <humidity> (g_all_humidity) {channel="mqtt:topic:openhab:ku_climate:humidity"}
Number:Dimensionless ku_climate_battery "KU Climate  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:ku_climate:battery"}
// KU Light Button (Spüle) (0x00158d0001be5b2d)
// Xiaomi MiJia wireless switch (WXKG01LM) / https://www.zigbee2mqtt.io/devices/WXKG01LM.html
Switch ku_light_switch_spule_lowbatt "KU Light Button (Spüle) BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:ku_light_switch_spule:battery_low"}
Switch ku_light_switch_spule_ota "KU Light Button (Spüle) OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:ku_light_switch_spule:ota"}
Number:Dimensionless ku_light_switch_spule_link "KU Light Button (Spüle) LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:ku_light_switch_spule:link"}
Number:Dimensionless ku_light_switch_spule_battery "KU Light Button (Spüle)  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:ku_light_switch_spule:battery"}
// KU Light Button (Kochfield) (0x680ae2fffeaf18d4)
// IKEA TRADFRI remote control (E1524/E1810) / https://www.zigbee2mqtt.io/devices/E1524_E1810.html
Switch ku_light_switch_kochfeld_lowbatt "KU Light Button (Kochfield) BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:ku_light_switch_kochfeld:battery_low"}
Switch ku_light_switch_kochfeld_ota "KU Light Button (Kochfield) OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:ku_light_switch_kochfeld:ota"}
Number:Dimensionless ku_light_switch_kochfeld_link "KU Light Button (Kochfield) LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:ku_light_switch_kochfeld:link"}
Number:Dimensionless ku_light_switch_kochfeld_battery "KU Light Button (Kochfield)  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:ku_light_switch_kochfeld:battery"}
// KU Light Arbeit (0xec1bbdfffea37757)
// Lidl Silvercrest smart plug (EU, CH, FR, BS, DK) (HG06337) / https://www.zigbee2mqtt.io/devices/HG06337.html
Switch ku_light_arbeitplatte_ota "KU Light Arbeit OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:ku_light_arbeitplatte:ota"}
Number:Dimensionless ku_light_arbeitplatte_link "KU Light Arbeit LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:ku_light_arbeitplatte:link"}
Switch ku_light_arbeitplatte_sw "KU Light Arbeit" <light> (g_all_sw,all_light,eg_light,ku_light,ku_up_light) {channel="mqtt:topic:openhab:ku_light_arbeitplatte:state", expire="3h,command=OFF"}
// KU Light Table SW (0x04cd15fffe789098)
// IKEA STYRBAR remote control N2 / https://www.zigbee2mqtt.io/devices/E2001_E2002.html
Dimmer ku_light_table_switch_dim "KU Light Table SW DIM [%d %%]" <light> (g_all_dim) {channel="mqtt:topic:openhab:ku_light_table_switch:dim"}
Switch ku_light_table_switch_lowbatt "KU Light Table SW BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:ku_light_table_switch:battery_low"}
Switch ku_light_table_switch_ota "KU Light Table SW OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:ku_light_table_switch:ota"}
Number:Dimensionless ku_light_table_switch_link "KU Light Table SW LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:ku_light_table_switch:link"}
Number:Dimensionless ku_light_table_switch_battery "KU Light Table SW  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:ku_light_table_switch:battery"}
// KU Light Table (0xec1bbdfffe4695b5)
// IKEA TRADFRI LED bulb E26/E27 806 lumen, dimmable, warm white (LED1836G9) / https://www.zigbee2mqtt.io/devices/LED1836G9.html
Dimmer ku_light_table_dim "KU Light Table DIM [%d %%]" <light> (g_all_dim,eg_light_auto_dim) {channel="mqtt:topic:openhab:ku_light_table:dim"}
Dimmer ku_light_table_dim_fast "KU Light Table DIM-F [%d %%]" (g_all_dim_fast) {channel="mqtt:topic:openhab:ku_light_table:dim_fast"}
Switch ku_light_table_ota "KU Light Table OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:ku_light_table:ota"}
Number:Dimensionless ku_light_table_link "KU Light Table LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:ku_light_table:link"}
Switch ku_light_table_sw "KU Light Table" <light> (g_all_sw,all_light,eg_light,ku_light,eg_light_auto) {channel="mqtt:topic:openhab:ku_light_table:state"}
// KU Light SW (0x842e14fffe1267fb)
// TS0601_switch - TuYa 1, 2, 3 or 4 gang switch (Router) / https://www.zigbee2mqtt.io/devices/TS0601_switch.html
Switch ku_light_switch_ota "KU Light SW OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:ku_light_switch:ota"}
Number:Dimensionless ku_light_switch_link "KU Light SW LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:ku_light_switch:link"}
Switch ku_light_switch_haupt_sw "KU Light Haupt (Wall SW)" <light> (g_all_sw,all_light,eg_light,ku_light,ku_up_light) {channel="mqtt:topic:openhab:ku_light_switch:state_l1"}
Switch ku_light_switch_arbeit_sw "KU Light Arbeit (Wall SW)" <light> (g_all_sw,all_light,eg_light,ku_light,ku_up_light) {channel="mqtt:topic:openhab:ku_light_switch:state_l2", expire="3h,command=OFF"}
// KU Window Door (0xa4c1389dec8b9204)
// TuYa Rechargeable Zigbee contact sensor (SNTZ007) / https://www.zigbee2mqtt.io/devices/SNTZ007.html
Switch ku_window_door_lowbatt "KU Window Door BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:ku_window_door:battery_low"}
Switch ku_window_door_ota "KU Window Door OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:ku_window_door:ota"}
Number:Dimensionless ku_window_door_link "KU Window Door LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:ku_window_door:link"}
DateTime ku_window_door_activity "KU Window Door activity [JS(codegen-display-activity.js):%s]" <time> (g_all_activity) {channel="mqtt:topic:openhab:ku_window_door:activity"}
Contact ku_window_door_contact "KU Window Door [%s]" <door> (g_all_contact,ku_windows) {channel="mqtt:topic:openhab:ku_window_door:contact"}
Number:Dimensionless ku_window_door_battery "KU Window Door  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:ku_window_door:battery"}
// Treppe Door sensor (0xccccccfffed82b91)
// TuYa Rechargeable Zigbee contact sensor (SNTZ007) / https://www.zigbee2mqtt.io/devices/SNTZ007.html
Switch treppe_door_sensor_lowbatt "Treppe Door sensor BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:treppe_door_sensor:battery_low"}
Switch treppe_door_sensor_ota "Treppe Door sensor OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:treppe_door_sensor:ota"}
Number:Dimensionless treppe_door_sensor_link "Treppe Door sensor LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:treppe_door_sensor:link"}
DateTime treppe_door_sensor_activity "Treppe Door sensor activity [JS(codegen-display-activity.js):%s]" <time> (g_all_activity) {channel="mqtt:topic:openhab:treppe_door_sensor:activity"}
Contact treppe_door_sensor_contact "Treppe Door sensor [%s]" <door> (g_all_contact) {channel="mqtt:topic:openhab:treppe_door_sensor:contact"}
Number:Dimensionless treppe_door_sensor_battery "Treppe Door sensor  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:treppe_door_sensor:battery"}
// Treppe Up switch (0x680ae2fffe1a92f3)
// IKEA TRADFRI ON/OFF switch (E1743) / https://www.zigbee2mqtt.io/devices/E1743.html
Switch treppe_up_switch_lowbatt "Treppe Up switch BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:treppe_up_switch:battery_low"}
Switch treppe_up_switch_ota "Treppe Up switch OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:treppe_up_switch:ota"}
Number:Dimensionless treppe_up_switch_link "Treppe Up switch LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:treppe_up_switch:link"}
Number:Dimensionless treppe_up_switch_battery "Treppe Up switch  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:treppe_up_switch:battery"}
// Treppe Down switch (0x04cd15fffe75c518)
// IKEA STYRBAR remote control N2 / https://www.zigbee2mqtt.io/devices/E2001_E2002.html
Dimmer treppe_down_switch_dim "Treppe Down switch DIM [%d %%]" <light> (g_all_dim) {channel="mqtt:topic:openhab:treppe_down_switch:dim"}
Switch treppe_down_switch_lowbatt "Treppe Down switch BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:treppe_down_switch:battery_low"}
Switch treppe_down_switch_ota "Treppe Down switch OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:treppe_down_switch:ota"}
Number:Dimensionless treppe_down_switch_link "Treppe Down switch LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:treppe_down_switch:link"}
Number:Dimensionless treppe_down_switch_battery "Treppe Down switch  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:treppe_down_switch:battery"}
// Treppe Up light (0xd0cf5efffee892b0)
// IKEA TRADFRI LED bulb E27 1000 lumen, dimmable, white spectrum, opal white (LED1732G11) / https://www.zigbee2mqtt.io/devices/LED1732G11.html
Dimmer treppe_up_light_dim "Treppe Up light DIM [%d %%]" <light> (g_all_dim,tr_light_dim) {channel="mqtt:topic:openhab:treppe_up_light:dim"}
Dimmer treppe_up_light_dim_fast "Treppe Up light DIM-F [%d %%]" (g_all_dim_fast) {channel="mqtt:topic:openhab:treppe_up_light:dim_fast"}
Dimmer treppe_up_light_ct "Treppe Up light CT [JS(codegen-mired.js): %s]" <light> (g_all_ct,tr_light_ct,astro_color_light_ct) {channel="mqtt:topic:openhab:treppe_up_light:ct"}
Switch treppe_up_light_ota "Treppe Up light OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:treppe_up_light:ota"}
Number:Dimensionless treppe_up_light_link "Treppe Up light LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:treppe_up_light:link"}
Switch treppe_up_light_sw "Treppe Up light" <light> (g_all_sw,all_light,tr_light,kg_light,kg_light_auto) {channel="mqtt:topic:openhab:treppe_up_light:state", expire="1h,command=OFF"}
// Treppe Down light (0x04cd15fffedb31f7)
// Livarno Home LED ceiling light (HG08008) / https://www.zigbee2mqtt.io/devices/HG08008.html#lidl-hg08008
Dimmer treppe_down_light_dim "Treppe Down light DIM [%d %%]" <light> (g_all_dim,tr_light_dim) {channel="mqtt:topic:openhab:treppe_down_light:dim"}
Dimmer treppe_down_light_dim_fast "Treppe Down light DIM-F [%d %%]" (g_all_dim_fast) {channel="mqtt:topic:openhab:treppe_down_light:dim_fast"}
Dimmer treppe_down_light_ct "Treppe Down light CT [JS(codegen-mired.js): %s]" <light> (g_all_ct,tr_light_ct,astro_color_light_ct) {channel="mqtt:topic:openhab:treppe_down_light:ct"}
Color tr_down_light_color "Treppe Down light Color" <colorwheel> (g_all_color) {channel="mqtt:topic:openhab:treppe_down_light:color"}
String tr_down_light_color_mode "Treppe Down light Color mode" <colorwheel> (g_all_color_mode) {channel="mqtt:topic:openhab:treppe_down_light:color_mode"}
Switch treppe_down_light_ota "Treppe Down light OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:treppe_down_light:ota"}
Number:Dimensionless treppe_down_light_link "Treppe Down light LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:treppe_down_light:link"}
Switch treppe_down_light_sw_proxy "Treppe Down light proxy" <light> (g_all_sw,all_light,tr_light,kg_light,kg_light_auto)
Switch treppe_down_light_sw "Treppe Down light" <light> {channel="mqtt:topic:openhab:treppe_down_light:state", expire="1h,command=OFF"}
// Treppe motion (0xbc33acfffe872049)
// IKEA TRADFRI motion sensor (E1525/E1745) / https://www.zigbee2mqtt.io/devices/E1525_E1745.html
Switch tr_motion_lowbatt "Treppe motion BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:treppe_motion:battery_low"}
Switch tr_motion_ota "Treppe motion OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:treppe_motion:ota"}
Number:Dimensionless tr_motion_link "Treppe motion LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:treppe_motion:link"}
DateTime tr_motion_activity "Treppe motion activity [JS(codegen-display-activity.js):%s]" <time> (g_all_activity) {channel="mqtt:topic:openhab:treppe_motion:activity"}
Switch tr_motion_occupancy "Treppe motion [%s]" <motion> (g_all_occupancy) {channel="mqtt:topic:openhab:treppe_motion:occupancy"}
Number:Dimensionless tr_motion_battery "Treppe motion  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:treppe_motion:battery"}
// Treppe climate (0xa4c1383cc92cbbd2)
// TuYa Temperature & humidity sensor / https://www.zigbee2mqtt.io/devices/TS0201.html
Switch tr_climate_lowbatt "Treppe climate BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:tr_climate:battery_low"}
Switch tr_climate_ota "Treppe climate OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:tr_climate:ota"}
Number:Dimensionless tr_climate_link "Treppe climate LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:tr_climate:link"}
DateTime tr_climate_activity "Treppe climate activity [JS(codegen-display-activity.js):%s]" <time> (g_all_activity) {channel="mqtt:topic:openhab:tr_climate:activity"}
Number:Temperature tr_climate_temperature "Treppe climate temp  [%.0f %unit%]" <temperature> (g_all_temperature) {channel="mqtt:topic:openhab:tr_climate:temperature"}
Number:Dimensionless tr_climate_humidity "Treppe climate humidity  [%.0f %%]" <humidity> (g_all_humidity) {channel="mqtt:topic:openhab:tr_climate:humidity"}
Number:Dimensionless tr_climate_battery "Treppe climate  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:tr_climate:battery"}
// KG Window (Cabinet) (0xccccccfffed82ba3)
// TuYa Rechargeable Zigbee contact sensor (SNTZ007) / https://www.zigbee2mqtt.io/devices/SNTZ007.html
Switch kg_window_1_lowbatt "KG Window (Cabinet) BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:kg_window_1:battery_low"}
Switch kg_window_1_ota "KG Window (Cabinet) OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:kg_window_1:ota"}
Number:Dimensionless kg_window_1_link "KG Window (Cabinet) LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:kg_window_1:link"}
DateTime kg_window_1_activity "KG Window (Cabinet) activity [JS(codegen-display-activity.js):%s]" <time> (g_all_activity) {channel="mqtt:topic:openhab:kg_window_1:activity"}
Contact kg_window_1_contact "KG Window (Cabinet) [%s]" <door> (g_all_contact,kg_windows) {channel="mqtt:topic:openhab:kg_window_1:contact"}
Number:Dimensionless kg_window_1_battery "KG Window (Cabinet)  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:kg_window_1:battery"}
// KG Window (Hobbyraum) (0xa4c1381a072fcf8b)
// TuYa Rechargeable Zigbee contact sensor (SNTZ007) / https://www.zigbee2mqtt.io/devices/SNTZ007.html
Switch kg_window_2_lowbatt "KG Window (Hobbyraum) BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:kg_window_2:battery_low"}
Switch kg_window_2_ota "KG Window (Hobbyraum) OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:kg_window_2:ota"}
Number:Dimensionless kg_window_2_link "KG Window (Hobbyraum) LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:kg_window_2:link"}
DateTime kg_window_2_activity "KG Window (Hobbyraum) activity [JS(codegen-display-activity.js):%s]" <time> (g_all_activity) {channel="mqtt:topic:openhab:kg_window_2:activity"}
Contact kg_window_2_contact "KG Window (Hobbyraum) [%s]" <door> (g_all_contact,kg_windows,g_windows_skip_off) {channel="mqtt:topic:openhab:kg_window_2:contact"}
Number:Dimensionless kg_window_2_battery "KG Window (Hobbyraum)  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:kg_window_2:battery"}
// KG Cabinet door (0xa4c138312d2c455f)
// TuYa Rechargeable Zigbee contact sensor (SNTZ007) / https://www.zigbee2mqtt.io/devices/SNTZ007.html
Switch kg_cabinet_door_lowbatt "KG Cabinet door BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:kg_cabinet_door:battery_low"}
Switch kg_cabinet_door_ota "KG Cabinet door OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:kg_cabinet_door:ota"}
Number:Dimensionless kg_cabinet_door_link "KG Cabinet door LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:kg_cabinet_door:link"}
DateTime kg_cabinet_door_activity "KG Cabinet door activity [JS(codegen-display-activity.js):%s]" <time> (g_all_activity) {channel="mqtt:topic:openhab:kg_cabinet_door:activity"}
Contact kg_cabinet_door_contact "KG Cabinet door [%s]" <door> (g_all_contact,kg_windows,g_windows_skip_off) {channel="mqtt:topic:openhab:kg_cabinet_door:contact"}
Number:Dimensionless kg_cabinet_door_battery "KG Cabinet door  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:kg_cabinet_door:battery"}
// KG Climate (0xa4c138234138f73a)
// TuYa Temperature & humidity sensor / https://www.zigbee2mqtt.io/devices/TS0201.html
Switch kg_climate_lowbatt "KG Climate BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:kg_climate:battery_low"}
Switch kg_climate_ota "KG Climate OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:kg_climate:ota"}
Number:Dimensionless kg_climate_link "KG Climate LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:kg_climate:link"}
DateTime kg_climate_activity "KG Climate activity [JS(codegen-display-activity.js):%s]" <time> (g_all_activity) {channel="mqtt:topic:openhab:kg_climate:activity"}
Number:Temperature kg_climate_temperature "KG Climate temp  [%.0f %unit%]" <temperature> (g_all_temperature) {channel="mqtt:topic:openhab:kg_climate:temperature"}
Number:Dimensionless kg_climate_humidity "KG Climate humidity  [%.0f %%]" <humidity> (g_all_humidity) {channel="mqtt:topic:openhab:kg_climate:humidity"}
Number:Dimensionless kg_climate_battery "KG Climate  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:kg_climate:battery"}
// Petro Desktop up light 1 (0x04cd15fffe35f24e)
// IKEA TRADFRI LED bulb E27 1000 lumen, dimmable, white spectrum, opal white (LED1732G11) / https://www.zigbee2mqtt.io/devices/LED1732G11.html
Dimmer desktop_petro_up_light_1_dim "Petro Desktop up light 1 DIM [%d %%]" <light> (g_all_dim,kg_light_desktop_dim) {channel="mqtt:topic:openhab:desktop_petro_up_light_1:dim"}
Dimmer desktop_petro_up_light_1_dim_fast "Petro Desktop up light 1 DIM-F [%d %%]" (g_all_dim_fast) {channel="mqtt:topic:openhab:desktop_petro_up_light_1:dim_fast"}
Dimmer desktop_petro_up_light_1_ct "Petro Desktop up light 1 CT [JS(codegen-mired.js): %s]" <light> (g_all_ct,astro_color_light_ct,kg_light_desktop_color) {channel="mqtt:topic:openhab:desktop_petro_up_light_1:ct"}
Switch desktop_petro_up_light_1_ota "Petro Desktop up light 1 OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:desktop_petro_up_light_1:ota"}
Number:Dimensionless desktop_petro_up_light_1_link "Petro Desktop up light 1 LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:desktop_petro_up_light_1:link"}
Switch desktop_petro_up_light_1_sw "Petro Desktop up light 1" <light> (g_all_sw,all_light,kg_light,kg_light_hobbyraum,kg_light_desktop) {channel="mqtt:topic:openhab:desktop_petro_up_light_1:state"}
// Petro Desktop up light 2 (0x04cd15fffe6bf002)
// IKEA TRADFRI LED bulb E27 1000 lumen, dimmable, white spectrum, opal white (LED1732G11) / https://www.zigbee2mqtt.io/devices/LED1732G11.html
Dimmer desktop_petro_up_light_2_dim "Petro Desktop up light 2 DIM [%d %%]" <light> (g_all_dim,kg_light_desktop_dim) {channel="mqtt:topic:openhab:desktop_petro_up_light_2:dim"}
Dimmer desktop_petro_up_light_2_dim_fast "Petro Desktop up light 2 DIM-F [%d %%]" (g_all_dim_fast) {channel="mqtt:topic:openhab:desktop_petro_up_light_2:dim_fast"}
Dimmer desktop_petro_up_light_2_ct "Petro Desktop up light 2 CT [JS(codegen-mired.js): %s]" <light> (g_all_ct,astro_color_light_ct,kg_light_desktop_color) {channel="mqtt:topic:openhab:desktop_petro_up_light_2:ct"}
Switch desktop_petro_up_light_2_ota "Petro Desktop up light 2 OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:desktop_petro_up_light_2:ota"}
Number:Dimensionless desktop_petro_up_light_2_link "Petro Desktop up light 2 LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:desktop_petro_up_light_2:link"}
Switch desktop_petro_up_light_2_sw "Petro Desktop up light 2" <light> (g_all_sw,all_light,kg_light,kg_light_hobbyraum,kg_light_desktop) {channel="mqtt:topic:openhab:desktop_petro_up_light_2:state"}
// Petro Desktop up light 3 (0x04cd15fffe73ecb6)
// IKEA TRADFRI LED bulb E27 1000 lumen, dimmable, white spectrum, opal white (LED1732G11) / https://www.zigbee2mqtt.io/devices/LED1732G11.html
Dimmer desktop_petro_up_light_3_dim "Petro Desktop up light 3 DIM [%d %%]" <light> (g_all_dim,kg_light_desktop_dim) {channel="mqtt:topic:openhab:desktop_petro_up_light_3:dim"}
Dimmer desktop_petro_up_light_3_dim_fast "Petro Desktop up light 3 DIM-F [%d %%]" (g_all_dim_fast) {channel="mqtt:topic:openhab:desktop_petro_up_light_3:dim_fast"}
Dimmer desktop_petro_up_light_3_ct "Petro Desktop up light 3 CT [JS(codegen-mired.js): %s]" <light> (g_all_ct,astro_color_light_ct,kg_light_desktop_color) {channel="mqtt:topic:openhab:desktop_petro_up_light_3:ct"}
Switch desktop_petro_up_light_3_ota "Petro Desktop up light 3 OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:desktop_petro_up_light_3:ota"}
Number:Dimensionless desktop_petro_up_light_3_link "Petro Desktop up light 3 LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:desktop_petro_up_light_3:link"}
Switch desktop_petro_up_light_3_sw "Petro Desktop up light 3" <light> (g_all_sw,all_light,kg_light,kg_light_hobbyraum,kg_light_desktop) {channel="mqtt:topic:openhab:desktop_petro_up_light_3:state"}
// Petro Desktop light (0xccccccfffed8ef9d)
// IKEA TRADFRI LED bulb E27 806 lumen, dimmable, white spectrum, clear (LED1736G9) / https://www.zigbee2mqtt.io/devices/LED1736G9.html
Dimmer desktop_petro_light_dim "Petro Desktop light DIM [%d %%]" <light> (g_all_dim) {channel="mqtt:topic:openhab:desktop_petro_light:dim"}
Dimmer desktop_petro_light_dim_fast "Petro Desktop light DIM-F [%d %%]" (g_all_dim_fast) {channel="mqtt:topic:openhab:desktop_petro_light:dim_fast"}
Dimmer desktop_petro_light_ct "Petro Desktop light CT [JS(codegen-mired.js): %s]" <light> (g_all_ct,astro_color_light_ct) {channel="mqtt:topic:openhab:desktop_petro_light:ct"}
Switch desktop_petro_light_ota "Petro Desktop light OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:desktop_petro_light:ota"}
Number:Dimensionless desktop_petro_light_link "Petro Desktop light LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:desktop_petro_light:link"}
Switch desktop_petro_light_sw "Petro Desktop light" <light> (g_all_sw,all_light,kg_light,kg_light_hobbyraum) {channel="mqtt:topic:openhab:desktop_petro_light:state"}
// Petro Desktop PC (desktop_petro_pc_power)
// Sonoff Mini Switch / https://templates.blakadder.com/sonoff_mini.html
Switch desktop_petro_pc_power "Petro Desktop PC" <light> (g_all_sw) {channel="mqtt:topic:openhab:desktop_petro_pc_power:POWER"}
Number:Dimensionless desktop_petro_pc_power_rssi "Petro Desktop PC RSSI [%.0f]" <network> (g_all_rssi) {channel="mqtt:topic:openhab:desktop_petro_pc_power:rssi"}
String desktop_petro_pc_power_bssid "Petro Desktop PC BSSID [%s]" <network> (g_all_bssid) {channel="mqtt:topic:openhab:desktop_petro_pc_power:bssid"}
DateTime desktop_petro_pc_power_activity "Petro Desktop PC activity [JS(codegen-display-activity.js):%s]" <time> (g_all_activity) {channel="mqtt:topic:openhab:desktop_petro_pc_power:activity"}
// Petro Desktop remote (0x000d6ffffee8357d)
// IKEA TRADFRI remote control (E1524/E1810) / https://www.zigbee2mqtt.io/devices/E1524_E1810.html
Switch desktop_petro_remote_lowbatt "Petro Desktop remote BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:desktop_petro_remote:battery_low"}
Switch desktop_petro_remote_ota "Petro Desktop remote OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:desktop_petro_remote:ota"}
Number:Dimensionless desktop_petro_remote_link "Petro Desktop remote LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:desktop_petro_remote:link"}
Number:Dimensionless desktop_petro_remote_battery "Petro Desktop remote  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:desktop_petro_remote:battery"}
// KG Hobbyraum (Work light) (0x7cb03eaa0a0a1103)
// OSRAM Smart+ plug / https://www.zigbee2mqtt.io/devices/AB3257001NJ.html
Switch kg_main1_work_light_ota "KG Hobbyraum (Work light) OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:kg_main1_work_light:ota"}
Number:Dimensionless kg_main1_work_light_link "KG Hobbyraum (Work light) LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:kg_main1_work_light:link"}
Switch kg_main1_work_light_sw "KG Hobbyraum (Work light)" <light> (g_all_sw,all_light,kg_light,kg_light_hobbyraum) {channel="mqtt:topic:openhab:kg_main1_work_light:state"}
// KG Hobbyraum (Workshop) (kg_main1_light)
// Sonoff Touch EU Switch (1 gang) / https://templates.blakadder.com/sonoff_touch_eu.html
Switch kg_main1_light "KG Hobbyraum (Workshop)" <light> (g_all_sw,all_light,kg_light,kg_light_hobbyraum,kg_light_auto) {channel="mqtt:topic:openhab:kg_main1_light:POWER"}
Number:Dimensionless kg_main1_light_rssi "KG Hobbyraum (Workshop) RSSI [%.0f]" <network> (g_all_rssi) {channel="mqtt:topic:openhab:kg_main1_light:rssi"}
String kg_main1_light_bssid "KG Hobbyraum (Workshop) BSSID [%s]" <network> (g_all_bssid) {channel="mqtt:topic:openhab:kg_main1_light:bssid"}
DateTime kg_main1_light_activity "KG Hobbyraum (Workshop) activity [JS(codegen-display-activity.js):%s]" <time> (g_all_activity) {channel="mqtt:topic:openhab:kg_main1_light:activity"}
// KG Hobbyraum (Haupt) (kg_main2_light)
// Sonoff Touch EU Switch (1 gang) / https://templates.blakadder.com/sonoff_touch_eu.html
Switch kg_main2_light "KG Hobbyraum (Haupt)" <light> (g_all_sw,all_light,kg_light,kg_light_hobbyraum) {channel="mqtt:topic:openhab:kg_main2_light:POWER"}
Number:Dimensionless kg_main2_light_rssi "KG Hobbyraum (Haupt) RSSI [%.0f]" <network> (g_all_rssi) {channel="mqtt:topic:openhab:kg_main2_light:rssi"}
String kg_main2_light_bssid "KG Hobbyraum (Haupt) BSSID [%s]" <network> (g_all_bssid) {channel="mqtt:topic:openhab:kg_main2_light:bssid"}
DateTime kg_main2_light_activity "KG Hobbyraum (Haupt) activity [JS(codegen-display-activity.js):%s]" <time> (g_all_activity) {channel="mqtt:topic:openhab:kg_main2_light:activity"}
// KG Heuzung (Haupt) (kg_hz_main_light)
// Sonoff Mini Switch / https://templates.blakadder.com/sonoff_mini.html
Switch kg_hz_main_light "KG Heuzung (Haupt)" <light> (g_all_sw,all_light,kg_light) {channel="mqtt:topic:openhab:kg_hz_main_light:POWER"}
Number:Dimensionless kg_hz_main_light_rssi "KG Heuzung (Haupt) RSSI [%.0f]" <network> (g_all_rssi) {channel="mqtt:topic:openhab:kg_hz_main_light:rssi"}
String kg_hz_main_light_bssid "KG Heuzung (Haupt) BSSID [%s]" <network> (g_all_bssid) {channel="mqtt:topic:openhab:kg_hz_main_light:bssid"}
DateTime kg_hz_main_light_activity "KG Heuzung (Haupt) activity [JS(codegen-display-activity.js):%s]" <time> (g_all_activity) {channel="mqtt:topic:openhab:kg_hz_main_light:activity"}
// Garden water (garten_wasser_sw)
// Sonoff Mini Switch / https://templates.blakadder.com/sonoff_mini.html
Switch garten_wasser_sw "Garden water" <light> (g_all_sw) {channel="mqtt:topic:openhab:garten_wasser_sw:POWER"}
Number:Dimensionless garten_wasser_sw_rssi "Garden water RSSI [%.0f]" <network> (g_all_rssi) {channel="mqtt:topic:openhab:garten_wasser_sw:rssi"}
String garten_wasser_sw_bssid "Garden water BSSID [%s]" <network> (g_all_bssid) {channel="mqtt:topic:openhab:garten_wasser_sw:bssid"}
DateTime garten_wasser_sw_activity "Garden water activity [JS(codegen-display-activity.js):%s]" <time> (g_all_activity) {channel="mqtt:topic:openhab:garten_wasser_sw:activity"}
// Warehouse 3 leak (0x00158d0006b7aa81)
// Xiaomi Aqara water leak sensor (SJCGQ11LM) / https://www.zigbee2mqtt.io/devices/SJCGQ11LM.html
Switch garten_wasser_leak_lowbatt "Warehouse 3 leak BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:garten_wasser_leak:battery_low"}
Switch garten_wasser_leak_ota "Warehouse 3 leak OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:garten_wasser_leak:ota"}
Number:Dimensionless garten_wasser_leak_link "Warehouse 3 leak LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:garten_wasser_leak:link"}
DateTime garten_wasser_leak_activity "Warehouse 3 leak activity [JS(codegen-display-activity.js):%s]" <time> (g_all_activity) {channel="mqtt:topic:openhab:garten_wasser_leak:activity"}
Switch garten_wasser_leak_leak "Warehouse 3 leak [%s]" <flow> (g_all_leak) {channel="mqtt:topic:openhab:garten_wasser_leak:leak"}
Number:Dimensionless garten_wasser_leak_battery "Warehouse 3 leak  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:garten_wasser_leak:battery"}
// KG Lager 1 (Haupt) (kg_lager1_main_light)
// Sonoff Mini Switch / https://templates.blakadder.com/sonoff_mini.html
Switch kg_lager1_main_light "KG Lager 1 (Haupt)" <light> (g_all_sw,all_light,kg_light) {channel="mqtt:topic:openhab:kg_lager1_main_light:POWER"}
Number:Dimensionless kg_lager1_main_light_rssi "KG Lager 1 (Haupt) RSSI [%.0f]" <network> (g_all_rssi) {channel="mqtt:topic:openhab:kg_lager1_main_light:rssi"}
String kg_lager1_main_light_bssid "KG Lager 1 (Haupt) BSSID [%s]" <network> (g_all_bssid) {channel="mqtt:topic:openhab:kg_lager1_main_light:bssid"}
DateTime kg_lager1_main_light_activity "KG Lager 1 (Haupt) activity [JS(codegen-display-activity.js):%s]" <time> (g_all_activity) {channel="mqtt:topic:openhab:kg_lager1_main_light:activity"}
// KG Lager 3 Climate (0x00158d0001c19a6b)
// Xiaomi Aqara temperature, humidity and pressure sensor (WSDCGQ11LM) / https://www.zigbee2mqtt.io/devices/WSDCGQ11LM.html
Switch kg_lager3_climate_lowbatt "KG Lager 3 Climate BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:kg_lager3_climate:battery_low"}
Switch kg_lager3_climate_ota "KG Lager 3 Climate OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:kg_lager3_climate:ota"}
Number:Dimensionless kg_lager3_climate_link "KG Lager 3 Climate LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:kg_lager3_climate:link"}
DateTime kg_lager3_climate_activity "KG Lager 3 Climate activity [JS(codegen-display-activity.js):%s]" <time> (g_all_activity) {channel="mqtt:topic:openhab:kg_lager3_climate:activity"}
Number:Temperature kg_lager3_climate_temperature "KG Lager 3 Climate temp  [%.0f %unit%]" <temperature> (g_all_temperature) {channel="mqtt:topic:openhab:kg_lager3_climate:temperature"}
Number:Dimensionless kg_lager3_climate_humidity "KG Lager 3 Climate humidity  [%.0f %%]" <humidity> (g_all_humidity) {channel="mqtt:topic:openhab:kg_lager3_climate:humidity"}
Number:Pressure kg_lager3_climate_pressure "KG Lager 3 Climate pressure  [%.0f %unit%]" <pressure> (g_all_pressure) {channel="mqtt:topic:openhab:kg_lager3_climate:pressure"}
Number:Dimensionless kg_lager3_climate_battery "KG Lager 3 Climate  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:kg_lager3_climate:battery"}
// KG Lager 3 motion (0x04cd15fffe873cb7)
// IKEA TRADFRI motion sensor (E1525/E1745) / https://www.zigbee2mqtt.io/devices/E1525_E1745.html
Switch kg_lager3_motion_lowbatt "KG Lager 3 motion BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:kg_lager3_motion:battery_low"}
Switch kg_lager3_motion_ota "KG Lager 3 motion OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:kg_lager3_motion:ota"}
Number:Dimensionless kg_lager3_motion_link "KG Lager 3 motion LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:kg_lager3_motion:link"}
DateTime kg_lager3_motion_activity "KG Lager 3 motion activity [JS(codegen-display-activity.js):%s]" <time> (g_all_activity) {channel="mqtt:topic:openhab:kg_lager3_motion:activity"}
Switch kg_lager3_motion_occupancy "KG Lager 3 motion [%s]" <motion> (g_all_occupancy) {channel="mqtt:topic:openhab:kg_lager3_motion:occupancy"}
Number:Dimensionless kg_lager3_motion_battery "KG Lager 3 motion  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:kg_lager3_motion:battery"}
// KG Lager 3 door (0xa4c138a52c4e5c19)
// TuYa Rechargeable Zigbee contact sensor (TS0203) / https://www.zigbee2mqtt.io/devices/TS0203.html#tuya-ts0203
Switch kg_lager3_door_lowbatt "KG Lager 3 door BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:kg_lager3_door:battery_low"}
Switch kg_lager3_door_ota "KG Lager 3 door OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:kg_lager3_door:ota"}
Number:Dimensionless kg_lager3_door_link "KG Lager 3 door LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:kg_lager3_door:link"}
DateTime kg_lager3_door_activity "KG Lager 3 door activity [JS(codegen-display-activity.js):%s]" <time> (g_all_activity) {channel="mqtt:topic:openhab:kg_lager3_door:activity"}
Contact kg_lager3_door_contact "KG Lager 3 door [%s]" <door> (g_all_contact) {channel="mqtt:topic:openhab:kg_lager3_door:contact"}
Number:Dimensionless kg_lager3_door_battery "KG Lager 3 door  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:kg_lager3_door:battery"}
// KG Lager 3 (Haupt) (kg_lager3_main_light)
// Sonoff Mini Switch / https://templates.blakadder.com/sonoff_mini.html
Switch kg_lager3_main_light "KG Lager 3 (Haupt)" <light> (g_all_sw,all_light,kg_light) {channel="mqtt:topic:openhab:kg_lager3_main_light:POWER"}
Number:Dimensionless kg_lager3_main_light_rssi "KG Lager 3 (Haupt) RSSI [%.0f]" <network> (g_all_rssi) {channel="mqtt:topic:openhab:kg_lager3_main_light:rssi"}
String kg_lager3_main_light_bssid "KG Lager 3 (Haupt) BSSID [%s]" <network> (g_all_bssid) {channel="mqtt:topic:openhab:kg_lager3_main_light:bssid"}
DateTime kg_lager3_main_light_activity "KG Lager 3 (Haupt) activity [JS(codegen-display-activity.js):%s]" <time> (g_all_activity) {channel="mqtt:topic:openhab:kg_lager3_main_light:activity"}
// KG Lager 4 (Haupt) (kg_lager4_main_light)
// Sonoff Mini Switch / https://templates.blakadder.com/sonoff_mini.html
Switch kg_lager4_main_light "KG Lager 4 (Haupt)" <light> (g_all_sw,all_light,kg_light) {channel="mqtt:topic:openhab:kg_lager4_main_light:POWER"}
Number:Dimensionless kg_lager4_main_light_rssi "KG Lager 4 (Haupt) RSSI [%.0f]" <network> (g_all_rssi) {channel="mqtt:topic:openhab:kg_lager4_main_light:rssi"}
String kg_lager4_main_light_bssid "KG Lager 4 (Haupt) BSSID [%s]" <network> (g_all_bssid) {channel="mqtt:topic:openhab:kg_lager4_main_light:bssid"}
DateTime kg_lager4_main_light_activity "KG Lager 4 (Haupt) activity [JS(codegen-display-activity.js):%s]" <time> (g_all_activity) {channel="mqtt:topic:openhab:kg_lager4_main_light:activity"}
// KG Lager 4 (1) (0xccccccfffedf345a)
// IKEA TRADFRI LED bulb E26/E27 806 lumen, dimmable, warm white (LED1836G9) / https://www.zigbee2mqtt.io/devices/LED1836G9.html
Dimmer kg_lager4_1_light_dim "KG Lager 4 (1) DIM [%d %%]" <light> (g_all_dim,g_dim_lager_auto) {channel="mqtt:topic:openhab:kg_lager4_1_light:dim"}
Dimmer kg_lager4_1_light_dim_fast "KG Lager 4 (1) DIM-F [%d %%]" (g_all_dim_fast) {channel="mqtt:topic:openhab:kg_lager4_1_light:dim_fast"}
Switch kg_lager4_1_light_ota "KG Lager 4 (1) OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:kg_lager4_1_light:ota"}
Number:Dimensionless kg_lager4_1_light_link "KG Lager 4 (1) LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:kg_lager4_1_light:link"}
Switch kg_lager4_1_light_sw "KG Lager 4 (1)" <light> (g_all_sw,all_light,kg_light,g_light_lager_auto) {channel="mqtt:topic:openhab:kg_lager4_1_light:state", expire="1h,command=OFF"}
// KG Lager 4 (2) (0xccccccfffedf5314)
// IKEA TRADFRI LED bulb E26/E27 806 lumen, dimmable, warm white (LED1836G9) / https://www.zigbee2mqtt.io/devices/LED1836G9.html
Dimmer kg_lager4_2_light_dim "KG Lager 4 (2) DIM [%d %%]" <light> (g_all_dim,g_dim_lager_auto) {channel="mqtt:topic:openhab:kg_lager4_2_light:dim"}
Dimmer kg_lager4_2_light_dim_fast "KG Lager 4 (2) DIM-F [%d %%]" (g_all_dim_fast) {channel="mqtt:topic:openhab:kg_lager4_2_light:dim_fast"}
Switch kg_lager4_2_light_ota "KG Lager 4 (2) OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:kg_lager4_2_light:ota"}
Number:Dimensionless kg_lager4_2_light_link "KG Lager 4 (2) LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:kg_lager4_2_light:link"}
Switch kg_lager4_2_light_sw "KG Lager 4 (2)" <light> (g_all_sw,all_light,kg_light,g_light_lager_auto) {channel="mqtt:topic:openhab:kg_lager4_2_light:state", expire="1h,command=OFF"}
// KG Lager switch (0xb43522fffe790ebe)
// IKEA TRADFRI ON/OFF switch (E1743) / https://www.zigbee2mqtt.io/devices/E1743.html
Switch kg_lager4_switch_lowbatt "KG Lager switch BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:kg_lager4_switch:battery_low"}
Switch kg_lager4_switch_ota "KG Lager switch OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:kg_lager4_switch:ota"}
Number:Dimensionless kg_lager4_switch_link "KG Lager switch LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:kg_lager4_switch:link"}
Number:Dimensionless kg_lager4_switch_battery "KG Lager switch  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:kg_lager4_switch:battery"}
// KG Lager motion (0xbc33acfffe84ca1e)
// IKEA TRADFRI motion sensor (E1525/E1745) / https://www.zigbee2mqtt.io/devices/E1525_E1745.html
Switch kg_lager4_motion_lowbatt "KG Lager motion BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:kg_lager4_motion:battery_low"}
Switch kg_lager4_motion_ota "KG Lager motion OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:kg_lager4_motion:ota"}
Number:Dimensionless kg_lager4_motion_link "KG Lager motion LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:kg_lager4_motion:link"}
DateTime kg_lager4_motion_activity "KG Lager motion activity [JS(codegen-display-activity.js):%s]" <time> (g_all_activity) {channel="mqtt:topic:openhab:kg_lager4_motion:activity"}
Switch kg_lager4_motion_occupancy "KG Lager motion [%s]" <motion> (g_all_occupancy) {channel="mqtt:topic:openhab:kg_lager4_motion:occupancy"}
Number:Dimensionless kg_lager4_motion_battery "KG Lager motion  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:kg_lager4_motion:battery"}
// Warehouse 4 leak (0x00158d000488052c)
// Xiaomi Aqara water leak sensor (SJCGQ11LM) / https://www.zigbee2mqtt.io/devices/SJCGQ11LM.html
Switch kg_lager4_leak_lowbatt "Warehouse 4 leak BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:kg_lager4_leak:battery_low"}
Switch kg_lager4_leak_ota "Warehouse 4 leak OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:kg_lager4_leak:ota"}
Number:Dimensionless kg_lager4_leak_link "Warehouse 4 leak LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:kg_lager4_leak:link"}
DateTime kg_lager4_leak_activity "Warehouse 4 leak activity [JS(codegen-display-activity.js):%s]" <time> (g_all_activity) {channel="mqtt:topic:openhab:kg_lager4_leak:activity"}
Switch kg_lager4_leak_leak "Warehouse 4 leak [%s]" <flow> (g_all_leak) {channel="mqtt:topic:openhab:kg_lager4_leak:leak"}
Number:Dimensionless kg_lager4_leak_battery "Warehouse 4 leak  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:kg_lager4_leak:battery"}
// FS heating (0x0c4314fffe63b727)
// Silvercrest radiator valve with thermostat / https://www.zigbee2mqtt.io/devices/368308_2010.html
Number:Temperature fs_heating_thermostat "FS heating SET [%.0f %unit%]" <heatingt> (g_all_thermostat,g_hz_all,g_hz_auto,g_hz_fs) {channel="mqtt:topic:openhab:fs_heating:thermostat"}
String fs_heating_thermostat_mode "FS heating MODE [%s]" <heatingt> (g_all_thermostat_mode) {channel="mqtt:topic:openhab:fs_heating:thermostat_mode"}
String fs_heating_thermostat_preset "FS heating PRESET [%s]" <heatingt> (g_all_thermostat_preset) {channel="mqtt:topic:openhab:fs_heating:thermostat_preset"}
Switch fs_heating_thermostat_enable "FS heating ENABLE [%s]" <heatingt> (g_all_thermostat_enable,g_hz_enable,g_hz_fs_enable) {channel="mqtt:topic:openhab:fs_heating:thermostat_enable"}
Switch fs_heating_lowbatt "FS heating BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:fs_heating:battery_low"}
Switch fs_heating_ota "FS heating OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:fs_heating:ota"}
Number:Dimensionless fs_heating_link "FS heating LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:fs_heating:link"}
DateTime fs_heating_activity "FS heating activity [JS(codegen-display-activity.js):%s]" <time> (g_all_activity) {channel="mqtt:topic:openhab:fs_heating:activity"}
Number:Temperature fs_heating_local_temperature "FS heating temp  [%.0f %unit%]" <local_temperature> (g_all_local_temperature) {channel="mqtt:topic:openhab:fs_heating:local_temperature"}
Number:ElectricPotential fs_heating_battery_voltage "FS heating [%.0f mV]" <energy> (g_all_battery_voltage) {channel="mqtt:topic:openhab:fs_heating:battery_voltage"}
// NS heating (0x0c4314fffe62f090)
// Silvercrest radiator valve with thermostat / https://www.zigbee2mqtt.io/devices/368308_2010.html
Number:Temperature ns_heating_thermostat "NS heating SET [%.0f %unit%]" <heatingt> (g_all_thermostat,g_hz_all,g_hz_auto,g_hz_ns) {channel="mqtt:topic:openhab:ns_heating:thermostat"}
String ns_heating_thermostat_mode "NS heating MODE [%s]" <heatingt> (g_all_thermostat_mode) {channel="mqtt:topic:openhab:ns_heating:thermostat_mode"}
String ns_heating_thermostat_preset "NS heating PRESET [%s]" <heatingt> (g_all_thermostat_preset) {channel="mqtt:topic:openhab:ns_heating:thermostat_preset"}
Switch ns_heating_thermostat_enable "NS heating ENABLE [%s]" <heatingt> (g_all_thermostat_enable,g_hz_enable,g_hz_ns_enable) {channel="mqtt:topic:openhab:ns_heating:thermostat_enable"}
Switch ns_heating_lowbatt "NS heating BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:ns_heating:battery_low"}
Switch ns_heating_ota "NS heating OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:ns_heating:ota"}
Number:Dimensionless ns_heating_link "NS heating LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:ns_heating:link"}
DateTime ns_heating_activity "NS heating activity [JS(codegen-display-activity.js):%s]" <time> (g_all_activity) {channel="mqtt:topic:openhab:ns_heating:activity"}
Number:Temperature ns_heating_local_temperature "NS heating temp  [%.0f %unit%]" <local_temperature> (g_all_local_temperature) {channel="mqtt:topic:openhab:ns_heating:local_temperature"}
Number:ElectricPotential ns_heating_battery_voltage "NS heating [%.0f mV]" <energy> (g_all_battery_voltage) {channel="mqtt:topic:openhab:ns_heating:battery_voltage"}
// KU heating (0x0c4314fffe73bf1f)
// Silvercrest radiator valve with thermostat / https://www.zigbee2mqtt.io/devices/368308_2010.html
Number:Temperature ku_heating_thermostat "KU heating SET [%.0f %unit%]" <heatingt> (g_all_thermostat,g_hz_all,g_hz_auto,g_hz_ku) {channel="mqtt:topic:openhab:ku_heating:thermostat"}
String ku_heating_thermostat_mode "KU heating MODE [%s]" <heatingt> (g_all_thermostat_mode) {channel="mqtt:topic:openhab:ku_heating:thermostat_mode"}
String ku_heating_thermostat_preset "KU heating PRESET [%s]" <heatingt> (g_all_thermostat_preset) {channel="mqtt:topic:openhab:ku_heating:thermostat_preset"}
Switch ku_heating_thermostat_enable "KU heating ENABLE [%s]" <heatingt> (g_all_thermostat_enable,g_hz_enable,g_hz_ku_enable) {channel="mqtt:topic:openhab:ku_heating:thermostat_enable"}
Switch ku_heating_lowbatt "KU heating BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:ku_heating:battery_low"}
Switch ku_heating_ota "KU heating OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:ku_heating:ota"}
Number:Dimensionless ku_heating_link "KU heating LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:ku_heating:link"}
DateTime ku_heating_activity "KU heating activity [JS(codegen-display-activity.js):%s]" <time> (g_all_activity) {channel="mqtt:topic:openhab:ku_heating:activity"}
Number:Temperature ku_heating_local_temperature "KU heating temp  [%.0f %unit%]" <local_temperature> (g_all_local_temperature) {channel="mqtt:topic:openhab:ku_heating:local_temperature"}
Number:ElectricPotential ku_heating_battery_voltage "KU heating [%.0f mV]" <energy> (g_all_battery_voltage) {channel="mqtt:topic:openhab:ku_heating:battery_voltage"}
// SZ heating (0x0c4314fffe73c43f)
// Silvercrest radiator valve with thermostat / https://www.zigbee2mqtt.io/devices/368308_2010.html
Number:Temperature sz_heating_thermostat "SZ heating SET [%.0f %unit%]" <heatingt> (g_all_thermostat,g_hz_all,g_hz_auto,g_hz_sz) {channel="mqtt:topic:openhab:sz_heating:thermostat"}
String sz_heating_thermostat_mode "SZ heating MODE [%s]" <heatingt> (g_all_thermostat_mode) {channel="mqtt:topic:openhab:sz_heating:thermostat_mode"}
String sz_heating_thermostat_preset "SZ heating PRESET [%s]" <heatingt> (g_all_thermostat_preset) {channel="mqtt:topic:openhab:sz_heating:thermostat_preset"}
Switch sz_heating_thermostat_enable "SZ heating ENABLE [%s]" <heatingt> (g_all_thermostat_enable,g_hz_enable,g_hz_sz_enable) {channel="mqtt:topic:openhab:sz_heating:thermostat_enable"}
Switch sz_heating_lowbatt "SZ heating BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:sz_heating:battery_low"}
Switch sz_heating_ota "SZ heating OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:sz_heating:ota"}
Number:Dimensionless sz_heating_link "SZ heating LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:sz_heating:link"}
DateTime sz_heating_activity "SZ heating activity [JS(codegen-display-activity.js):%s]" <time> (g_all_activity) {channel="mqtt:topic:openhab:sz_heating:activity"}
Number:Temperature sz_heating_local_temperature "SZ heating temp  [%.0f %unit%]" <local_temperature> (g_all_local_temperature) {channel="mqtt:topic:openhab:sz_heating:local_temperature"}
Number:ElectricPotential sz_heating_battery_voltage "SZ heating [%.0f mV]" <energy> (g_all_battery_voltage) {channel="mqtt:topic:openhab:sz_heating:battery_voltage"}
// KG heating (0x0c4314fffe5c6913)
// Silvercrest radiator valve with thermostat / https://www.zigbee2mqtt.io/devices/368308_2010.html
Number:Temperature kg_heating_thermostat "KG heating SET [%.0f %unit%]" <heatingt> (g_all_thermostat,g_hz_all,g_hz_auto,g_hz_kg) {channel="mqtt:topic:openhab:kg_heating:thermostat"}
String kg_heating_thermostat_mode "KG heating MODE [%s]" <heatingt> (g_all_thermostat_mode) {channel="mqtt:topic:openhab:kg_heating:thermostat_mode"}
String kg_heating_thermostat_preset "KG heating PRESET [%s]" <heatingt> (g_all_thermostat_preset) {channel="mqtt:topic:openhab:kg_heating:thermostat_preset"}
Switch kg_heating_thermostat_enable "KG heating ENABLE [%s]" <heatingt> (g_all_thermostat_enable,g_hz_enable,g_hz_kg_enable) {channel="mqtt:topic:openhab:kg_heating:thermostat_enable"}
Switch kg_heating_lowbatt "KG heating BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:kg_heating:battery_low"}
Switch kg_heating_ota "KG heating OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:kg_heating:ota"}
Number:Dimensionless kg_heating_link "KG heating LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:kg_heating:link"}
DateTime kg_heating_activity "KG heating activity [JS(codegen-display-activity.js):%s]" <time> (g_all_activity) {channel="mqtt:topic:openhab:kg_heating:activity"}
Number:Temperature kg_heating_local_temperature "KG heating temp  [%.0f %unit%]" <local_temperature> (g_all_local_temperature) {channel="mqtt:topic:openhab:kg_heating:local_temperature"}
Number:ElectricPotential kg_heating_battery_voltage "KG heating [%.0f mV]" <energy> (g_all_battery_voltage) {channel="mqtt:topic:openhab:kg_heating:battery_voltage"}
// FS Christmas light (0x7cb03eaa0a093a8b)
// OSRAM Smart+ plug / https://www.zigbee2mqtt.io/devices/AB3257001NJ.html
Switch fs_christmas_light_ota "FS Christmas light OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:fs_christmas_light:ota"}
Number:Dimensionless fs_christmas_light_link "FS Christmas light LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:fs_christmas_light:link"}
Switch fs_christmas_light_sw "FS Christmas light" <light> (g_all_sw,g_light_christmas) {channel="mqtt:topic:openhab:fs_christmas_light:state"}
// NS Christmas light (0x7cb03eaa0a094303)
// OSRAM Smart+ plug / https://www.zigbee2mqtt.io/devices/AB3257001NJ.html
Switch ns_christmas_light_ota "NS Christmas light OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:ns_christmas_light:ota"}
Number:Dimensionless ns_christmas_light_link "NS Christmas light LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:ns_christmas_light:link"}
Switch ns_christmas_light_sw "NS Christmas light" <light> (g_all_sw,g_light_christmas) {channel="mqtt:topic:openhab:ns_christmas_light:state"}
// Balkon Christmas light (0x7cb03eaa0a094bf2)
// OSRAM Smart+ plug / https://www.zigbee2mqtt.io/devices/AB3257001NJ.html
Switch bk_christmas_light_ota "Balkon Christmas light OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:bk_christmas_light:ota"}
Number:Dimensionless bk_christmas_light_link "Balkon Christmas light LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:bk_christmas_light:link"}
Switch bk_christmas_light_sw "Balkon Christmas light" <light> (g_all_sw,g_light_christmas) {channel="mqtt:topic:openhab:bk_christmas_light:state"}
// FS Blinds (0xa4c138fd0fd1c168)
// Curtains module (1 gang) / https://www.zigbee2mqtt.io/devices/TS130F.html
Switch fs_blinds_ota "FS Blinds OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:fs_blinds:ota"}
Number:Dimensionless fs_blinds_link "FS Blinds LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:fs_blinds:link"}
String fs_blinds_cmd "FS Blinds [%s]" <blinds> (g_all_cmd,g_blinds_cmd,g_blinds_fs_cmd) {channel="mqtt:topic:openhab:fs_blinds:state"}
String fs_blinds_mov "FS Blinds movement" <blinds> {channel="mqtt:topic:openhab:fs_blinds:moving"}
Dimmer fs_blinds_pos "FS Blinds [%d %%]" <blinds> (g_all_pos,g_blinds_pos,g_blinds_fs_pos) {channel="mqtt:topic:openhab:fs_blinds:position"}
Switch fs_blinds_cal "FS Blinds cal [%s]" <light> (g_all_cal) {channel="mqtt:topic:openhab:fs_blinds:calibration"}
// NS Blinds (0xa4c13878cea182ad)
// Curtains module (2 gang) / https://www.zigbee2mqtt.io/devices/TS130F_dual.html
Switch ns_blinds_ota "NS Blinds OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:ns_blinds:ota"}
Number:Dimensionless ns_blinds_link "NS Blinds LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:ns_blinds:link"}
String ns_blinds_1_cmd "NS Blinds (Main) [%s]" <blinds> (g_all_cmd,g_blinds_cmd,g_blinds_ns_cmd) {channel="mqtt:topic:openhab:ns_blinds:state_left"}
String ns_blinds_1_mov "NS Blinds (Main) movement" <blinds> {channel="mqtt:topic:openhab:ns_blinds:moving_left"}
Dimmer ns_blinds_1_pos "NS Blinds (Main) [%d %%]" <blinds> (g_all_pos,g_blinds_pos,g_blinds_ns_pos) {channel="mqtt:topic:openhab:ns_blinds:position_left"}
Switch ns_blinds_1_cal "NS Blinds (Main) cal [%s]" <light> (g_all_cal) {channel="mqtt:topic:openhab:ns_blinds:calibration_left"}
String ns_blinds_2_cmd "NS Blinds (Side) [%s]" <blinds> (g_all_cmd,g_blinds_cmd,g_blinds_ns_cmd) {channel="mqtt:topic:openhab:ns_blinds:state_right"}
String ns_blinds_2_mov "NS Blinds (Side) movement" <blinds> {channel="mqtt:topic:openhab:ns_blinds:moving_right"}
Dimmer ns_blinds_2_pos "NS Blinds (Side) [%d %%]" <blinds> (g_all_pos,g_blinds_pos,g_blinds_ns_pos) {channel="mqtt:topic:openhab:ns_blinds:position_right"}
Switch ns_blinds_2_cal "NS Blinds (Side) cal [%s]" <light> (g_all_cal) {channel="mqtt:topic:openhab:ns_blinds:calibration_right"}
// KU Blinds (0xa4c138018d7a55bf)
// Curtains module (1 gang) / https://www.zigbee2mqtt.io/devices/TS130F.html
Switch ku_blinds_ota "KU Blinds OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:ku_blinds:ota"}
Number:Dimensionless ku_blinds_link "KU Blinds LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:ku_blinds:link"}
String ku_blinds_cmd "KU Blinds [%s]" <blinds> (g_all_cmd,g_blinds_cmd,g_blinds_ku_cmd) {channel="mqtt:topic:openhab:ku_blinds:state"}
String ku_blinds_mov "KU Blinds movement" <blinds> {channel="mqtt:topic:openhab:ku_blinds:moving"}
Dimmer ku_blinds_pos "KU Blinds [%d %%]" <blinds> (g_all_pos,g_blinds_pos,g_blinds_ku_pos) {channel="mqtt:topic:openhab:ku_blinds:position"}
Switch ku_blinds_cal "KU Blinds cal [%s]" <light> (g_all_cal) {channel="mqtt:topic:openhab:ku_blinds:calibration"}
// Ext backup power supply (0x7cb03eaa0a09e7bc)
// OSRAM Smart+ plug / https://www.zigbee2mqtt.io/devices/AB3257001NJ.html
Switch backup_ext_power_ota "Ext backup power supply OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:backup_ext_power:ota"}
Number:Dimensionless backup_ext_power_link "Ext backup power supply LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:backup_ext_power:link"}
Switch backup_ext_power_sw "Ext backup power supply" <light> (g_all_sw) {channel="mqtt:topic:openhab:backup_ext_power:state"}
