
// ==========================================
// THIS FILE IS AUTO GENERATED
// Do not edit by hands
// Use this command to regenerate:
// python3 ./bin/codegen.py
// ==========================================


// Outside Climate (0x00158d0001c2cc22)
// Xiaomi MiJia temperature & humidity sensor (WSDCGQ01LM) / https://www.zigbee2mqtt.io/devices/WSDCGQ01LM.html
Number:Temperature ext_climate_temperature "Outside Climate [%.0f %unit%]" <temperature> {channel="mqtt:topic:openhab:ext_climate:temperature"}
Number:Dimensionless ext_climate_humidity "Outside Climate [%.0f %%]" <humidity> {channel="mqtt:topic:openhab:ext_climate:humidity"}
DateTime ext_climate_activity "Outside Climate [JS(display-activity.js):%s]" <time> (g_device_activity) {channel="mqtt:topic:openhab:ext_climate:activity"}
Number:Dimensionless ext_climate_link "Outside Climate LINK [%d]" <linkz> (g_zigbee_link) {channel="mqtt:topic:openhab:ext_climate:link"}
Switch ext_climate_ota "Outside Climate OTA [%s]" <fire> (g_zigbee_ota) {channel="mqtt:topic:openhab:ext_climate:ota"}
Number:Dimensionless ext_climate_battery "Outside Climate [%.0f %%]" <battery> (g_battery_level) {channel="mqtt:topic:openhab:ext_climate:battery"}
Switch ext_climate_battery_low "Outside Climate [MAP(lowbat.map):%s]" <lowbattery> (g_battery_low) {channel="mqtt:topic:openhab:ext_climate:battery_low"}
Number:ElectricPotential ext_climate_voltage "Outside Climate [%.0f mV]" <energy> {channel="mqtt:topic:openhab:ext_climate:voltage"}

// Balkon light 1 (0x14b457fffe399241)
// IKEA TRADFRI LED bulb E27 1000 lumen, dimmable, white spectrum, opal white (LED1732G11) / https://www.zigbee2mqtt.io/devices/LED1732G11.html
Switch balkon_light_1_sw "Balkon light 1" <light> (g_light_all,balkon_light) {channel="mqtt:topic:openhab:balkon_light_1:state"}
Dimmer balkon_light_1_dim "Balkon light 1 DIM [%d %%]" <light> (balkon_light_dim) {channel="mqtt:topic:openhab:balkon_light_1:dim"}
Dimmer balkon_light_1_ct "Balkon light 1 CT [JS(display-mired.js):%s]" <colorwheel> (balkon_light_ct) {channel="mqtt:topic:openhab:balkon_light_1:ct"}
Number:Dimensionless balkon_light_1_link "Balkon light 1 LINK [%d]" <linkz> (g_zigbee_link) {channel="mqtt:topic:openhab:balkon_light_1:link"}
Switch balkon_light_1_ota "Balkon light 1 OTA [%s]" <fire> (g_zigbee_ota) {channel="mqtt:topic:openhab:balkon_light_1:ota"}

// Garten wasser remote (0xccccccfffe58f1c3)
// IKEA TRADFRI ON/OFF switch (E1743) / https://www.zigbee2mqtt.io/devices/E1743.html
Number:Dimensionless garten_wasser_remote_link "Garten wasser remote LINK [%d]" <linkz> (g_zigbee_link) {channel="mqtt:topic:openhab:garten_wasser_remote:link"}
Switch garten_wasser_remote_ota "Garten wasser remote OTA [%s]" <fire> (g_zigbee_ota) {channel="mqtt:topic:openhab:garten_wasser_remote:ota"}
Number:Dimensionless garten_wasser_remote_battery "Garten wasser remote [%.0f %%]" <battery> (g_battery_level) {channel="mqtt:topic:openhab:garten_wasser_remote:battery"}
Switch garten_wasser_remote_battery_low "Garten wasser remote [MAP(lowbat.map):%s]" <lowbattery> (g_battery_low) {channel="mqtt:topic:openhab:garten_wasser_remote:battery_low"}

// Mirror remote (0x680ae2fffeab6b80)
// IKEA TRADFRI remote control (E1524/E1810) / https://www.zigbee2mqtt.io/devices/E1524_E1810.html
Number:Dimensionless mirror_remote_link "Mirror remote LINK [%d]" <linkz> (g_zigbee_link) {channel="mqtt:topic:openhab:mirror_remote:link"}
Switch mirror_remote_ota "Mirror remote OTA [%s]" <fire> (g_zigbee_ota) {channel="mqtt:topic:openhab:mirror_remote:ota"}
Number:Dimensionless mirror_remote_battery "Mirror remote [%.0f %%]" <battery> (g_battery_level) {channel="mqtt:topic:openhab:mirror_remote:battery"}
Switch mirror_remote_battery_low "Mirror remote [MAP(lowbat.map):%s]" <lowbattery> (g_battery_low) {channel="mqtt:topic:openhab:mirror_remote:battery_low"}

// Leave switch (0x680ae2fffe16e111)
// IKEA TRADFRI ON/OFF switch (E1743) / https://www.zigbee2mqtt.io/devices/E1743.html
Number:Dimensionless eg_leave_switch_link "Leave switch LINK [%d]" <linkz> (g_zigbee_link) {channel="mqtt:topic:openhab:eg_leave_switch:link"}
Switch eg_leave_switch_ota "Leave switch OTA [%s]" <fire> (g_zigbee_ota) {channel="mqtt:topic:openhab:eg_leave_switch:ota"}
Number:Dimensionless eg_leave_switch_battery "Leave switch [%.0f %%]" <battery> (g_battery_level) {channel="mqtt:topic:openhab:eg_leave_switch:battery"}
Switch eg_leave_switch_battery_low "Leave switch [MAP(lowbat.map):%s]" <lowbattery> (g_battery_low) {channel="mqtt:topic:openhab:eg_leave_switch:battery_low"}

// EG Router (0x00124b000b4ed5cc)
// CC2530.ROUTER - Custom devices (DiY) / https://www.zigbee2mqtt.io/devices/CC2530.ROUTER.html
Number:Dimensionless eg_router_link "EG Router LINK [%d]" <linkz> (g_zigbee_link) {channel="mqtt:topic:openhab:eg_router:link"}
Switch eg_router_ota "EG Router OTA [%s]" <fire> (g_zigbee_ota) {channel="mqtt:topic:openhab:eg_router:ota"}

// BZ Light (0x086bd7fffefb619a)
// HEIMAN Smart switch - 1 gang with neutral wire (HS2SW1A/HS2SW1A-N) / https://zigbee.blakadder.com/Heiman_HS2SW1A.html
Switch bz_light_sw "BZ Light" <switch> (g_light_all,g_light_eg,g_light_eg_bz) {channel="mqtt:topic:openhab:bz_light:state"}
Number:Dimensionless bz_light_link "BZ Light LINK [%d]" <linkz> (g_zigbee_link) {channel="mqtt:topic:openhab:bz_light:link"}
Switch bz_light_ota "BZ Light OTA [%s]" <fire> (g_zigbee_ota) {channel="mqtt:topic:openhab:bz_light:ota"}

// NS Climate (0x00158d0001b95e08)
// Xiaomi Aqara temperature, humidity and pressure sensor (WSDCGQ11LM) / https://www.zigbee2mqtt.io/devices/WSDCGQ11LM.html
Number:Temperature ns_climate_temperature "NS Climate [%.0f %unit%]" <temperature> {channel="mqtt:topic:openhab:ns_climate:temperature"}
Number:Dimensionless ns_climate_humidity "NS Climate [%.0f %%]" <humidity> {channel="mqtt:topic:openhab:ns_climate:humidity"}
Number:Pressure ns_climate_pressure "NS Climate [%.0f %unit%]" <pressure> {channel="mqtt:topic:openhab:ns_climate:pressure"}
DateTime ns_climate_activity "NS Climate [JS(display-activity.js):%s]" <time> (g_device_activity) {channel="mqtt:topic:openhab:ns_climate:activity"}
Number:Dimensionless ns_climate_link "NS Climate LINK [%d]" <linkz> (g_zigbee_link) {channel="mqtt:topic:openhab:ns_climate:link"}
Switch ns_climate_ota "NS Climate OTA [%s]" <fire> (g_zigbee_ota) {channel="mqtt:topic:openhab:ns_climate:ota"}
Number:Dimensionless ns_climate_battery "NS Climate [%.0f %%]" <battery> (g_battery_level) {channel="mqtt:topic:openhab:ns_climate:battery"}
Switch ns_climate_battery_low "NS Climate [MAP(lowbat.map):%s]" <lowbattery> (g_battery_low) {channel="mqtt:topic:openhab:ns_climate:battery_low"}
Number:ElectricPotential ns_climate_voltage "NS Climate [%.0f mV]" <energy> {channel="mqtt:topic:openhab:ns_climate:voltage"}

// NS Power 2 (0x7cb03eaa0a093a8b)
// OSRAM Smart+ plug / https://www.zigbee2mqtt.io/devices/AB3257001NJ.html
Switch ns_power_2_sw "NS Power 2" <switch> (g_light_christmas) {channel="mqtt:topic:openhab:ns_power_2:state"}
Number:Dimensionless ns_power_2_link "NS Power 2 LINK [%d]" <linkz> (g_zigbee_link) {channel="mqtt:topic:openhab:ns_power_2:link"}
Switch ns_power_2_ota "NS Power 2 OTA [%s]" <fire> (g_zigbee_ota) {channel="mqtt:topic:openhab:ns_power_2:ota"}

// NS Boost power (0x7cb03eaa0a0a1103)
// OSRAM Smart+ plug / https://www.zigbee2mqtt.io/devices/AB3257001NJ.html
Switch ns_heating_boost_power_sw "NS Boost power" <switch> {channel="mqtt:topic:openhab:ns_heating_boost_power:state", expire="1h,command=OFF"}
Number:Dimensionless ns_heating_boost_power_link "NS Boost power LINK [%d]" <linkz> (g_zigbee_link) {channel="mqtt:topic:openhab:ns_heating_boost_power:link"}
Switch ns_heating_boost_power_ota "NS Boost power OTA [%s]" <fire> (g_zigbee_ota) {channel="mqtt:topic:openhab:ns_heating_boost_power:ota"}

// NS Projector (0x7cb03eaa0a094d1d)
// OSRAM Smart+ plug / https://www.zigbee2mqtt.io/devices/AB3257001NJ.html
Switch ns_projector_power_sw "NS Projector" <switch> {channel="mqtt:topic:openhab:ns_projector_power:state"}
Number:Dimensionless ns_projector_power_link "NS Projector LINK [%d]" <linkz> (g_zigbee_link) {channel="mqtt:topic:openhab:ns_projector_power:link"}
Switch ns_projector_power_ota "NS Projector OTA [%s]" <fire> (g_zigbee_ota) {channel="mqtt:topic:openhab:ns_projector_power:ota"}

// NS Christmas light (0x7cb03eaa0a09e7bc)
// OSRAM Smart+ plug / https://www.zigbee2mqtt.io/devices/AB3257001NJ.html
Switch ns_christmas_light_sw "NS Christmas light" <switch> (g_light_christmas) {channel="mqtt:topic:openhab:ns_christmas_light:state"}
Number:Dimensionless ns_christmas_light_link "NS Christmas light LINK [%d]" <linkz> (g_zigbee_link) {channel="mqtt:topic:openhab:ns_christmas_light:link"}
Switch ns_christmas_light_ota "NS Christmas light OTA [%s]" <fire> (g_zigbee_ota) {channel="mqtt:topic:openhab:ns_christmas_light:ota"}

// FS Climate (0x00158d0001c15121)
// Xiaomi MiJia temperature & humidity sensor (WSDCGQ01LM) / https://www.zigbee2mqtt.io/devices/WSDCGQ01LM.html
Number:Temperature fs_climate_temperature "FS Climate [%.0f %unit%]" <temperature> {channel="mqtt:topic:openhab:fs_climate:temperature"}
Number:Dimensionless fs_climate_humidity "FS Climate [%.0f %%]" <humidity> {channel="mqtt:topic:openhab:fs_climate:humidity"}
DateTime fs_climate_activity "FS Climate [JS(display-activity.js):%s]" <time> (g_device_activity) {channel="mqtt:topic:openhab:fs_climate:activity"}
Number:Dimensionless fs_climate_link "FS Climate LINK [%d]" <linkz> (g_zigbee_link) {channel="mqtt:topic:openhab:fs_climate:link"}
Switch fs_climate_ota "FS Climate OTA [%s]" <fire> (g_zigbee_ota) {channel="mqtt:topic:openhab:fs_climate:ota"}
Number:Dimensionless fs_climate_battery "FS Climate [%.0f %%]" <battery> (g_battery_level) {channel="mqtt:topic:openhab:fs_climate:battery"}
Switch fs_climate_battery_low "FS Climate [MAP(lowbat.map):%s]" <lowbattery> (g_battery_low) {channel="mqtt:topic:openhab:fs_climate:battery_low"}
Number:ElectricPotential fs_climate_voltage "FS Climate [%.0f mV]" <energy> {channel="mqtt:topic:openhab:fs_climate:voltage"}

// Marina Desktop light (0xec1bbdfffe1b89d1)
// IKEA TRADFRI LED bulb E27 1000 lumen, dimmable, white spectrum, opal white (LED1732G11) / https://www.zigbee2mqtt.io/devices/LED1732G11.html
Switch desktop_marina_light_sw "Marina Desktop light" <light> (g_light_all,g_light_eg,g_light_eg_fs) {channel="mqtt:topic:openhab:desktop_marina_light:state"}
Dimmer desktop_marina_light_dim "Marina Desktop light DIM [%d %%]" <light> {channel="mqtt:topic:openhab:desktop_marina_light:dim"}
Dimmer desktop_marina_light_ct "Marina Desktop light CT [JS(display-mired.js):%s]" <colorwheel> (g_light_astro_color) {channel="mqtt:topic:openhab:desktop_marina_light:ct"}
Number:Dimensionless desktop_marina_light_link "Marina Desktop light LINK [%d]" <linkz> (g_zigbee_link) {channel="mqtt:topic:openhab:desktop_marina_light:link"}
Switch desktop_marina_light_ota "Marina Desktop light OTA [%s]" <fire> (g_zigbee_ota) {channel="mqtt:topic:openhab:desktop_marina_light:ota"}

// Marina Desktop remote (0xccccccfffeea9703)
// IKEA TRADFRI remote control (E1524/E1810) / https://www.zigbee2mqtt.io/devices/E1524_E1810.html
Number:Dimensionless desktop_marina_remote_link "Marina Desktop remote LINK [%d]" <linkz> (g_zigbee_link) {channel="mqtt:topic:openhab:desktop_marina_remote:link"}
Switch desktop_marina_remote_ota "Marina Desktop remote OTA [%s]" <fire> (g_zigbee_ota) {channel="mqtt:topic:openhab:desktop_marina_remote:ota"}
Number:Dimensionless desktop_marina_remote_battery "Marina Desktop remote [%.0f %%]" <battery> (g_battery_level) {channel="mqtt:topic:openhab:desktop_marina_remote:battery"}
Switch desktop_marina_remote_battery_low "Marina Desktop remote [MAP(lowbat.map):%s]" <lowbattery> (g_battery_low) {channel="mqtt:topic:openhab:desktop_marina_remote:battery_low"}

// SZ Climate (0x00158d0001c19a6b)
// Xiaomi MiJia temperature & humidity sensor (WSDCGQ01LM) / https://www.zigbee2mqtt.io/devices/WSDCGQ01LM.html
Number:Temperature sz_climate_temperature "SZ Climate [%.0f %unit%]" <temperature> {channel="mqtt:topic:openhab:sz_climate:temperature"}
Number:Dimensionless sz_climate_humidity "SZ Climate [%.0f %%]" <humidity> {channel="mqtt:topic:openhab:sz_climate:humidity"}
DateTime sz_climate_activity "SZ Climate [JS(display-activity.js):%s]" <time> (g_device_activity) {channel="mqtt:topic:openhab:sz_climate:activity"}
Number:Dimensionless sz_climate_link "SZ Climate LINK [%d]" <linkz> (g_zigbee_link) {channel="mqtt:topic:openhab:sz_climate:link"}
Switch sz_climate_ota "SZ Climate OTA [%s]" <fire> (g_zigbee_ota) {channel="mqtt:topic:openhab:sz_climate:ota"}
Number:Dimensionless sz_climate_battery "SZ Climate [%.0f %%]" <battery> (g_battery_level) {channel="mqtt:topic:openhab:sz_climate:battery"}
Switch sz_climate_battery_low "SZ Climate [MAP(lowbat.map):%s]" <lowbattery> (g_battery_low) {channel="mqtt:topic:openhab:sz_climate:battery_low"}
Number:ElectricPotential sz_climate_voltage "SZ Climate [%.0f mV]" <energy> {channel="mqtt:topic:openhab:sz_climate:voltage"}

// Bedroom remote (0x14b457fffe7e2305)
// IKEA TRADFRI remote control (E1524/E1810) / https://www.zigbee2mqtt.io/devices/E1524_E1810.html
Number:Dimensionless sz_remote_link "Bedroom remote LINK [%d]" <linkz> (g_zigbee_link) {channel="mqtt:topic:openhab:sz_remote:link"}
Switch sz_remote_ota "Bedroom remote OTA [%s]" <fire> (g_zigbee_ota) {channel="mqtt:topic:openhab:sz_remote:ota"}
Number:Dimensionless sz_remote_battery "Bedroom remote [%.0f %%]" <battery> (g_battery_level) {channel="mqtt:topic:openhab:sz_remote:battery"}
Switch sz_remote_battery_low "Bedroom remote [MAP(lowbat.map):%s]" <lowbattery> (g_battery_low) {channel="mqtt:topic:openhab:sz_remote:battery_low"}

// SZ Night lamp (0xec1bbdfffe9abfde)
// IKEA TRADFRI LED bulb E26/E27 806 lumen, dimmable, warm white (LED1836G9) / https://www.zigbee2mqtt.io/devices/LED1836G9.html
Switch sz_night_lamp_sw "SZ Night lamp" <light> (g_light_all,g_light_eg,g_light_eg_sz,g_light_eg_sz_night) {channel="mqtt:topic:openhab:sz_night_lamp:state"}
Dimmer sz_night_lamp_dim "SZ Night lamp DIM [%d %%]" <light> (g_light_eg_sz_night_brightness) {channel="mqtt:topic:openhab:sz_night_lamp:dim"}
Number:Dimensionless sz_night_lamp_link "SZ Night lamp LINK [%d]" <linkz> (g_zigbee_link) {channel="mqtt:topic:openhab:sz_night_lamp:link"}
Switch sz_night_lamp_ota "SZ Night lamp OTA [%s]" <fire> (g_zigbee_ota) {channel="mqtt:topic:openhab:sz_night_lamp:ota"}

// SZ Decor lamp 1 (0xec1bbdfffe972819)
// IKEA TRADFRI LED bulb E27 WW clear 250 lumen, dimmable (LED1842G3) / https://www.zigbee2mqtt.io/devices/LED1842G3.html
Switch sz_declamp_1_sw "SZ Decor lamp 1" <light> (g_light_all,g_light_eg,g_light_eg_sz,g_light_eg_sz_night,g_light_eg_sz_decor) {channel="mqtt:topic:openhab:sz_declamp_1:state"}
Dimmer sz_declamp_1_dim "SZ Decor lamp 1 DIM [%d %%]" <light> (g_light_eg_sz_night_brightness,g_light_eg_sz_decor_brightness) {channel="mqtt:topic:openhab:sz_declamp_1:dim"}
Number:Dimensionless sz_declamp_1_link "SZ Decor lamp 1 LINK [%d]" <linkz> (g_zigbee_link) {channel="mqtt:topic:openhab:sz_declamp_1:link"}
Switch sz_declamp_1_ota "SZ Decor lamp 1 OTA [%s]" <fire> (g_zigbee_ota) {channel="mqtt:topic:openhab:sz_declamp_1:ota"}

// SZ Decor lamp 2 (0xec1bbdfffe972203)
// IKEA TRADFRI LED bulb E27 WW clear 250 lumen, dimmable (LED1842G3) / https://www.zigbee2mqtt.io/devices/LED1842G3.html
Switch sz_declamp_2_sw "SZ Decor lamp 2" <light> (g_light_all,g_light_eg,g_light_eg_sz,g_light_eg_sz_night,g_light_eg_sz_decor) {channel="mqtt:topic:openhab:sz_declamp_2:state"}
Dimmer sz_declamp_2_dim "SZ Decor lamp 2 DIM [%d %%]" <light> (g_light_eg_sz_night_brightness,g_light_eg_sz_decor_brightness) {channel="mqtt:topic:openhab:sz_declamp_2:dim"}
Number:Dimensionless sz_declamp_2_link "SZ Decor lamp 2 LINK [%d]" <linkz> (g_zigbee_link) {channel="mqtt:topic:openhab:sz_declamp_2:link"}
Switch sz_declamp_2_ota "SZ Decor lamp 2 OTA [%s]" <fire> (g_zigbee_ota) {channel="mqtt:topic:openhab:sz_declamp_2:ota"}

// SZ Decor lamp 3 (0xec1bbdfffe91007b)
// IKEA TRADFRI LED bulb E27 WW clear 250 lumen, dimmable (LED1842G3) / https://www.zigbee2mqtt.io/devices/LED1842G3.html
Switch sz_declamp_3_sw "SZ Decor lamp 3" <light> (g_light_all,g_light_eg,g_light_eg_sz,g_light_eg_sz_night,g_light_eg_sz_decor) {channel="mqtt:topic:openhab:sz_declamp_3:state"}
Dimmer sz_declamp_3_dim "SZ Decor lamp 3 DIM [%d %%]" <light> (g_light_eg_sz_night_brightness,g_light_eg_sz_decor_brightness) {channel="mqtt:topic:openhab:sz_declamp_3:dim"}
Number:Dimensionless sz_declamp_3_link "SZ Decor lamp 3 LINK [%d]" <linkz> (g_zigbee_link) {channel="mqtt:topic:openhab:sz_declamp_3:link"}
Switch sz_declamp_3_ota "SZ Decor lamp 3 OTA [%s]" <fire> (g_zigbee_ota) {channel="mqtt:topic:openhab:sz_declamp_3:ota"}

// KU Climate (0x00158d0001b95fc4)
// Xiaomi Aqara temperature, humidity and pressure sensor (WSDCGQ11LM) / https://www.zigbee2mqtt.io/devices/WSDCGQ11LM.html
Number:Temperature ku_climate_temperature "KU Climate [%.0f %unit%]" <temperature> {channel="mqtt:topic:openhab:ku_climate:temperature"}
Number:Dimensionless ku_climate_humidity "KU Climate [%.0f %%]" <humidity> {channel="mqtt:topic:openhab:ku_climate:humidity"}
Number:Pressure ku_climate_pressure "KU Climate [%.0f %unit%]" <pressure> {channel="mqtt:topic:openhab:ku_climate:pressure"}
DateTime ku_climate_activity "KU Climate [JS(display-activity.js):%s]" <time> (g_device_activity) {channel="mqtt:topic:openhab:ku_climate:activity"}
Number:Dimensionless ku_climate_link "KU Climate LINK [%d]" <linkz> (g_zigbee_link) {channel="mqtt:topic:openhab:ku_climate:link"}
Switch ku_climate_ota "KU Climate OTA [%s]" <fire> (g_zigbee_ota) {channel="mqtt:topic:openhab:ku_climate:ota"}
Number:Dimensionless ku_climate_battery "KU Climate [%.0f %%]" <battery> (g_battery_level) {channel="mqtt:topic:openhab:ku_climate:battery"}
Switch ku_climate_battery_low "KU Climate [MAP(lowbat.map):%s]" <lowbattery> (g_battery_low) {channel="mqtt:topic:openhab:ku_climate:battery_low"}
Number:ElectricPotential ku_climate_voltage "KU Climate [%.0f mV]" <energy> {channel="mqtt:topic:openhab:ku_climate:voltage"}

// KU Light Button (Spüle) (0x00158d0001be5b2d)
// Xiaomi MiJia wireless switch (WXKG01LM) / https://www.zigbee2mqtt.io/devices/WXKG01LM.html
Number:Dimensionless ku_light_switch_spule_link "KU Light Button (Spüle) LINK [%d]" <linkz> (g_zigbee_link) {channel="mqtt:topic:openhab:ku_light_switch_spule:link"}
Switch ku_light_switch_spule_ota "KU Light Button (Spüle) OTA [%s]" <fire> (g_zigbee_ota) {channel="mqtt:topic:openhab:ku_light_switch_spule:ota"}
Number:Dimensionless ku_light_switch_spule_battery "KU Light Button (Spüle) [%.0f %%]" <battery> (g_battery_level) {channel="mqtt:topic:openhab:ku_light_switch_spule:battery"}
Switch ku_light_switch_spule_battery_low "KU Light Button (Spüle) [MAP(lowbat.map):%s]" <lowbattery> (g_battery_low) {channel="mqtt:topic:openhab:ku_light_switch_spule:battery_low"}
Number:ElectricPotential ku_light_switch_spule_voltage "KU Light Button (Spüle) [%.0f mV]" <energy> {channel="mqtt:topic:openhab:ku_light_switch_spule:voltage"}

// KU Light Button (Kochfield) (0x680ae2fffeaf18d4)
// IKEA TRADFRI remote control (E1524/E1810) / https://www.zigbee2mqtt.io/devices/E1524_E1810.html
Number:Dimensionless ku_light_switch_kochfeld_link "KU Light Button (Kochfield) LINK [%d]" <linkz> (g_zigbee_link) {channel="mqtt:topic:openhab:ku_light_switch_kochfeld:link"}
Switch ku_light_switch_kochfeld_ota "KU Light Button (Kochfield) OTA [%s]" <fire> (g_zigbee_ota) {channel="mqtt:topic:openhab:ku_light_switch_kochfeld:ota"}
Number:Dimensionless ku_light_switch_kochfeld_battery "KU Light Button (Kochfield) [%.0f %%]" <battery> (g_battery_level) {channel="mqtt:topic:openhab:ku_light_switch_kochfeld:battery"}
Switch ku_light_switch_kochfeld_battery_low "KU Light Button (Kochfield) [MAP(lowbat.map):%s]" <lowbattery> (g_battery_low) {channel="mqtt:topic:openhab:ku_light_switch_kochfeld:battery_low"}

// KU Light Arbeit (0xec1bbdfffea37757)
// Lidl Silvercrest smart plug (EU, CH, FR, BS, DK) (HG06337) / https://www.zigbee2mqtt.io/devices/HG06337.html
Switch ku_light_arbeitplatte_sw "KU Light Arbeit" <switch> (g_light_all,g_light_eg,g_light_eg_ku) {channel="mqtt:topic:openhab:ku_light_arbeitplatte:state", expire="3h,command=OFF"}
Number:Dimensionless ku_light_arbeitplatte_link "KU Light Arbeit LINK [%d]" <linkz> (g_zigbee_link) {channel="mqtt:topic:openhab:ku_light_arbeitplatte:link"}
Switch ku_light_arbeitplatte_ota "KU Light Arbeit OTA [%s]" <fire> (g_zigbee_ota) {channel="mqtt:topic:openhab:ku_light_arbeitplatte:ota"}

// KU Light SW (0x842e14fffe1267fb)
// TS0601_switch - TuYa 1, 2, 3 or 4 gang switch (Router) / https://www.zigbee2mqtt.io/devices/TS0601_switch.html
Switch ku_light_switch_haupt_sw "KU Light Haupt (Wall SW)" <light> (g_light_all,g_light_eg,g_light_eg_ku) {channel="mqtt:topic:openhab:ku_light_switch:state_l1"}
Switch ku_light_switch_arbeit_sw "KU Light Arbeit (Wall SW)" <light> (g_light_all,g_light_eg,g_light_eg_ku) {channel="mqtt:topic:openhab:ku_light_switch:state_l2", expire="3h,command=OFF"}
Number:Dimensionless ku_light_switch_link "KU Light SW LINK [%d]" <linkz> (g_zigbee_link) {channel="mqtt:topic:openhab:ku_light_switch:link"}
Switch ku_light_switch_ota "KU Light SW OTA [%s]" <fire> (g_zigbee_ota) {channel="mqtt:topic:openhab:ku_light_switch:ota"}

// Treppe Door sensor (0xccccccfffed82b91)
// TuYa Rechargeable Zigbee contact sensor (SNTZ007) / https://www.zigbee2mqtt.io/devices/SNTZ007.html
Contact treppe_door_sensor_contact "Treppe Door sensor contact [%s]" <door> {channel="mqtt:topic:openhab:treppe_door_sensor:contact"}
Number:Dimensionless treppe_door_sensor_link "Treppe Door sensor LINK [%d]" <linkz> (g_zigbee_link) {channel="mqtt:topic:openhab:treppe_door_sensor:link"}
Switch treppe_door_sensor_ota "Treppe Door sensor OTA [%s]" <fire> (g_zigbee_ota) {channel="mqtt:topic:openhab:treppe_door_sensor:ota"}
Number:Dimensionless treppe_door_sensor_battery "Treppe Door sensor [%.0f %%]" <battery> (g_battery_level) {channel="mqtt:topic:openhab:treppe_door_sensor:battery"}
Switch treppe_door_sensor_battery_low "Treppe Door sensor [MAP(lowbat.map):%s]" <lowbattery> (g_battery_low) {channel="mqtt:topic:openhab:treppe_door_sensor:battery_low"}
Number:ElectricPotential treppe_door_sensor_voltage "Treppe Door sensor [%.0f mV]" <energy> {channel="mqtt:topic:openhab:treppe_door_sensor:voltage"}

// Treppe Up switch (0x680ae2fffe1a92f3)
// IKEA TRADFRI ON/OFF switch (E1743) / https://www.zigbee2mqtt.io/devices/E1743.html
Number:Dimensionless treppe_up_switch_link "Treppe Up switch LINK [%d]" <linkz> (g_zigbee_link) {channel="mqtt:topic:openhab:treppe_up_switch:link"}
Switch treppe_up_switch_ota "Treppe Up switch OTA [%s]" <fire> (g_zigbee_ota) {channel="mqtt:topic:openhab:treppe_up_switch:ota"}
Number:Dimensionless treppe_up_switch_battery "Treppe Up switch [%.0f %%]" <battery> (g_battery_level) {channel="mqtt:topic:openhab:treppe_up_switch:battery"}
Switch treppe_up_switch_battery_low "Treppe Up switch [MAP(lowbat.map):%s]" <lowbattery> (g_battery_low) {channel="mqtt:topic:openhab:treppe_up_switch:battery_low"}

// Treppe Down switch (0xccccccfffef0356e)
// IKEA TRADFRI ON/OFF switch (E1743) / https://www.zigbee2mqtt.io/devices/E1743.html
Number:Dimensionless treppe_down_switch_link "Treppe Down switch LINK [%d]" <linkz> (g_zigbee_link) {channel="mqtt:topic:openhab:treppe_down_switch:link"}
Switch treppe_down_switch_ota "Treppe Down switch OTA [%s]" <fire> (g_zigbee_ota) {channel="mqtt:topic:openhab:treppe_down_switch:ota"}
Number:Dimensionless treppe_down_switch_battery "Treppe Down switch [%.0f %%]" <battery> (g_battery_level) {channel="mqtt:topic:openhab:treppe_down_switch:battery"}
Switch treppe_down_switch_battery_low "Treppe Down switch [MAP(lowbat.map):%s]" <lowbattery> (g_battery_low) {channel="mqtt:topic:openhab:treppe_down_switch:battery_low"}

// Treppe Up light (0xd0cf5efffee892b0)
// IKEA TRADFRI LED bulb E27 1000 lumen, dimmable, white spectrum, opal white (LED1732G11) / https://www.zigbee2mqtt.io/devices/LED1732G11.html
Switch treppe_up_light_sw "Treppe Up light" <light> (g_light_all,g_light_treppe,g_light_kg,g_light_kg_auto) {channel="mqtt:topic:openhab:treppe_up_light:state", expire="1h,command=OFF"}
Dimmer treppe_up_light_dim "Treppe Up light DIM [%d %%]" <light> (g_dim_treppe) {channel="mqtt:topic:openhab:treppe_up_light:dim"}
Dimmer treppe_up_light_ct "Treppe Up light CT [JS(display-mired.js):%s]" <colorwheel> (g_ct_treppe,g_light_astro_color) {channel="mqtt:topic:openhab:treppe_up_light:ct"}
Number:Dimensionless treppe_up_light_link "Treppe Up light LINK [%d]" <linkz> (g_zigbee_link) {channel="mqtt:topic:openhab:treppe_up_light:link"}
Switch treppe_up_light_ota "Treppe Up light OTA [%s]" <fire> (g_zigbee_ota) {channel="mqtt:topic:openhab:treppe_up_light:ota"}

// Treppe Down light (0x588e81fffe507b40)
// IKEA TRADFRI LED bulb E27 1000 lumen, dimmable, white spectrum, opal white (LED1732G11) / https://www.zigbee2mqtt.io/devices/LED1732G11.html
Switch treppe_down_light_sw "Treppe Down light" <light> (g_light_all,g_light_treppe,g_light_kg,g_light_kg_auto) {channel="mqtt:topic:openhab:treppe_down_light:state", expire="1h,command=OFF"}
Dimmer treppe_down_light_dim "Treppe Down light DIM [%d %%]" <light> (g_dim_treppe) {channel="mqtt:topic:openhab:treppe_down_light:dim"}
Dimmer treppe_down_light_ct "Treppe Down light CT [JS(display-mired.js):%s]" <colorwheel> (g_ct_treppe,g_light_astro_color) {channel="mqtt:topic:openhab:treppe_down_light:ct"}
Number:Dimensionless treppe_down_light_link "Treppe Down light LINK [%d]" <linkz> (g_zigbee_link) {channel="mqtt:topic:openhab:treppe_down_light:link"}
Switch treppe_down_light_ota "Treppe Down light OTA [%s]" <fire> (g_zigbee_ota) {channel="mqtt:topic:openhab:treppe_down_light:ota"}

// Treppe motion (0xbc33acfffe872049)
// IKEA TRADFRI motion sensor (E1525/E1745) / https://www.zigbee2mqtt.io/devices/E1525_E1745.html
Switch treppe_motion_occupancy "Treppe motion" <motion> {channel="mqtt:topic:openhab:treppe_motion:occupancy"}
DateTime treppe_motion_activity "Treppe motion [JS(display-activity.js):%s]" <time> (g_device_activity) {channel="mqtt:topic:openhab:treppe_motion:activity"}
Number:Dimensionless treppe_motion_link "Treppe motion LINK [%d]" <linkz> (g_zigbee_link) {channel="mqtt:topic:openhab:treppe_motion:link"}
Switch treppe_motion_ota "Treppe motion OTA [%s]" <fire> (g_zigbee_ota) {channel="mqtt:topic:openhab:treppe_motion:ota"}
Number:Dimensionless treppe_motion_battery "Treppe motion [%.0f %%]" <battery> (g_battery_level) {channel="mqtt:topic:openhab:treppe_motion:battery"}
Switch treppe_motion_battery_low "Treppe motion [MAP(lowbat.map):%s]" <lowbattery> (g_battery_low) {channel="mqtt:topic:openhab:treppe_motion:battery_low"}

// KG Window 1 (0xccccccfffed82ba3)
// TuYa Rechargeable Zigbee contact sensor (SNTZ007) / https://www.zigbee2mqtt.io/devices/SNTZ007.html
Contact kg_window_1_contact "KG Window 1 contact [%s]" <door> (kg_windows) {channel="mqtt:topic:openhab:kg_window_1:contact"}
Number:Dimensionless kg_window_1_link "KG Window 1 LINK [%d]" <linkz> (g_zigbee_link) {channel="mqtt:topic:openhab:kg_window_1:link"}
Switch kg_window_1_ota "KG Window 1 OTA [%s]" <fire> (g_zigbee_ota) {channel="mqtt:topic:openhab:kg_window_1:ota"}
Number:Dimensionless kg_window_1_battery "KG Window 1 [%.0f %%]" <battery> (g_battery_level) {channel="mqtt:topic:openhab:kg_window_1:battery"}
Switch kg_window_1_battery_low "KG Window 1 [MAP(lowbat.map):%s]" <lowbattery> (g_battery_low) {channel="mqtt:topic:openhab:kg_window_1:battery_low"}
Number:ElectricPotential kg_window_1_voltage "KG Window 1 [%.0f mV]" <energy> {channel="mqtt:topic:openhab:kg_window_1:voltage"}

// KG Climate (0x00158d0001b95e02)
// Xiaomi Aqara temperature, humidity and pressure sensor (WSDCGQ11LM) / https://www.zigbee2mqtt.io/devices/WSDCGQ11LM.html
Number:Temperature kg_climate_temperature "KG Climate [%.0f %unit%]" <temperature> {channel="mqtt:topic:openhab:kg_climate:temperature"}
Number:Dimensionless kg_climate_humidity "KG Climate [%.0f %%]" <humidity> {channel="mqtt:topic:openhab:kg_climate:humidity"}
Number:Pressure kg_climate_pressure "KG Climate [%.0f %unit%]" <pressure> {channel="mqtt:topic:openhab:kg_climate:pressure"}
DateTime kg_climate_activity "KG Climate [JS(display-activity.js):%s]" <time> (g_device_activity) {channel="mqtt:topic:openhab:kg_climate:activity"}
Number:Dimensionless kg_climate_link "KG Climate LINK [%d]" <linkz> (g_zigbee_link) {channel="mqtt:topic:openhab:kg_climate:link"}
Switch kg_climate_ota "KG Climate OTA [%s]" <fire> (g_zigbee_ota) {channel="mqtt:topic:openhab:kg_climate:ota"}
Number:Dimensionless kg_climate_battery "KG Climate [%.0f %%]" <battery> (g_battery_level) {channel="mqtt:topic:openhab:kg_climate:battery"}
Switch kg_climate_battery_low "KG Climate [MAP(lowbat.map):%s]" <lowbattery> (g_battery_low) {channel="mqtt:topic:openhab:kg_climate:battery_low"}
Number:ElectricPotential kg_climate_voltage "KG Climate [%.0f mV]" <energy> {channel="mqtt:topic:openhab:kg_climate:voltage"}

// Petro Desktop light (0xccccccfffed8ef9d)
// IKEA TRADFRI LED bulb E27 806 lumen, dimmable, white spectrum, clear (LED1736G9) / https://www.zigbee2mqtt.io/devices/LED1736G9.html
Switch desktop_petro_light_sw "Petro Desktop light" <light> (g_light_all,g_light_kg) {channel="mqtt:topic:openhab:desktop_petro_light:state"}
Dimmer desktop_petro_light_dim "Petro Desktop light DIM [%d %%]" <light> {channel="mqtt:topic:openhab:desktop_petro_light:dim"}
Dimmer desktop_petro_light_ct "Petro Desktop light CT [JS(display-mired.js):%s]" <colorwheel> (g_light_astro_color) {channel="mqtt:topic:openhab:desktop_petro_light:ct"}
Number:Dimensionless desktop_petro_light_link "Petro Desktop light LINK [%d]" <linkz> (g_zigbee_link) {channel="mqtt:topic:openhab:desktop_petro_light:link"}
Switch desktop_petro_light_ota "Petro Desktop light OTA [%s]" <fire> (g_zigbee_ota) {channel="mqtt:topic:openhab:desktop_petro_light:ota"}

// Petro Desktop AUX (0x7cb03eaa0a094bf2)
// OSRAM Smart+ plug / https://www.zigbee2mqtt.io/devices/AB3257001NJ.html
Switch desktop_petro_aux_power_sw "Petro Desktop AUX" <switch> {channel="mqtt:topic:openhab:desktop_petro_aux_power:state"}
Number:Dimensionless desktop_petro_aux_power_link "Petro Desktop AUX LINK [%d]" <linkz> (g_zigbee_link) {channel="mqtt:topic:openhab:desktop_petro_aux_power:link"}
Switch desktop_petro_aux_power_ota "Petro Desktop AUX OTA [%s]" <fire> (g_zigbee_ota) {channel="mqtt:topic:openhab:desktop_petro_aux_power:ota"}

// Petro Desktop PC (0x7cb03eaa0a094303)
// OSRAM Smart+ plug / https://www.zigbee2mqtt.io/devices/AB3257001NJ.html
Switch desktop_petro_pc_power_sw "Petro Desktop PC" <switch> {channel="mqtt:topic:openhab:desktop_petro_pc_power:state"}
Number:Dimensionless desktop_petro_pc_power_link "Petro Desktop PC LINK [%d]" <linkz> (g_zigbee_link) {channel="mqtt:topic:openhab:desktop_petro_pc_power:link"}
Switch desktop_petro_pc_power_ota "Petro Desktop PC OTA [%s]" <fire> (g_zigbee_ota) {channel="mqtt:topic:openhab:desktop_petro_pc_power:ota"}

// Petro Desktop remote (0x000d6ffffee8357d)
// IKEA TRADFRI remote control (E1524/E1810) / https://www.zigbee2mqtt.io/devices/E1524_E1810.html
Number:Dimensionless desktop_petro_remote_link "Petro Desktop remote LINK [%d]" <linkz> (g_zigbee_link) {channel="mqtt:topic:openhab:desktop_petro_remote:link"}
Switch desktop_petro_remote_ota "Petro Desktop remote OTA [%s]" <fire> (g_zigbee_ota) {channel="mqtt:topic:openhab:desktop_petro_remote:ota"}
Number:Dimensionless desktop_petro_remote_battery "Petro Desktop remote [%.0f %%]" <battery> (g_battery_level) {channel="mqtt:topic:openhab:desktop_petro_remote:battery"}
Switch desktop_petro_remote_battery_low "Petro Desktop remote [MAP(lowbat.map):%s]" <lowbattery> (g_battery_low) {channel="mqtt:topic:openhab:desktop_petro_remote:battery_low"}

// KG Hobbyraum (Flür) (kg_main1_light)
// Sonoff Touch EU Switch (1 gang) / https://templates.blakadder.com/sonoff_touch_eu.html
Switch kg_main1_light "KG Hobbyraum (Flür)" <light> (g_light_all,g_light_kg,g_light_kg_auto) {channel="mqtt:topic:openhab:kg_main1_light:POWER"}
Number:Dimensionless kg_main1_light_rssi "KG Hobbyraum (Flür) RSSI [%.0f]" <network> {channel="mqtt:topic:openhab:kg_main1_light:rssi"}
String kg_main1_light_bssid "KG Hobbyraum (Flür) BSSID [%s]" <network> {channel="mqtt:topic:openhab:kg_main1_light:bssid"}
Number:Dimensionless kg_main1_light_la "KG Hobbyraum (Flür) LA [%d]" <energy> {channel="mqtt:topic:openhab:kg_main1_light:la"}
DateTime kg_main1_light_activity "KG Hobbyraum (Flür) [JS(display-activity.js):%s]" <time> (g_device_activity) {channel="mqtt:topic:openhab:kg_main1_light:activity"}

// KG Hobbyraum (Haupt) (kg_main2_light)
// Sonoff Touch EU Switch (1 gang) / https://templates.blakadder.com/sonoff_touch_eu.html
Switch kg_main2_light "KG Hobbyraum (Haupt)" <light> (g_light_all,g_light_kg) {channel="mqtt:topic:openhab:kg_main2_light:POWER"}
Number:Dimensionless kg_main2_light_rssi "KG Hobbyraum (Haupt) RSSI [%.0f]" <network> {channel="mqtt:topic:openhab:kg_main2_light:rssi"}
String kg_main2_light_bssid "KG Hobbyraum (Haupt) BSSID [%s]" <network> {channel="mqtt:topic:openhab:kg_main2_light:bssid"}
Number:Dimensionless kg_main2_light_la "KG Hobbyraum (Haupt) LA [%d]" <energy> {channel="mqtt:topic:openhab:kg_main2_light:la"}
DateTime kg_main2_light_activity "KG Hobbyraum (Haupt) [JS(display-activity.js):%s]" <time> (g_device_activity) {channel="mqtt:topic:openhab:kg_main2_light:activity"}

// KG Heuzung (Haupt) (kg_hz_main_light)
// Sonoff Mini Switch / https://templates.blakadder.com/sonoff_mini.html
Switch kg_hz_main_light "KG Heuzung (Haupt)" <light> (g_light_all,g_light_kg) {channel="mqtt:topic:openhab:kg_hz_main_light:POWER", expire="1h,command=OFF"}
Number:Dimensionless kg_hz_main_light_rssi "KG Heuzung (Haupt) RSSI [%.0f]" <network> {channel="mqtt:topic:openhab:kg_hz_main_light:rssi"}
String kg_hz_main_light_bssid "KG Heuzung (Haupt) BSSID [%s]" <network> {channel="mqtt:topic:openhab:kg_hz_main_light:bssid"}
Number:Dimensionless kg_hz_main_light_la "KG Heuzung (Haupt) LA [%d]" <energy> {channel="mqtt:topic:openhab:kg_hz_main_light:la"}
DateTime kg_hz_main_light_activity "KG Heuzung (Haupt) [JS(display-activity.js):%s]" <time> (g_device_activity) {channel="mqtt:topic:openhab:kg_hz_main_light:activity"}

// Garten wasser (garten_wasser_sw)
// Sonoff Mini Switch / https://templates.blakadder.com/sonoff_mini.html
Switch garten_wasser_sw "Garten wasser" <light> {channel="mqtt:topic:openhab:garten_wasser_sw:POWER", expire="1h,command=OFF"}
Number:Dimensionless garten_wasser_sw_rssi "Garten wasser RSSI [%.0f]" <network> {channel="mqtt:topic:openhab:garten_wasser_sw:rssi"}
String garten_wasser_sw_bssid "Garten wasser BSSID [%s]" <network> {channel="mqtt:topic:openhab:garten_wasser_sw:bssid"}
Number:Dimensionless garten_wasser_sw_la "Garten wasser LA [%d]" <energy> {channel="mqtt:topic:openhab:garten_wasser_sw:la"}
DateTime garten_wasser_sw_activity "Garten wasser [JS(display-activity.js):%s]" <time> (g_device_activity) {channel="mqtt:topic:openhab:garten_wasser_sw:activity"}

// Garten wasser leak (0x00158d0006b7aa81)
// Xiaomi Aqara water leak sensor (SJCGQ11LM) / https://www.zigbee2mqtt.io/devices/SJCGQ11LM.html
Switch garten_wasser_leak_leak "Garten wasser leak" <flow> {channel="mqtt:topic:openhab:garten_wasser_leak:leak"}
DateTime garten_wasser_leak_activity "Garten wasser leak [JS(display-activity.js):%s]" <time> (g_device_activity) {channel="mqtt:topic:openhab:garten_wasser_leak:activity"}
Number:Dimensionless garten_wasser_leak_link "Garten wasser leak LINK [%d]" <linkz> (g_zigbee_link) {channel="mqtt:topic:openhab:garten_wasser_leak:link"}
Switch garten_wasser_leak_ota "Garten wasser leak OTA [%s]" <fire> (g_zigbee_ota) {channel="mqtt:topic:openhab:garten_wasser_leak:ota"}
Number:Dimensionless garten_wasser_leak_battery "Garten wasser leak [%.0f %%]" <battery> (g_battery_level) {channel="mqtt:topic:openhab:garten_wasser_leak:battery"}
Switch garten_wasser_leak_battery_low "Garten wasser leak [MAP(lowbat.map):%s]" <lowbattery> (g_battery_low) {channel="mqtt:topic:openhab:garten_wasser_leak:battery_low"}
Number:ElectricPotential garten_wasser_leak_voltage "Garten wasser leak [%.0f mV]" <energy> {channel="mqtt:topic:openhab:garten_wasser_leak:voltage"}

// KG Lager 1 (Haupt) (kg_lager1_main_light)
// Sonoff Mini Switch / https://templates.blakadder.com/sonoff_mini.html
Switch kg_lager1_main_light "KG Lager 1 (Haupt)" <light> (g_light_all,g_light_kg) {channel="mqtt:topic:openhab:kg_lager1_main_light:POWER", expire="1h,command=OFF"}
Number:Dimensionless kg_lager1_main_light_rssi "KG Lager 1 (Haupt) RSSI [%.0f]" <network> {channel="mqtt:topic:openhab:kg_lager1_main_light:rssi"}
String kg_lager1_main_light_bssid "KG Lager 1 (Haupt) BSSID [%s]" <network> {channel="mqtt:topic:openhab:kg_lager1_main_light:bssid"}
Number:Dimensionless kg_lager1_main_light_la "KG Lager 1 (Haupt) LA [%d]" <energy> {channel="mqtt:topic:openhab:kg_lager1_main_light:la"}
DateTime kg_lager1_main_light_activity "KG Lager 1 (Haupt) [JS(display-activity.js):%s]" <time> (g_device_activity) {channel="mqtt:topic:openhab:kg_lager1_main_light:activity"}

// KG Lager 3 (Haupt) (kg_lager3_main_light)
// Sonoff Mini Switch / https://templates.blakadder.com/sonoff_mini.html
Switch kg_lager3_main_light "KG Lager 3 (Haupt)" <light> (g_light_all,g_light_kg) {channel="mqtt:topic:openhab:kg_lager3_main_light:POWER", expire="1h,command=OFF"}
Number:Dimensionless kg_lager3_main_light_rssi "KG Lager 3 (Haupt) RSSI [%.0f]" <network> {channel="mqtt:topic:openhab:kg_lager3_main_light:rssi"}
String kg_lager3_main_light_bssid "KG Lager 3 (Haupt) BSSID [%s]" <network> {channel="mqtt:topic:openhab:kg_lager3_main_light:bssid"}
Number:Dimensionless kg_lager3_main_light_la "KG Lager 3 (Haupt) LA [%d]" <energy> {channel="mqtt:topic:openhab:kg_lager3_main_light:la"}
DateTime kg_lager3_main_light_activity "KG Lager 3 (Haupt) [JS(display-activity.js):%s]" <time> (g_device_activity) {channel="mqtt:topic:openhab:kg_lager3_main_light:activity"}

// KG Lager 4 (Haupt) (kg_lager4_main_light)
// Sonoff Mini Switch / https://templates.blakadder.com/sonoff_mini.html
Switch kg_lager4_main_light "KG Lager 4 (Haupt)" <light> (g_light_all,g_light_kg) {channel="mqtt:topic:openhab:kg_lager4_main_light:POWER", expire="1h,command=OFF"}
Number:Dimensionless kg_lager4_main_light_rssi "KG Lager 4 (Haupt) RSSI [%.0f]" <network> {channel="mqtt:topic:openhab:kg_lager4_main_light:rssi"}
String kg_lager4_main_light_bssid "KG Lager 4 (Haupt) BSSID [%s]" <network> {channel="mqtt:topic:openhab:kg_lager4_main_light:bssid"}
Number:Dimensionless kg_lager4_main_light_la "KG Lager 4 (Haupt) LA [%d]" <energy> {channel="mqtt:topic:openhab:kg_lager4_main_light:la"}
DateTime kg_lager4_main_light_activity "KG Lager 4 (Haupt) [JS(display-activity.js):%s]" <time> (g_device_activity) {channel="mqtt:topic:openhab:kg_lager4_main_light:activity"}

// KG Lager 4 (1) (0xccccccfffedf345a)
// IKEA TRADFRI LED bulb E26/E27 806 lumen, dimmable, warm white (LED1836G9) / https://www.zigbee2mqtt.io/devices/LED1836G9.html
Switch kg_lager4_1_light_sw "KG Lager 4 (1)" <light> (g_light_all,g_light_kg,g_light_lager_auto) {channel="mqtt:topic:openhab:kg_lager4_1_light:state", expire="1h,command=OFF"}
Dimmer kg_lager4_1_light_dim "KG Lager 4 (1) DIM [%d %%]" <light> (g_dim_lager_auto) {channel="mqtt:topic:openhab:kg_lager4_1_light:dim"}
Number:Dimensionless kg_lager4_1_light_link "KG Lager 4 (1) LINK [%d]" <linkz> (g_zigbee_link) {channel="mqtt:topic:openhab:kg_lager4_1_light:link"}
Switch kg_lager4_1_light_ota "KG Lager 4 (1) OTA [%s]" <fire> (g_zigbee_ota) {channel="mqtt:topic:openhab:kg_lager4_1_light:ota"}

// KG Lager 4 (2) (0xccccccfffedf5314)
// IKEA TRADFRI LED bulb E26/E27 806 lumen, dimmable, warm white (LED1836G9) / https://www.zigbee2mqtt.io/devices/LED1836G9.html
Switch kg_lager4_2_light_sw "KG Lager 4 (2)" <light> (g_light_all,g_light_kg,g_light_lager_auto) {channel="mqtt:topic:openhab:kg_lager4_2_light:state", expire="1h,command=OFF"}
Dimmer kg_lager4_2_light_dim "KG Lager 4 (2) DIM [%d %%]" <light> (g_dim_lager_auto) {channel="mqtt:topic:openhab:kg_lager4_2_light:dim"}
Number:Dimensionless kg_lager4_2_light_link "KG Lager 4 (2) LINK [%d]" <linkz> (g_zigbee_link) {channel="mqtt:topic:openhab:kg_lager4_2_light:link"}
Switch kg_lager4_2_light_ota "KG Lager 4 (2) OTA [%s]" <fire> (g_zigbee_ota) {channel="mqtt:topic:openhab:kg_lager4_2_light:ota"}

// KG Lager switch (0xccccccfffee401f8)
// IKEA TRADFRI ON/OFF switch (E1743) / https://www.zigbee2mqtt.io/devices/E1743.html
Number:Dimensionless kg_lager4_switch_link "KG Lager switch LINK [%d]" <linkz> (g_zigbee_link) {channel="mqtt:topic:openhab:kg_lager4_switch:link"}
Switch kg_lager4_switch_ota "KG Lager switch OTA [%s]" <fire> (g_zigbee_ota) {channel="mqtt:topic:openhab:kg_lager4_switch:ota"}
Number:Dimensionless kg_lager4_switch_battery "KG Lager switch [%.0f %%]" <battery> (g_battery_level) {channel="mqtt:topic:openhab:kg_lager4_switch:battery"}
Switch kg_lager4_switch_battery_low "KG Lager switch [MAP(lowbat.map):%s]" <lowbattery> (g_battery_low) {channel="mqtt:topic:openhab:kg_lager4_switch:battery_low"}

// KG Lager motion (0xbc33acfffe84ca1e)
// IKEA TRADFRI motion sensor (E1525/E1745) / https://www.zigbee2mqtt.io/devices/E1525_E1745.html
Switch kg_lager4_motion_occupancy "KG Lager motion" <motion> {channel="mqtt:topic:openhab:kg_lager4_motion:occupancy"}
DateTime kg_lager4_motion_activity "KG Lager motion [JS(display-activity.js):%s]" <time> (g_device_activity) {channel="mqtt:topic:openhab:kg_lager4_motion:activity"}
Number:Dimensionless kg_lager4_motion_link "KG Lager motion LINK [%d]" <linkz> (g_zigbee_link) {channel="mqtt:topic:openhab:kg_lager4_motion:link"}
Switch kg_lager4_motion_ota "KG Lager motion OTA [%s]" <fire> (g_zigbee_ota) {channel="mqtt:topic:openhab:kg_lager4_motion:ota"}
Number:Dimensionless kg_lager4_motion_battery "KG Lager motion [%.0f %%]" <battery> (g_battery_level) {channel="mqtt:topic:openhab:kg_lager4_motion:battery"}
Switch kg_lager4_motion_battery_low "KG Lager motion [MAP(lowbat.map):%s]" <lowbattery> (g_battery_low) {channel="mqtt:topic:openhab:kg_lager4_motion:battery_low"}

// KG Lager 4 leak (0x00158d000488052c)
// Xiaomi Aqara water leak sensor (SJCGQ11LM) / https://www.zigbee2mqtt.io/devices/SJCGQ11LM.html
Switch kg_lager4_leak_leak "KG Lager 4 leak" <flow> {channel="mqtt:topic:openhab:kg_lager4_leak:leak"}
DateTime kg_lager4_leak_activity "KG Lager 4 leak [JS(display-activity.js):%s]" <time> (g_device_activity) {channel="mqtt:topic:openhab:kg_lager4_leak:activity"}
Number:Dimensionless kg_lager4_leak_link "KG Lager 4 leak LINK [%d]" <linkz> (g_zigbee_link) {channel="mqtt:topic:openhab:kg_lager4_leak:link"}
Switch kg_lager4_leak_ota "KG Lager 4 leak OTA [%s]" <fire> (g_zigbee_ota) {channel="mqtt:topic:openhab:kg_lager4_leak:ota"}
Number:Dimensionless kg_lager4_leak_battery "KG Lager 4 leak [%.0f %%]" <battery> (g_battery_level) {channel="mqtt:topic:openhab:kg_lager4_leak:battery"}
Switch kg_lager4_leak_battery_low "KG Lager 4 leak [MAP(lowbat.map):%s]" <lowbattery> (g_battery_low) {channel="mqtt:topic:openhab:kg_lager4_leak:battery_low"}
Number:ElectricPotential kg_lager4_leak_voltage "KG Lager 4 leak [%.0f mV]" <energy> {channel="mqtt:topic:openhab:kg_lager4_leak:voltage"}

// SZ heating (0x5c0272fffec9d557)
// TuYa Radiator valve with thermostat (TS0601_thermostat) / https://www.zigbee2mqtt.io/devices/TS0601_thermostat.html
Number:Temperature sz_heating_thermostat "SZ heating SET [%.0f %unit%]" <heatingt> (g_hz_all,g_hz_auto,g_hz_eg) {channel="mqtt:topic:openhab:sz_heating:thermostat"}
Number:Dimensionless sz_heating_position "SZ heating POS [%.0f %%]" <heating> (g_hz_valve) {channel="mqtt:topic:openhab:sz_heating:position"}
Number:Temperature sz_heating_temperature "SZ heating [%.0f %unit%]" <temperature> {channel="mqtt:topic:openhab:sz_heating:temperature"}
DateTime sz_heating_activity "SZ heating [JS(display-activity.js):%s]" <time> (g_device_activity) {channel="mqtt:topic:openhab:sz_heating:activity"}
Number:Dimensionless sz_heating_link "SZ heating LINK [%d]" <linkz> (g_zigbee_link) {channel="mqtt:topic:openhab:sz_heating:link"}
Switch sz_heating_ota "SZ heating OTA [%s]" <fire> (g_zigbee_ota) {channel="mqtt:topic:openhab:sz_heating:ota"}
Switch sz_heating_battery_low "SZ heating [MAP(lowbat.map):%s]" <lowbattery> (g_battery_low) {channel="mqtt:topic:openhab:sz_heating:battery_low"}

// KG heating (0x5c0272fffedc2f41)
// TuYa Radiator valve with thermostat (TS0601_thermostat) / https://www.zigbee2mqtt.io/devices/TS0601_thermostat.html
Number:Temperature kg_heating_thermostat "KG heating SET [%.0f %unit%]" <heatingt> (g_hz_all,g_hz_auto,g_hz_kg) {channel="mqtt:topic:openhab:kg_heating:thermostat"}
Number:Dimensionless kg_heating_position "KG heating POS [%.0f %%]" <heating> (g_hz_valve) {channel="mqtt:topic:openhab:kg_heating:position"}
Number:Temperature kg_heating_temperature "KG heating [%.0f %unit%]" <temperature> {channel="mqtt:topic:openhab:kg_heating:temperature"}
DateTime kg_heating_activity "KG heating [JS(display-activity.js):%s]" <time> (g_device_activity) {channel="mqtt:topic:openhab:kg_heating:activity"}
Number:Dimensionless kg_heating_link "KG heating LINK [%d]" <linkz> (g_zigbee_link) {channel="mqtt:topic:openhab:kg_heating:link"}
Switch kg_heating_ota "KG heating OTA [%s]" <fire> (g_zigbee_ota) {channel="mqtt:topic:openhab:kg_heating:ota"}
Switch kg_heating_battery_low "KG heating [MAP(lowbat.map):%s]" <lowbattery> (g_battery_low) {channel="mqtt:topic:openhab:kg_heating:battery_low"}
