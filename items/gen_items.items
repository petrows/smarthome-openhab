
// ==========================================
// THIS FILE IS AUTO GENERATED
// Do not edit by hands
// Use this command to regenerate:
// python3 ./bin/codegen.py
// ==========================================


// Sturbar test (0x04cd15fffe6d57dc)
// IKEA STYRBAR remote control N2 / https://www.zigbee2mqtt.io/devices/E2001_E2002.html
Dimmer sturbar_test_dim "Sturbar test DIM [%d %%]" <light> (g_all_dim) {channel="mqtt:topic:openhab:sturbar_test:dim"}
Switch sturbar_test_lowbatt "Sturbar test BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:sturbar_test:battery_low"}
Switch sturbar_test_ota "Sturbar test OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:sturbar_test:ota"}
Number:Dimensionless sturbar_test_link "Sturbar test LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:sturbar_test:link"}
Number:Dimensionless sturbar_test_battery "Sturbar test  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:sturbar_test:battery"}
// Outside Climate (ext_climate)
// PWS room sensor v2 (no co2) / https://oshwlab.com/petrows/wemos-d1-room-sensor
Number:Temperature ext_climate_temperature "Outside Climate temp [%.0f %unit%]" <temperature> (g_all_temperature) {channel="mqtt:topic:openhab:ext_climate:temperature"}
Number:Dimensionless ext_climate_humidity "Outside Climate humidity  [%.0f %%]" <humidity> (g_all_humidity) {channel="mqtt:topic:openhab:ext_climate:humidity"}
Number:Temperature ext_climate_dewpoint "Outside Climate dewpoint [%.0f %unit%]" <temperature> (g_all_dewpoint) {channel="mqtt:topic:openhab:ext_climate:dewpoint"}
Number:Pressure ext_climate_pressure "Outside Climate pressure  [%.0f %unit%]" <pressure> (g_all_pressure) {channel="mqtt:topic:openhab:ext_climate:pressure"}
Number:Dimensionless ext_climate_rssi "Outside Climate RSSI [%.0f]" <network> (g_all_rssi) {channel="mqtt:topic:openhab:ext_climate:rssi"}
String ext_climate_bssid "Outside Climate BSSID [%s]" <network> (g_all_bssid) {channel="mqtt:topic:openhab:ext_climate:bssid"}
DateTime ext_climate_activity "Outside Climate activity [JS(codegen-display-activity.js):%s]" <time> (g_all_activity) {channel="mqtt:topic:openhab:ext_climate:activity"}
Number:Temperature ext_climate_temperature "Outside Climate temp [%.0f %unit%]" <temperature> (g_all_temperature) {channel="mqtt:topic:openhab:ext_climate:temperature"}
Number:Temperature ext_climate_dewpoint "Outside Climate dewpoint [%.0f %unit%]" <temperature> (g_all_dewpoint) {channel="mqtt:topic:openhab:ext_climate:dewpoint"}
Number:Dimensionless ext_climate_humidity "Outside Climate humidity  [%.0f %%]" <humidity> (g_all_humidity) {channel="mqtt:topic:openhab:ext_climate:humidity"}
Number:Pressure ext_climate_pressure "Outside Climate pressure  [%.0f %unit%]" <pressure> (g_all_pressure) {channel="mqtt:topic:openhab:ext_climate:pressure"}
// Balkon light 1 (0x14b457fffe399241)
// IKEA TRADFRI LED bulb E27 1000 lumen, dimmable, white spectrum, opal white (LED1732G11) / https://www.zigbee2mqtt.io/devices/LED1732G11.html
Dimmer bk_light_1_dim "Balkon light 1 DIM [%d %%]" <light> (g_all_dim,bk_light_dim,bk_up_light_dim) {channel="mqtt:topic:openhab:bk_light_1:dim"}
Dimmer bk_light_1_dim_fast "Balkon light 1 DIM-F [%d %%]" (g_all_dim_fast) {channel="mqtt:topic:openhab:bk_light_1:dim_fast"}
Dimmer bk_light_1_ct "Balkon light 1 CT [JS(codegen-mired.js): %s]" <light> (g_all_ct,bk_light_ct,bk_up_light_ct) {channel="mqtt:topic:openhab:bk_light_1:ct"}
Switch bk_light_1_ota "Balkon light 1 OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:bk_light_1:ota"}
Number:Dimensionless bk_light_1_link "Balkon light 1 LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:bk_light_1:link"}
Switch bk_light_1_sw "Balkon light 1" <light> (g_all_sw,all_light,bk_light_sw,bk_up_light_sw) {channel="mqtt:topic:openhab:bk_light_1:state"}
// Balkon light 2 (0xb0c7defffe411c6f)
// IKEA TRADFRI LED bulb E27 1000 lumen, dimmable, white spectrum, opal white (LED1732G11) / https://www.zigbee2mqtt.io/devices/LED1732G11.html
Dimmer bk_light_2_dim "Balkon light 2 DIM [%d %%]" <light> (g_all_dim,bk_light_dim,bk_up_light_dim) {channel="mqtt:topic:openhab:bk_light_2:dim"}
Dimmer bk_light_2_dim_fast "Balkon light 2 DIM-F [%d %%]" (g_all_dim_fast) {channel="mqtt:topic:openhab:bk_light_2:dim_fast"}
Dimmer bk_light_2_ct "Balkon light 2 CT [JS(codegen-mired.js): %s]" <light> (g_all_ct,bk_light_ct,bk_up_light_ct) {channel="mqtt:topic:openhab:bk_light_2:ct"}
Switch bk_light_2_ota "Balkon light 2 OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:bk_light_2:ota"}
Number:Dimensionless bk_light_2_link "Balkon light 2 LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:bk_light_2:link"}
Switch bk_light_2_sw "Balkon light 2" <light> (g_all_sw,all_light,bk_light_sw,bk_up_light_sw) {channel="mqtt:topic:openhab:bk_light_2:state"}
// Garten wasser remote (0xccccccfffe58f1c3)
// IKEA TRADFRI ON/OFF switch (E1743) / https://www.zigbee2mqtt.io/devices/E1743.html
Switch garten_wasser_remote_lowbatt "Garten wasser remote BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:garten_wasser_remote:battery_low"}
Switch garten_wasser_remote_ota "Garten wasser remote OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:garten_wasser_remote:ota"}
Number:Dimensionless garten_wasser_remote_link "Garten wasser remote LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:garten_wasser_remote:link"}
Number:Dimensionless garten_wasser_remote_battery "Garten wasser remote  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:garten_wasser_remote:battery"}
// EG Corridor Light (0xa4c138a06ec38c9e)
// TuYa Wall dimmer module (TS110E_1gang_1) / https://www.zigbee2mqtt.io/devices/TS110E_1gang_1.html#tuya-ts110e_1gang_1
Dimmer fl_up_light_dim "EG Corridor Light DIM [%d %%]" <light> (g_all_dim) {channel="mqtt:topic:openhab:fl_up_light:dim"}
Dimmer fl_up_light_dim_fast "EG Corridor Light DIM-F [%d %%]" (g_all_dim_fast) {channel="mqtt:topic:openhab:fl_up_light:dim_fast"}
Switch fl_up_light_ota "EG Corridor Light OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:fl_up_light:ota"}
Number:Dimensionless fl_up_light_link "EG Corridor Light LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:fl_up_light:link"}
Switch fl_up_light_sw "EG Corridor Light" <light> (g_all_sw,all_light,eg_light,fl_light) {channel="mqtt:topic:openhab:fl_up_light:state"}
// EG Decor light (0x9035eafffe20e847)
// IKEA TRADFRI LED bulb E27 WW clear 250 lumen, dimmable (LED1842G3) / https://www.zigbee2mqtt.io/devices/LED1842G3.html
Dimmer eg_decoration_light_dim "EG Decor light DIM [%d %%]" <light> (g_all_dim,eg_light_auto_dim) {channel="mqtt:topic:openhab:eg_decoration_light:dim"}
Dimmer eg_decoration_light_dim_fast "EG Decor light DIM-F [%d %%]" (g_all_dim_fast) {channel="mqtt:topic:openhab:eg_decoration_light:dim_fast"}
Switch eg_decoration_light_ota "EG Decor light OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:eg_decoration_light:ota"}
Number:Dimensionless eg_decoration_light_link "EG Decor light LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:eg_decoration_light:link"}
Switch eg_decoration_light_sw "EG Decor light" <light> (g_all_sw,all_light,eg_light,eg_light_auto,fl_light) {channel="mqtt:topic:openhab:eg_decoration_light:state"}
// Entrance Door sensor (0xa4c138182f60d651)
// TuYa Rechargeable Zigbee contact sensor (TS0203) / https://www.zigbee2mqtt.io/devices/TS0203.html#tuya-ts0203
Switch eg_main_door_lowbatt "Entrance Door sensor BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:eg_main_door:battery_low"}
Switch eg_main_door_ota "Entrance Door sensor OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:eg_main_door:ota"}
Number:Dimensionless eg_main_door_link "Entrance Door sensor LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:eg_main_door:link"}
DateTime eg_main_door_activity "Entrance Door sensor activity [JS(codegen-display-activity.js):%s]" <time> (g_all_activity) {channel="mqtt:topic:openhab:eg_main_door:activity"}
Contact eg_main_door_contact "Entrance Door sensor [%s]" <door> (g_all_contact) {channel="mqtt:topic:openhab:eg_main_door:contact"}
Number:Dimensionless eg_main_door_battery "Entrance Door sensor  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:eg_main_door:battery"}
// Entrance Door remote (0x1c34f1fffe830517)
// IKEA STYRBAR remote control N2 / https://www.zigbee2mqtt.io/devices/E2001_E2002.html
Dimmer fl_door_remote_dim "Entrance Door remote DIM [%d %%]" <light> (g_all_dim) {channel="mqtt:topic:openhab:fl_door_remote:dim"}
Switch fl_door_remote_lowbatt "Entrance Door remote BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:fl_door_remote:battery_low"}
Switch fl_door_remote_ota "Entrance Door remote OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:fl_door_remote:ota"}
Number:Dimensionless fl_door_remote_link "Entrance Door remote LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:fl_door_remote:link"}
Number:Dimensionless fl_door_remote_battery "Entrance Door remote  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:fl_door_remote:battery"}
// Mirror remote (0xb43522fffe7939b3)
// IKEA STYRBAR remote control N2 / https://www.zigbee2mqtt.io/devices/E2001_E2002.html
Dimmer fl_mirror_remote_dim "Mirror remote DIM [%d %%]" <light> (g_all_dim) {channel="mqtt:topic:openhab:fl_mirror_remote:dim"}
Switch fl_mirror_remote_lowbatt "Mirror remote BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:fl_mirror_remote:battery_low"}
Switch fl_mirror_remote_ota "Mirror remote OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:fl_mirror_remote:ota"}
Number:Dimensionless fl_mirror_remote_link "Mirror remote LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:fl_mirror_remote:link"}
Number:Dimensionless fl_mirror_remote_battery "Mirror remote  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:fl_mirror_remote:battery"}
// Entrance mirror (0x90ab96fffe52f8fa)
// IKEA TRADFRI driver for wireless control / https://www.zigbee2mqtt.io/devices/ICPSHC24-10EU-IL-1.html
Dimmer fl_mirror_dim "Entrance mirror DIM [%d %%]" <light> (g_all_dim) {channel="mqtt:topic:openhab:fl_mirror:dim"}
Dimmer fl_mirror_dim_fast "Entrance mirror DIM-F [%d %%]" (g_all_dim_fast) {channel="mqtt:topic:openhab:fl_mirror:dim_fast"}
Switch fl_mirror_ota "Entrance mirror OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:fl_mirror:ota"}
Number:Dimensionless fl_mirror_link "Entrance mirror LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:fl_mirror:link"}
Switch fl_mirror_sw "Entrance mirror" <light> (g_all_sw,all_light,eg_light,fl_light) {channel="mqtt:topic:openhab:fl_mirror:state", expire="30m,command=OFF" [ignoreStateUpdates="true"]}
// BZ Light (toilet) (0xcc86ecfffea0c7cb)
// Livarno Home LED ceiling light (HG08008) / https://www.zigbee2mqtt.io/devices/HG08008.html#lidl-hg08008
Dimmer bz_light_1_dim "BZ Light (toilet) DIM [%d %%]" <light> (g_all_dim,bz_up_light_dim) {channel="mqtt:topic:openhab:bz_light_1:dim"}
Dimmer bz_light_1_dim_fast "BZ Light (toilet) DIM-F [%d %%]" (g_all_dim_fast,bz_up_light_dim_fast) {channel="mqtt:topic:openhab:bz_light_1:dim_fast"}
Dimmer bz_light_1_ct "BZ Light (toilet) CT [JS(codegen-mired.js): %s]" <light> (g_all_ct,astro_color_light_ct,bz_up_light_ct) {channel="mqtt:topic:openhab:bz_light_1:ct"}
Color bz_light_1_color "BZ Light (toilet) Color" <colorwheel> (g_all_color,bz_up_light_color) {channel="mqtt:topic:openhab:bz_light_1:color"}
String bz_light_1_color_mode "BZ Light (toilet) Color mode" <colorwheel> (g_all_color_mode) {channel="mqtt:topic:openhab:bz_light_1:color_mode"}
Switch bz_light_1_ota "BZ Light (toilet) OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:bz_light_1:ota"}
Number:Dimensionless bz_light_1_link "BZ Light (toilet) LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:bz_light_1:link"}
Switch bz_light_1_sw_proxy "BZ Light (toilet) proxy" <light> (g_all_sw,all_light,eg_light,bz_light,bz_up_light_sw)
Switch bz_light_1_sw "BZ Light (toilet)" <light> {channel="mqtt:topic:openhab:bz_light_1:state"}
// BZ Light (shower) (0x04cd15fffedb319f)
// Livarno Home LED ceiling light (HG08008) / https://www.zigbee2mqtt.io/devices/HG08008.html#lidl-hg08008
Dimmer bz_light_2_dim "BZ Light (shower) DIM [%d %%]" <light> (g_all_dim,bz_up_light_dim) {channel="mqtt:topic:openhab:bz_light_2:dim"}
Dimmer bz_light_2_dim_fast "BZ Light (shower) DIM-F [%d %%]" (g_all_dim_fast,bz_up_light_dim_fast) {channel="mqtt:topic:openhab:bz_light_2:dim_fast"}
Dimmer bz_light_2_ct "BZ Light (shower) CT [JS(codegen-mired.js): %s]" <light> (g_all_ct,astro_color_light_ct,bz_up_light_ct) {channel="mqtt:topic:openhab:bz_light_2:ct"}
Color bz_light_2_color "BZ Light (shower) Color" <colorwheel> (g_all_color,bz_up_light_color) {channel="mqtt:topic:openhab:bz_light_2:color"}
String bz_light_2_color_mode "BZ Light (shower) Color mode" <colorwheel> (g_all_color_mode) {channel="mqtt:topic:openhab:bz_light_2:color_mode"}
Switch bz_light_2_ota "BZ Light (shower) OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:bz_light_2:ota"}
Number:Dimensionless bz_light_2_link "BZ Light (shower) LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:bz_light_2:link"}
Switch bz_light_2_sw_proxy "BZ Light (shower) proxy" <light> (g_all_sw,all_light,eg_light,bz_light,bz_up_light_sw)
Switch bz_light_2_sw "BZ Light (shower)" <light> {channel="mqtt:topic:openhab:bz_light_2:state"}
// BZ Mirror (bz_mirror)
// Sonoff Mini Switch / https://templates.blakadder.com/sonoff_mini.html
Switch bz_mirror "BZ Mirror" <light> (g_all_sw,all_light,eg_light,bz_light) {channel="mqtt:topic:openhab:bz_mirror:power", expire="1h,command=OFF" [ignoreStateUpdates="true"]}
Number:Dimensionless bz_mirror_rssi "BZ Mirror RSSI [%.0f]" <network> (g_all_rssi) {channel="mqtt:topic:openhab:bz_mirror:rssi"}
String bz_mirror_bssid "BZ Mirror BSSID [%s]" <network> (g_all_bssid) {channel="mqtt:topic:openhab:bz_mirror:bssid"}
DateTime bz_mirror_activity "BZ Mirror activity [JS(codegen-display-activity.js):%s]" <time> (g_all_activity) {channel="mqtt:topic:openhab:bz_mirror:activity"}
// BZ Mirror switch (0xccccccfffef0356e)
// IKEA TRADFRI ON/OFF switch (E1743) / https://www.zigbee2mqtt.io/devices/E1743.html
Switch bz_mirror_switch_lowbatt "BZ Mirror switch BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:bz_mirror_switch:battery_low"}
Switch bz_mirror_switch_ota "BZ Mirror switch OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:bz_mirror_switch:ota"}
Number:Dimensionless bz_mirror_switch_link "BZ Mirror switch LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:bz_mirror_switch:link"}
Number:Dimensionless bz_mirror_switch_battery "BZ Mirror switch  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:bz_mirror_switch:battery"}
// BZ Light Control (0x003c84fffe132b20)
// IKEA STYRBAR remote control N2 / https://www.zigbee2mqtt.io/devices/E2001_E2002.html
Dimmer bz_light_switch_dim "BZ Light Control DIM [%d %%]" <light> (g_all_dim) {channel="mqtt:topic:openhab:bz_light_switch:dim"}
Switch bz_light_switch_lowbatt "BZ Light Control BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:bz_light_switch:battery_low"}
Switch bz_light_switch_ota "BZ Light Control OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:bz_light_switch:ota"}
Number:Dimensionless bz_light_switch_link "BZ Light Control LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:bz_light_switch:link"}
Number:Dimensionless bz_light_switch_battery "BZ Light Control  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:bz_light_switch:battery"}
// BZ Window R (0x048727fffe9cf022)
// PARASOLL Door/Window Sensor (E2013) / https://www.zigbee2mqtt.io/devices/E2013.html
Switch bz_window_r_lowbatt "BZ Window R BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:bz_window_r:battery_low"}
Switch bz_window_r_ota "BZ Window R OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:bz_window_r:ota"}
Number:Dimensionless bz_window_r_link "BZ Window R LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:bz_window_r:link"}
DateTime bz_window_r_activity "BZ Window R activity [JS(codegen-display-activity.js):%s]" <time> (g_all_activity) {channel="mqtt:topic:openhab:bz_window_r:activity"}
Contact bz_window_r_contact "BZ Window R [%s]" <door> (g_all_contact,bz_windows_contact) {channel="mqtt:topic:openhab:bz_window_r:contact"}
Number:Dimensionless bz_window_r_battery "BZ Window R  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:bz_window_r:battery"}
// BZ Towel Heater (0x6cfd22fffe1cb2bc)
// INSPELNING smart plug (E2206) / https://www.zigbee2mqtt.io/devices/E2206.html
Switch bz_towel_heater_ota "BZ Towel Heater OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:bz_towel_heater:ota"}
Number:Dimensionless bz_towel_heater_link "BZ Towel Heater LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:bz_towel_heater:link"}
Switch bz_towel_heater_sw "BZ Towel Heater" <light> (g_all_sw) {channel="mqtt:topic:openhab:bz_towel_heater:state", expire="90m,command=OFF" [ignoreStateUpdates="true"]}
Number:ElectricPotential bz_towel_heater_ac_voltage "BZ Towel Heater [%.1f V]" <energy> (g_all_ac_voltage) {channel="mqtt:topic:openhab:bz_towel_heater:ac_voltage"}
Number:ElectricCurrent bz_towel_heater_ac_current "BZ Towel Heater [%.2f A]" <energy> (g_all_ac_current) {channel="mqtt:topic:openhab:bz_towel_heater:ac_current"}
Number:Power bz_towel_heater_ac_power "BZ Towel Heater [%.1f W]" <energy> (g_all_ac_power) {channel="mqtt:topic:openhab:bz_towel_heater:ac_power"}
Number:Energy bz_towel_heater_ac_energy "BZ Towel Heater [%.1f kWh]" <energy> (g_all_ac_energy) {channel="mqtt:topic:openhab:bz_towel_heater:ac_energy"}
// BZ leak (0x8c65a3fffe70093b)
// BADRING water leakage sensor (E2202) / https://www.zigbee2mqtt.io/devices/E2202.html
Switch bz_leak_lowbatt "BZ leak BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:bz_leak:battery_low"}
Switch bz_leak_ota "BZ leak OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:bz_leak:ota"}
Number:Dimensionless bz_leak_link "BZ leak LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:bz_leak:link"}
DateTime bz_leak_activity "BZ leak activity [JS(codegen-display-activity.js):%s]" <time> (g_all_activity) {channel="mqtt:topic:openhab:bz_leak:activity"}
Switch bz_leak_leak "BZ leak [%s]" <flow> (g_all_leak) {channel="mqtt:topic:openhab:bz_leak:leak"}
Number:Dimensionless bz_leak_battery "BZ leak  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:bz_leak:battery"}
// KS Main (0x588e81fffefb217b)
// Livarno Home Lux ceiling light (14147206L) / https://www.zigbee2mqtt.io/devices/14147206L.html#lidl-14147206l
Dimmer ks_up_light_dim "KS Main DIM [%d %%]" <light> (g_all_dim) {channel="mqtt:topic:openhab:ks_up_light:dim"}
Dimmer ks_up_light_dim_fast "KS Main DIM-F [%d %%]" (g_all_dim_fast) {channel="mqtt:topic:openhab:ks_up_light:dim_fast"}
Dimmer ks_up_light_ct "KS Main CT [JS(codegen-mired.js): %s]" <light> (g_all_ct,ks_light_ct,astro_color_light_ct) {channel="mqtt:topic:openhab:ks_up_light:ct"}
Switch ks_up_light_ota "KS Main OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:ks_up_light:ota"}
Number:Dimensionless ks_up_light_link "KS Main LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:ks_up_light:link"}
Switch ks_up_light_sw "KS Main" <light> (g_all_sw,all_light,eg_light,ks_light) {channel="mqtt:topic:openhab:ks_up_light:state"}
// KS Climate (0xa4c1386df39045f6)
// TuYa Temperature & humidity sensor / https://www.zigbee2mqtt.io/devices/TS0201.html
Switch ks_climate_lowbatt "KS Climate BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:ks_climate:battery_low"}
Switch ks_climate_ota "KS Climate OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:ks_climate:ota"}
Number:Dimensionless ks_climate_link "KS Climate LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:ks_climate:link"}
DateTime ks_climate_activity "KS Climate activity [JS(codegen-display-activity.js):%s]" <time> (g_all_activity) {channel="mqtt:topic:openhab:ks_climate:activity"}
Number:Temperature ks_climate_temperature "KS Climate temp [%.0f %unit%]" <temperature> (g_all_temperature,ks_hz_temperature_sensor) {channel="mqtt:topic:openhab:ks_climate:temperature"}
Number:Dimensionless ks_climate_humidity "KS Climate humidity  [%.0f %%]" <humidity> (g_all_humidity) {channel="mqtt:topic:openhab:ks_climate:humidity"}
Number:Dimensionless ks_climate_battery "KS Climate  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:ks_climate:battery"}
// KS Night lamp (0x14b457fffe6383e5)
// TRADFRI LED bulb E14/E26/E27 600 lumen, dimmable, color, opal white (ebay) / https://www.zigbee2mqtt.io/devices/LED1624G9.html
Dimmer ks_light_night_dim "KS Night lamp DIM [%d %%]" <light> (g_all_dim) {channel="mqtt:topic:openhab:ks_light_night:dim"}
Dimmer ks_light_night_dim_fast "KS Night lamp DIM-F [%d %%]" (g_all_dim_fast) {channel="mqtt:topic:openhab:ks_light_night:dim_fast"}
Dimmer ks_light_night_ct "KS Night lamp CT [JS(codegen-mired.js): %s]" <light> (g_all_ct) {channel="mqtt:topic:openhab:ks_light_night:ct"}
Color ks_light_night_color "KS Night lamp Color" <colorwheel> (g_all_color) {channel="mqtt:topic:openhab:ks_light_night:color"}
String ks_light_night_color_mode "KS Night lamp Color mode" <colorwheel> (g_all_color_mode) {channel="mqtt:topic:openhab:ks_light_night:color_mode"}
Switch ks_light_night_ota "KS Night lamp OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:ks_light_night:ota"}
Number:Dimensionless ks_light_night_link "KS Night lamp LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:ks_light_night:link"}
Switch ks_light_night_sw "KS Night lamp" <light> (g_all_sw,all_light,eg_light,ks_light) {channel="mqtt:topic:openhab:ks_light_night:state"}
// KS Window 2 (0xa4c138f1bf27592c)
// TuYa Rechargeable Zigbee contact sensor (SNTZ007) / https://www.zigbee2mqtt.io/devices/SNTZ007.html
Switch ks_window_2_lowbatt "KS Window 2 BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:ks_window_2:battery_low"}
Switch ks_window_2_ota "KS Window 2 OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:ks_window_2:ota"}
Number:Dimensionless ks_window_2_link "KS Window 2 LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:ks_window_2:link"}
DateTime ks_window_2_activity "KS Window 2 activity [JS(codegen-display-activity.js):%s]" <time> (g_all_activity) {channel="mqtt:topic:openhab:ks_window_2:activity"}
Contact ks_window_2_contact "KS Window 2 [%s]" <door> (g_all_contact,ks_windows_contact) {channel="mqtt:topic:openhab:ks_window_2:contact"}
Number:Dimensionless ks_window_2_battery "KS Window 2  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:ks_window_2:battery"}
// KS Main remote (0x9035eafffee1ba1d)
// IKEA STYRBAR remote control N2 / https://www.zigbee2mqtt.io/devices/E2001_E2002.html
Dimmer ks_light_switch_dim "KS Main remote DIM [%d %%]" <light> (g_all_dim) {channel="mqtt:topic:openhab:ks_light_switch:dim"}
Switch ks_light_switch_lowbatt "KS Main remote BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:ks_light_switch:battery_low"}
Switch ks_light_switch_ota "KS Main remote OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:ks_light_switch:ota"}
Number:Dimensionless ks_light_switch_link "KS Main remote LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:ks_light_switch:link"}
Number:Dimensionless ks_light_switch_battery "KS Main remote  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:ks_light_switch:battery"}
// WZ Climate (0xa4c1386a03a53708)
// TuYa Temperature & humidity sensor / https://www.zigbee2mqtt.io/devices/TS0201.html
Switch wz_climate_lowbatt "WZ Climate BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:wz_climate:battery_low"}
Switch wz_climate_ota "WZ Climate OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:wz_climate:ota"}
Number:Dimensionless wz_climate_link "WZ Climate LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:wz_climate:link"}
DateTime wz_climate_activity "WZ Climate activity [JS(codegen-display-activity.js):%s]" <time> (g_all_activity) {channel="mqtt:topic:openhab:wz_climate:activity"}
Number:Temperature wz_climate_temperature "WZ Climate temp [%.0f %unit%]" <temperature> (g_all_temperature,wz_hz_temperature_sensor) {channel="mqtt:topic:openhab:wz_climate:temperature"}
Number:Dimensionless wz_climate_humidity "WZ Climate humidity  [%.0f %%]" <humidity> (g_all_humidity) {channel="mqtt:topic:openhab:wz_climate:humidity"}
Number:Dimensionless wz_climate_battery "WZ Climate  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:wz_climate:battery"}
// Bedroom main remote (0x003c84fffe16f988)
// IKEA STYRBAR remote control N2 / https://www.zigbee2mqtt.io/devices/E2001_E2002.html
Dimmer wz_up_remote_dim "Bedroom main remote DIM [%d %%]" <light> (g_all_dim) {channel="mqtt:topic:openhab:wz_up_remote:dim"}
Switch wz_up_remote_lowbatt "Bedroom main remote BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:wz_up_remote:battery_low"}
Switch wz_up_remote_ota "Bedroom main remote OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:wz_up_remote:ota"}
Number:Dimensionless wz_up_remote_link "Bedroom main remote LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:wz_up_remote:link"}
Number:Dimensionless wz_up_remote_battery "Bedroom main remote  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:wz_up_remote:battery"}
// WZ Main (0x588e81fffefe9a05)
// Livarno Home Lux ceiling light (14147206L) / https://www.zigbee2mqtt.io/devices/14147206L.html#lidl-14147206l
Dimmer wz_up_light_dim "WZ Main DIM [%d %%]" <light> (g_all_dim,wz_light_dim) {channel="mqtt:topic:openhab:wz_up_light:dim"}
Dimmer wz_up_light_dim_fast "WZ Main DIM-F [%d %%]" (g_all_dim_fast) {channel="mqtt:topic:openhab:wz_up_light:dim_fast"}
Dimmer wz_up_light_ct "WZ Main CT [JS(codegen-mired.js): %s]" <light> (g_all_ct,wz_light_ct,astro_color_light_ct) {channel="mqtt:topic:openhab:wz_up_light:ct"}
Switch wz_up_light_ota "WZ Main OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:wz_up_light:ota"}
Number:Dimensionless wz_up_light_link "WZ Main LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:wz_up_light:link"}
Switch wz_up_light_sw "WZ Main" <light> (g_all_sw,all_light,eg_light,wz_light) {channel="mqtt:topic:openhab:wz_up_light:state"}
// WZ Julia stand (0x5cc7c1fffe4c4a46)
// TRADFRI LED bulb E14/E26/E27 600 lumen, dimmable, color, opal white (ebay) / https://www.zigbee2mqtt.io/devices/LED1624G9.html
Dimmer wz_julia_stand_light_dim "WZ Julia stand DIM [%d %%]" <light> (g_all_dim) {channel="mqtt:topic:openhab:wz_julia_stand_light:dim"}
Dimmer wz_julia_stand_light_dim_fast "WZ Julia stand DIM-F [%d %%]" (g_all_dim_fast) {channel="mqtt:topic:openhab:wz_julia_stand_light:dim_fast"}
Dimmer wz_julia_stand_light_ct "WZ Julia stand CT [JS(codegen-mired.js): %s]" <light> (g_all_ct,wz_light_ct,astro_color_light_ct) {channel="mqtt:topic:openhab:wz_julia_stand_light:ct"}
Color wz_julia_stand_light_color "WZ Julia stand Color" <colorwheel> (g_all_color) {channel="mqtt:topic:openhab:wz_julia_stand_light:color"}
String wz_julia_stand_light_color_mode "WZ Julia stand Color mode" <colorwheel> (g_all_color_mode) {channel="mqtt:topic:openhab:wz_julia_stand_light:color_mode"}
Switch wz_julia_stand_light_ota "WZ Julia stand OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:wz_julia_stand_light:ota"}
Number:Dimensionless wz_julia_stand_light_link "WZ Julia stand LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:wz_julia_stand_light:link"}
Switch wz_julia_stand_light_sw "WZ Julia stand" <light> (g_all_sw,all_light,eg_light,wz_light) {channel="mqtt:topic:openhab:wz_julia_stand_light:state"}
// WZ Julia desktop (0xec1bbdfffe1b89d1)
// IKEA TRADFRI LED bulb E27 1000 lumen, dimmable, white spectrum, opal white (LED1732G11) / https://www.zigbee2mqtt.io/devices/LED1732G11.html
Dimmer wz_julia_desktop_light_dim "WZ Julia desktop DIM [%d %%]" <light> (g_all_dim) {channel="mqtt:topic:openhab:wz_julia_desktop_light:dim"}
Dimmer wz_julia_desktop_light_dim_fast "WZ Julia desktop DIM-F [%d %%]" (g_all_dim_fast) {channel="mqtt:topic:openhab:wz_julia_desktop_light:dim_fast"}
Dimmer wz_julia_desktop_light_ct "WZ Julia desktop CT [JS(codegen-mired.js): %s]" <light> (g_all_ct,wz_light_ct,astro_color_light_ct) {channel="mqtt:topic:openhab:wz_julia_desktop_light:ct"}
Switch wz_julia_desktop_light_ota "WZ Julia desktop OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:wz_julia_desktop_light:ota"}
Number:Dimensionless wz_julia_desktop_light_link "WZ Julia desktop LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:wz_julia_desktop_light:link"}
Switch wz_julia_desktop_light_sw "WZ Julia desktop" <light> (g_all_sw,all_light,eg_light,wz_light) {channel="mqtt:topic:openhab:wz_julia_desktop_light:state"}
// WZ Julia remote (0x1c34f1fffe7ccde1)
// IKEA STYRBAR remote control N2 / https://www.zigbee2mqtt.io/devices/E2001_E2002.html
Dimmer wz_julia_remote_dim "WZ Julia remote DIM [%d %%]" <light> (g_all_dim) {channel="mqtt:topic:openhab:wz_julia_remote:dim"}
Switch wz_julia_remote_lowbatt "WZ Julia remote BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:wz_julia_remote:battery_low"}
Switch wz_julia_remote_ota "WZ Julia remote OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:wz_julia_remote:ota"}
Number:Dimensionless wz_julia_remote_link "WZ Julia remote LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:wz_julia_remote:link"}
Number:Dimensionless wz_julia_remote_battery "WZ Julia remote  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:wz_julia_remote:battery"}
// WZ Color Decor (0x8cf681fffef62c85)
// Livarno Lux E14 candle RGB (HG07834B) / https://www.zigbee2mqtt.io/devices/HG07834B.html#lidl-hg07834b
Dimmer wz_light_color_dim "WZ Color Decor DIM [%d %%]" <light> (g_all_dim) {channel="mqtt:topic:openhab:wz_light_color:dim"}
Dimmer wz_light_color_dim_fast "WZ Color Decor DIM-F [%d %%]" (g_all_dim_fast) {channel="mqtt:topic:openhab:wz_light_color:dim_fast"}
Dimmer wz_light_color_ct "WZ Color Decor CT [JS(codegen-mired.js): %s]" <light> (g_all_ct) {channel="mqtt:topic:openhab:wz_light_color:ct"}
Color wz_light_color_color "WZ Color Decor Color" <colorwheel> (g_all_color) {channel="mqtt:topic:openhab:wz_light_color:color"}
String wz_light_color_color_mode "WZ Color Decor Color mode" <colorwheel> (g_all_color_mode) {channel="mqtt:topic:openhab:wz_light_color:color_mode"}
Switch wz_light_color_ota "WZ Color Decor OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:wz_light_color:ota"}
Number:Dimensionless wz_light_color_link "WZ Color Decor LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:wz_light_color:link"}
Switch wz_light_color_sw_proxy "WZ Color Decor proxy" <light> (g_all_sw,all_light,eg_light,wz_light)
Switch wz_light_color_sw "WZ Color Decor" <light> {channel="mqtt:topic:openhab:wz_light_color:state"}
// WZ Decor lamp 1 (0xec1bbdfffe972819)
// IKEA TRADFRI LED bulb E27 WW clear 250 lumen, dimmable (LED1842G3) / https://www.zigbee2mqtt.io/devices/LED1842G3.html
Dimmer wz_declamp_1_dim "WZ Decor lamp 1 DIM [%d %%]" <light> (g_all_dim,wz_light_dim,wz_light_decor_dim) {channel="mqtt:topic:openhab:wz_declamp_1:dim"}
Dimmer wz_declamp_1_dim_fast "WZ Decor lamp 1 DIM-F [%d %%]" (g_all_dim_fast,wz_light_decor_dim_fast) {channel="mqtt:topic:openhab:wz_declamp_1:dim_fast"}
Switch wz_declamp_1_ota "WZ Decor lamp 1 OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:wz_declamp_1:ota"}
Number:Dimensionless wz_declamp_1_link "WZ Decor lamp 1 LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:wz_declamp_1:link"}
Switch wz_declamp_1_sw "WZ Decor lamp 1" <light> (g_all_sw,all_light,eg_light,wz_light,wz_light_decor_sw) {channel="mqtt:topic:openhab:wz_declamp_1:state"}
// WZ Decor lamp 2 (0xec1bbdfffe972203)
// IKEA TRADFRI LED bulb E27 WW clear 250 lumen, dimmable (LED1842G3) / https://www.zigbee2mqtt.io/devices/LED1842G3.html
Dimmer wz_declamp_2_dim "WZ Decor lamp 2 DIM [%d %%]" <light> (g_all_dim,wz_light_dim,wz_light_decor_dim) {channel="mqtt:topic:openhab:wz_declamp_2:dim"}
Dimmer wz_declamp_2_dim_fast "WZ Decor lamp 2 DIM-F [%d %%]" (g_all_dim_fast,wz_light_decor_dim_fast) {channel="mqtt:topic:openhab:wz_declamp_2:dim_fast"}
Switch wz_declamp_2_ota "WZ Decor lamp 2 OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:wz_declamp_2:ota"}
Number:Dimensionless wz_declamp_2_link "WZ Decor lamp 2 LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:wz_declamp_2:link"}
Switch wz_declamp_2_sw "WZ Decor lamp 2" <light> (g_all_sw,all_light,eg_light,wz_light,wz_light_decor_sw) {channel="mqtt:topic:openhab:wz_declamp_2:state"}
// WZ Decor lamp 3 (0xec1bbdfffe91007b)
// IKEA TRADFRI LED bulb E27 WW clear 250 lumen, dimmable (LED1842G3) / https://www.zigbee2mqtt.io/devices/LED1842G3.html
Dimmer wz_declamp_3_dim "WZ Decor lamp 3 DIM [%d %%]" <light> (g_all_dim,wz_light_dim,wz_light_decor_dim) {channel="mqtt:topic:openhab:wz_declamp_3:dim"}
Dimmer wz_declamp_3_dim_fast "WZ Decor lamp 3 DIM-F [%d %%]" (g_all_dim_fast,wz_light_decor_dim_fast) {channel="mqtt:topic:openhab:wz_declamp_3:dim_fast"}
Switch wz_declamp_3_ota "WZ Decor lamp 3 OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:wz_declamp_3:ota"}
Number:Dimensionless wz_declamp_3_link "WZ Decor lamp 3 LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:wz_declamp_3:link"}
Switch wz_declamp_3_sw "WZ Decor lamp 3" <light> (g_all_sw,all_light,eg_light,wz_light,wz_light_decor_sw) {channel="mqtt:topic:openhab:wz_declamp_3:state"}
// WZ Plants light (0x94ec32fffe1f54d0)
// TRETAKT smart plug (E22x4) / https://www.zigbee2mqtt.io/devices/E22x4.html
Switch wz_plant_light_ota "WZ Plants light OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:wz_plant_light:ota"}
Number:Dimensionless wz_plant_light_link "WZ Plants light LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:wz_plant_light:link"}
Switch wz_plant_light_sw "WZ Plants light" <light> (g_all_sw) {channel="mqtt:topic:openhab:wz_plant_light:state"}
// WZ Window 1 (0xa4c13804963f4ccf)
// TuYa Rechargeable Zigbee contact sensor (SNTZ007) / https://www.zigbee2mqtt.io/devices/SNTZ007.html
Switch wz_window_1_lowbatt "WZ Window 1 BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:wz_window_1:battery_low"}
Switch wz_window_1_ota "WZ Window 1 OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:wz_window_1:ota"}
Number:Dimensionless wz_window_1_link "WZ Window 1 LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:wz_window_1:link"}
DateTime wz_window_1_activity "WZ Window 1 activity [JS(codegen-display-activity.js):%s]" <time> (g_all_activity) {channel="mqtt:topic:openhab:wz_window_1:activity"}
Contact wz_window_1_contact "WZ Window 1 [%s]" <door> (g_all_contact,wz_windows_contact) {channel="mqtt:topic:openhab:wz_window_1:contact"}
Number:Dimensionless wz_window_1_battery "WZ Window 1  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:wz_window_1:battery"}
// SZ Climate (sz_climate)
// Petro.ws CO₂ sensor module / https://github.com/petrows/smarthome-co2-module
Number:Dimensionless sz_climate_rssi "SZ Climate RSSI [%.0f]" <network> (g_all_rssi) {channel="mqtt:topic:openhab:sz_climate:rssi"}
String sz_climate_bssid "SZ Climate BSSID [%s]" <network> (g_all_bssid) {channel="mqtt:topic:openhab:sz_climate:bssid"}
DateTime sz_climate_activity "SZ Climate activity [JS(codegen-display-activity.js):%s]" <time> (g_all_activity) {channel="mqtt:topic:openhab:sz_climate:activity"}
Number:Temperature sz_climate_temperature "SZ Climate temp [%.0f %unit%]" <temperature> (g_all_temperature,sz_hz_temperature_sensor) {channel="mqtt:topic:openhab:sz_climate:temperature"}
Number:Dimensionless sz_climate_humidity "SZ Climate humidity  [%.0f %%]" <humidity> (g_all_humidity) {channel="mqtt:topic:openhab:sz_climate:humidity"}
Number:Dimensionless sz_climate_co2 "SZ Climate CO₂ [%d ppm]" <co2> (g_all_co2) {channel="mqtt:topic:openhab:sz_climate:co2"}
Switch sz_climate_co2_led "SZ Climate CO₂ alarm [%s]" <alarm> (g_all_co2_led) {channel="mqtt:topic:openhab:sz_climate:co2_led"}
// SZ Main (0x842e14fffe0eb8a0)
// Livarno Home Lux ceiling light (14147206L) / https://www.zigbee2mqtt.io/devices/14147206L.html#lidl-14147206l
Dimmer sz_up_light_dim "SZ Main DIM [%d %%]" <light> (g_all_dim,sz_light_dim) {channel="mqtt:topic:openhab:sz_up_light:dim"}
Dimmer sz_up_light_dim_fast "SZ Main DIM-F [%d %%]" (g_all_dim_fast) {channel="mqtt:topic:openhab:sz_up_light:dim_fast"}
Dimmer sz_up_light_ct "SZ Main CT [JS(codegen-mired.js): %s]" <light> (g_all_ct,sz_light_ct,sunrise_ct,astro_color_light_ct) {channel="mqtt:topic:openhab:sz_up_light:ct"}
Switch sz_up_light_ota "SZ Main OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:sz_up_light:ota"}
Number:Dimensionless sz_up_light_link "SZ Main LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:sz_up_light:link"}
Switch sz_up_light_sw "SZ Main" <light> (g_all_sw,all_light,eg_light,sz_light) {channel="mqtt:topic:openhab:sz_up_light:state"}
// SZ Main remote (0xb4e3f9fffeb35529)
// IKEA STYRBAR remote control N2 / https://www.zigbee2mqtt.io/devices/E2001_E2002.html
Dimmer sz_up_remote_dim "SZ Main remote DIM [%d %%]" <light> (g_all_dim) {channel="mqtt:topic:openhab:sz_up_remote:dim"}
Switch sz_up_remote_lowbatt "SZ Main remote BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:sz_up_remote:battery_low"}
Switch sz_up_remote_ota "SZ Main remote OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:sz_up_remote:ota"}
Number:Dimensionless sz_up_remote_link "SZ Main remote LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:sz_up_remote:link"}
Number:Dimensionless sz_up_remote_battery "SZ Main remote  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:sz_up_remote:battery"}
// SZ door bedlight remote (0xccccccfffee401f8)
// IKEA TRADFRI ON/OFF switch (E1743) / https://www.zigbee2mqtt.io/devices/E1743.html
Switch sz_door_bed_remote_lowbatt "SZ door bedlight remote BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:sz_door_bed_remote:battery_low"}
Switch sz_door_bed_remote_ota "SZ door bedlight remote OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:sz_door_bed_remote:ota"}
Number:Dimensionless sz_door_bed_remote_link "SZ door bedlight remote LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:sz_door_bed_remote:link"}
Number:Dimensionless sz_door_bed_remote_battery "SZ door bedlight remote  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:sz_door_bed_remote:battery"}
// SZ remote L (0x94deb8fffea8a1f9)
// IKEA STYRBAR remote control N2 / https://www.zigbee2mqtt.io/devices/E2001_E2002.html
Dimmer sz_bed_l_remote_dim "SZ remote L DIM [%d %%]" <light> (g_all_dim) {channel="mqtt:topic:openhab:sz_bed_l_remote:dim"}
Switch sz_bed_l_remote_lowbatt "SZ remote L BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:sz_bed_l_remote:battery_low"}
Switch sz_bed_l_remote_ota "SZ remote L OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:sz_bed_l_remote:ota"}
Number:Dimensionless sz_bed_l_remote_link "SZ remote L LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:sz_bed_l_remote:link"}
Number:Dimensionless sz_bed_l_remote_battery "SZ remote L  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:sz_bed_l_remote:battery"}
// SZ remote R (0x540f57fffe1e420c)
// IKEA STYRBAR remote control N2 / https://www.zigbee2mqtt.io/devices/E2001_E2002.html
Dimmer sz_bed_r_remote_dim "SZ remote R DIM [%d %%]" <light> (g_all_dim) {channel="mqtt:topic:openhab:sz_bed_r_remote:dim"}
Switch sz_bed_r_remote_lowbatt "SZ remote R BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:sz_bed_r_remote:battery_low"}
Switch sz_bed_r_remote_ota "SZ remote R OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:sz_bed_r_remote:ota"}
Number:Dimensionless sz_bed_r_remote_link "SZ remote R LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:sz_bed_r_remote:link"}
Number:Dimensionless sz_bed_r_remote_battery "SZ remote R  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:sz_bed_r_remote:battery"}
// Bedroom curtains remote (0x8cf681fffe36d14e)
// IKEA TRADFRI open/close remote (E1766) / https://www.zigbee2mqtt.io/devices/E1766.html
Switch sz_curtain_remote_lowbatt "Bedroom curtains remote BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:sz_curtain_remote:battery_low"}
Switch sz_curtain_remote_ota "Bedroom curtains remote OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:sz_curtain_remote:ota"}
Number:Dimensionless sz_curtain_remote_link "Bedroom curtains remote LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:sz_curtain_remote:link"}
Number:Dimensionless sz_curtain_remote_battery "Bedroom curtains remote  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:sz_curtain_remote:battery"}
// SZ Bedside drawler (0x287681fffe95cba4)
// IKEA TRADFRI driver for wireless control / https://www.zigbee2mqtt.io/devices/ICPSHC24-10EU-IL-1.html
Dimmer sz_bedside_drawler_light_dim "SZ Bedside drawler DIM [%d %%]" <light> (g_all_dim) {channel="mqtt:topic:openhab:sz_bedside_drawler_light:dim"}
Dimmer sz_bedside_drawler_light_dim_fast "SZ Bedside drawler DIM-F [%d %%]" (g_all_dim_fast) {channel="mqtt:topic:openhab:sz_bedside_drawler_light:dim_fast"}
Switch sz_bedside_drawler_light_ota "SZ Bedside drawler OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:sz_bedside_drawler_light:ota"}
Number:Dimensionless sz_bedside_drawler_light_link "SZ Bedside drawler LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:sz_bedside_drawler_light:link"}
Switch sz_bedside_drawler_light_sw "SZ Bedside drawler" <light> (g_all_sw) {channel="mqtt:topic:openhab:sz_bedside_drawler_light:state"}
// SZ Cabinet (0x0cae5ffffea07d0d)
// IKEA TRADFRI driver for wireless control / https://www.zigbee2mqtt.io/devices/ICPSHC24-10EU-IL-1.html
Dimmer sz_cabinet_light_dim "SZ Cabinet DIM [%d %%]" <light> (g_all_dim) {channel="mqtt:topic:openhab:sz_cabinet_light:dim"}
Dimmer sz_cabinet_light_dim_fast "SZ Cabinet DIM-F [%d %%]" (g_all_dim_fast) {channel="mqtt:topic:openhab:sz_cabinet_light:dim_fast"}
Switch sz_cabinet_light_ota "SZ Cabinet OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:sz_cabinet_light:ota"}
Number:Dimensionless sz_cabinet_light_link "SZ Cabinet LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:sz_cabinet_light:link"}
Switch sz_cabinet_light_sw "SZ Cabinet" <light> (g_all_sw) {channel="mqtt:topic:openhab:sz_cabinet_light:state"}
// SZ Bed L (0x9035eafffe93bfc6)
// TRADFRI bulb E12/E14 WS globe 450/470 lumen, dimmable, white spectrum, opal white / https://www.zigbee2mqtt.io/devices/LED2101G4.html
Dimmer sz_bed_light_l_dim "SZ Bed L DIM [%d %%]" <light> (g_all_dim,sz_light_dim,sz_bed_light_dim) {channel="mqtt:topic:openhab:sz_bed_light_l:dim"}
Dimmer sz_bed_light_l_dim_fast "SZ Bed L DIM-F [%d %%]" (g_all_dim_fast,sz_bed_light_dim_fast) {channel="mqtt:topic:openhab:sz_bed_light_l:dim_fast"}
Dimmer sz_bed_light_l_ct "SZ Bed L CT [JS(codegen-mired.js): %s]" <light> (g_all_ct,sz_light_ct,sz_bed_light_ct,sunrise_ct,astro_color_light_ct) {channel="mqtt:topic:openhab:sz_bed_light_l:ct"}
Switch sz_bed_light_l_ota "SZ Bed L OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:sz_bed_light_l:ota"}
Number:Dimensionless sz_bed_light_l_link "SZ Bed L LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:sz_bed_light_l:link"}
Switch sz_bed_light_l_sw "SZ Bed L" <light> (g_all_sw,all_light,eg_light,sz_light,sz_bed_light_sw) {channel="mqtt:topic:openhab:sz_bed_light_l:state"}
// SZ Bed R (0x94deb8fffeda7949)
// TRADFRI bulb E12/E14 WS globe 450/470 lumen, dimmable, white spectrum, opal white / https://www.zigbee2mqtt.io/devices/LED2101G4.html
Dimmer sz_bed_light_r_dim "SZ Bed R DIM [%d %%]" <light> (g_all_dim,sz_light_dim,sz_bed_light_dim) {channel="mqtt:topic:openhab:sz_bed_light_r:dim"}
Dimmer sz_bed_light_r_dim_fast "SZ Bed R DIM-F [%d %%]" (g_all_dim_fast,sz_bed_light_dim_fast) {channel="mqtt:topic:openhab:sz_bed_light_r:dim_fast"}
Dimmer sz_bed_light_r_ct "SZ Bed R CT [JS(codegen-mired.js): %s]" <light> (g_all_ct,sz_light_ct,sz_bed_light_ct,sunrise_ct,astro_color_light_ct) {channel="mqtt:topic:openhab:sz_bed_light_r:ct"}
Switch sz_bed_light_r_ota "SZ Bed R OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:sz_bed_light_r:ota"}
Number:Dimensionless sz_bed_light_r_link "SZ Bed R LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:sz_bed_light_r:link"}
Switch sz_bed_light_r_sw "SZ Bed R" <light> (g_all_sw,all_light,eg_light,sz_light,sz_bed_light_sw) {channel="mqtt:topic:openhab:sz_bed_light_r:state"}
// SZ Bed Floor (sz_bed_floor_light)
// Tasmota RGB+W dimmer / https://templates.blakadder.com/arilux_LC06.html
Switch sz_bed_floor_light_sw "SZ Bed Floor" <light> (g_all_sw,all_light,sz_light) {channel="mqtt:topic:openhab:sz_bed_floor_light:power"}
Dimmer sz_bed_floor_light_dim "SZ Bed Floor dim" <light> (g_all_dim) {channel="mqtt:topic:openhab:sz_bed_floor_light:dimmer"}
Dimmer sz_bed_floor_light_ct "SZ Bed Floor ct" <light> (g_all_ct) {channel="mqtt:topic:openhab:sz_bed_floor_light:ct"}
Color sz_bed_floor_light_color "SZ Bed Floor color" <light> (g_all_color) {channel="mqtt:topic:openhab:sz_bed_floor_light:hsbcolor"}
Number:Dimensionless sz_bed_floor_light_rssi "SZ Bed Floor RSSI [%.0f]" <network> (g_all_rssi) {channel="mqtt:topic:openhab:sz_bed_floor_light:rssi"}
String sz_bed_floor_light_bssid "SZ Bed Floor BSSID [%s]" <network> (g_all_bssid) {channel="mqtt:topic:openhab:sz_bed_floor_light:bssid"}
DateTime sz_bed_floor_light_activity "SZ Bed Floor activity [JS(codegen-display-activity.js):%s]" <time> (g_all_activity) {channel="mqtt:topic:openhab:sz_bed_floor_light:activity"}
// SZ Window L (0xd44867fffed2e67c)
// PARASOLL Door/Window Sensor (E2013) / https://www.zigbee2mqtt.io/devices/E2013.html
Switch sz_window_l_lowbatt "SZ Window L BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:sz_window_l:battery_low"}
Switch sz_window_l_ota "SZ Window L OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:sz_window_l:ota"}
Number:Dimensionless sz_window_l_link "SZ Window L LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:sz_window_l:link"}
DateTime sz_window_l_activity "SZ Window L activity [JS(codegen-display-activity.js):%s]" <time> (g_all_activity) {channel="mqtt:topic:openhab:sz_window_l:activity"}
Contact sz_window_l_contact "SZ Window L [%s]" <door> (g_all_contact,sz_windows_contact) {channel="mqtt:topic:openhab:sz_window_l:contact"}
Number:Dimensionless sz_window_l_battery "SZ Window L  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:sz_window_l:battery"}
// SZ Window R (0x3c2ef5fffe41fc77)
// PARASOLL Door/Window Sensor (E2013) / https://www.zigbee2mqtt.io/devices/E2013.html
Switch sz_window_r_lowbatt "SZ Window R BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:sz_window_r:battery_low"}
Switch sz_window_r_ota "SZ Window R OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:sz_window_r:ota"}
Number:Dimensionless sz_window_r_link "SZ Window R LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:sz_window_r:link"}
DateTime sz_window_r_activity "SZ Window R activity [JS(codegen-display-activity.js):%s]" <time> (g_all_activity) {channel="mqtt:topic:openhab:sz_window_r:activity"}
Contact sz_window_r_contact "SZ Window R [%s]" <door> (g_all_contact,sz_windows_contact) {channel="mqtt:topic:openhab:sz_window_r:contact"}
Number:Dimensionless sz_window_r_battery "SZ Window R  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:sz_window_r:battery"}
// SZ Bed power (0x6cfd22fffe1a2043)
// INSPELNING smart plug (E2206) / https://www.zigbee2mqtt.io/devices/E2206.html
Switch sz_bed_power_ota "SZ Bed power OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:sz_bed_power:ota"}
Number:Dimensionless sz_bed_power_link "SZ Bed power LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:sz_bed_power:link"}
Switch sz_bed_power_sw "SZ Bed power" <light> (g_all_sw) {channel="mqtt:topic:openhab:sz_bed_power:state"}
Number:ElectricPotential sz_bed_power_ac_voltage "SZ Bed power [%.1f V]" <energy> (g_all_ac_voltage) {channel="mqtt:topic:openhab:sz_bed_power:ac_voltage"}
Number:ElectricCurrent sz_bed_power_ac_current "SZ Bed power [%.2f A]" <energy> (g_all_ac_current) {channel="mqtt:topic:openhab:sz_bed_power:ac_current"}
Number:Power sz_bed_power_ac_power "SZ Bed power [%.1f W]" <energy> (g_all_ac_power) {channel="mqtt:topic:openhab:sz_bed_power:ac_power"}
Number:Energy sz_bed_power_ac_energy "SZ Bed power [%.1f kWh]" <energy> (g_all_ac_energy) {channel="mqtt:topic:openhab:sz_bed_power:ac_energy"}
// KU Climate (0xa4c138f5460e22dd)
// TuYa Temperature & humidity sensor / https://www.zigbee2mqtt.io/devices/TS0201.html
Switch ku_climate_lowbatt "KU Climate BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:ku_climate:battery_low"}
Switch ku_climate_ota "KU Climate OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:ku_climate:ota"}
Number:Dimensionless ku_climate_link "KU Climate LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:ku_climate:link"}
DateTime ku_climate_activity "KU Climate activity [JS(codegen-display-activity.js):%s]" <time> (g_all_activity) {channel="mqtt:topic:openhab:ku_climate:activity"}
Number:Temperature ku_climate_temperature "KU Climate temp [%.0f %unit%]" <temperature> (g_all_temperature,ku_hz_temperature_sensor) {channel="mqtt:topic:openhab:ku_climate:temperature"}
Number:Dimensionless ku_climate_humidity "KU Climate humidity  [%.0f %%]" <humidity> (g_all_humidity) {channel="mqtt:topic:openhab:ku_climate:humidity"}
Number:Dimensionless ku_climate_battery "KU Climate  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:ku_climate:battery"}
// KU Light Button (Spuele) (0x00158d0001e612b9)
// Xiaomi MiJia wireless switch (WXKG01LM) / https://www.zigbee2mqtt.io/devices/WXKG01LM.html
Switch ku_light_switch_spule_lowbatt "KU Light Button (Spuele) BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:ku_light_switch_spule:battery_low"}
Switch ku_light_switch_spule_ota "KU Light Button (Spuele) OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:ku_light_switch_spule:ota"}
Number:Dimensionless ku_light_switch_spule_link "KU Light Button (Spuele) LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:ku_light_switch_spule:link"}
Number:Dimensionless ku_light_switch_spule_battery "KU Light Button (Spuele)  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:ku_light_switch_spule:battery"}
// KU Light Button (Kochfield) (0x680ae2fffeaf18d4)
// IKEA TRADFRI remote control (E1524/E1810) / https://www.zigbee2mqtt.io/devices/E1524_E1810.html
Switch ku_light_switch_kochfeld_lowbatt "KU Light Button (Kochfield) BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:ku_light_switch_kochfeld:battery_low"}
Switch ku_light_switch_kochfeld_ota "KU Light Button (Kochfield) OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:ku_light_switch_kochfeld:ota"}
Number:Dimensionless ku_light_switch_kochfeld_link "KU Light Button (Kochfield) LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:ku_light_switch_kochfeld:link"}
Number:Dimensionless ku_light_switch_kochfeld_battery "KU Light Button (Kochfield)  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:ku_light_switch_kochfeld:battery"}
// KU Light Arbeit (0xec1bbdfffea37757)
// Lidl Silvercrest smart plug (EU, CH, FR, BS, DK) (HG06337) / https://www.zigbee2mqtt.io/devices/HG06337.html
Switch ku_light_arbeitplatte_ota "KU Light Arbeit OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:ku_light_arbeitplatte:ota"}
Number:Dimensionless ku_light_arbeitplatte_link "KU Light Arbeit LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:ku_light_arbeitplatte:link"}
Switch ku_light_arbeitplatte_sw "KU Light Arbeit" <light> (g_all_sw,all_light,eg_light,ku_light,ku_up_light) {channel="mqtt:topic:openhab:ku_light_arbeitplatte:state", expire="3h,command=OFF" [ignoreStateUpdates="true"]}
// KU Light Table SW (0x04cd15fffe789098)
// IKEA STYRBAR remote control N2 / https://www.zigbee2mqtt.io/devices/E2001_E2002.html
Dimmer ku_light_table_switch_dim "KU Light Table SW DIM [%d %%]" <light> (g_all_dim) {channel="mqtt:topic:openhab:ku_light_table_switch:dim"}
Switch ku_light_table_switch_lowbatt "KU Light Table SW BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:ku_light_table_switch:battery_low"}
Switch ku_light_table_switch_ota "KU Light Table SW OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:ku_light_table_switch:ota"}
Number:Dimensionless ku_light_table_switch_link "KU Light Table SW LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:ku_light_table_switch:link"}
Number:Dimensionless ku_light_table_switch_battery "KU Light Table SW  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:ku_light_table_switch:battery"}
// KU Light Table (0xec1bbdfffe4695b5)
// IKEA TRADFRI LED bulb E26/E27 806 lumen, dimmable, warm white (LED1836G9) / https://www.zigbee2mqtt.io/devices/LED1836G9.html
Dimmer ku_light_table_dim "KU Light Table DIM [%d %%]" <light> (g_all_dim,eg_light_auto_dim) {channel="mqtt:topic:openhab:ku_light_table:dim"}
Dimmer ku_light_table_dim_fast "KU Light Table DIM-F [%d %%]" (g_all_dim_fast) {channel="mqtt:topic:openhab:ku_light_table:dim_fast"}
Switch ku_light_table_ota "KU Light Table OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:ku_light_table:ota"}
Number:Dimensionless ku_light_table_link "KU Light Table LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:ku_light_table:link"}
Switch ku_light_table_sw "KU Light Table" <light> (g_all_sw,all_light,eg_light,ku_light,eg_light_auto) {channel="mqtt:topic:openhab:ku_light_table:state"}
// KU Light SW (0xa4c138c9dd85a675)
// TS0601_switch - TuYa 1, 2, 3 or 4 gang switch (Router) / https://www.zigbee2mqtt.io/devices/TS0601_switch.html
Switch ku_main_switch_ota "KU Light SW OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:ku_main_switch:ota"}
Number:Dimensionless ku_main_switch_link "KU Light SW LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:ku_main_switch:link"}
Switch ku_light_switch_haupt_sw "KU Light Haupt (Wall SW)" <light> (g_all_sw,all_light,eg_light,ku_light,ku_up_light) {channel="mqtt:topic:openhab:ku_main_switch:state_left"}
Switch ku_light_switch_arbeit_sw "KU Light Arbeit (Wall SW)" <light> (g_all_sw,all_light,eg_light,ku_light,ku_up_light) {channel="mqtt:topic:openhab:ku_main_switch:state_right", expire="3h,command=OFF" [ignoreStateUpdates="true"]}
// KU Window Door (0xa4c1389dec8b9204)
// TuYa Rechargeable Zigbee contact sensor (SNTZ007) / https://www.zigbee2mqtt.io/devices/SNTZ007.html
Switch ku_window_door_lowbatt "KU Window Door BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:ku_window_door:battery_low"}
Switch ku_window_door_ota "KU Window Door OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:ku_window_door:ota"}
Number:Dimensionless ku_window_door_link "KU Window Door LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:ku_window_door:link"}
DateTime ku_window_door_activity "KU Window Door activity [JS(codegen-display-activity.js):%s]" <time> (g_all_activity) {channel="mqtt:topic:openhab:ku_window_door:activity"}
Contact ku_window_door_contact "KU Window Door [%s]" <door> (g_all_contact,ku_windows_contact) {channel="mqtt:topic:openhab:ku_window_door:contact"}
Number:Dimensionless ku_window_door_battery "KU Window Door  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:ku_window_door:battery"}
// Kitchen leak (0xb0c7defffe640add)
// BADRING water leakage sensor (E2202) / https://www.zigbee2mqtt.io/devices/E2202.html
Switch ku_leak_lowbatt "Kitchen leak BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:ku_leak:battery_low"}
Switch ku_leak_ota "Kitchen leak OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:ku_leak:ota"}
Number:Dimensionless ku_leak_link "Kitchen leak LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:ku_leak:link"}
DateTime ku_leak_activity "Kitchen leak activity [JS(codegen-display-activity.js):%s]" <time> (g_all_activity) {channel="mqtt:topic:openhab:ku_leak:activity"}
Switch ku_leak_leak "Kitchen leak [%s]" <flow> (g_all_leak) {channel="mqtt:topic:openhab:ku_leak:leak"}
Number:Dimensionless ku_leak_battery "Kitchen leak  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:ku_leak:battery"}
// KU up power (0x6cfd22fffe1a4e35)
// INSPELNING smart plug (E2206) / https://www.zigbee2mqtt.io/devices/E2206.html
Switch ku_up_power_ota "KU up power OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:ku_up_power:ota"}
Number:Dimensionless ku_up_power_link "KU up power LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:ku_up_power:link"}
Switch ku_up_power_sw "KU up power" <light> (g_all_sw) {channel="mqtt:topic:openhab:ku_up_power:state"}
Number:ElectricPotential ku_up_power_ac_voltage "KU up power [%.1f V]" <energy> (g_all_ac_voltage) {channel="mqtt:topic:openhab:ku_up_power:ac_voltage"}
Number:ElectricCurrent ku_up_power_ac_current "KU up power [%.2f A]" <energy> (g_all_ac_current) {channel="mqtt:topic:openhab:ku_up_power:ac_current"}
Number:Power ku_up_power_ac_power "KU up power [%.1f W]" <energy> (g_all_ac_power) {channel="mqtt:topic:openhab:ku_up_power:ac_power"}
Number:Energy ku_up_power_ac_energy "KU up power [%.1f kWh]" <energy> (g_all_ac_energy) {channel="mqtt:topic:openhab:ku_up_power:ac_energy"}
// Treppe Door sensor (0xccccccfffed82b91)
// TuYa Rechargeable Zigbee contact sensor (SNTZ007) / https://www.zigbee2mqtt.io/devices/SNTZ007.html
Switch tr_door_sensor_lowbatt "Treppe Door sensor BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:tr_door_sensor:battery_low"}
Switch tr_door_sensor_ota "Treppe Door sensor OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:tr_door_sensor:ota"}
Number:Dimensionless tr_door_sensor_link "Treppe Door sensor LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:tr_door_sensor:link"}
DateTime tr_door_sensor_activity "Treppe Door sensor activity [JS(codegen-display-activity.js):%s]" <time> (g_all_activity) {channel="mqtt:topic:openhab:tr_door_sensor:activity"}
Contact tr_door_sensor_contact "Treppe Door sensor [%s]" <door> (g_all_contact) {channel="mqtt:topic:openhab:tr_door_sensor:contact"}
Number:Dimensionless tr_door_sensor_battery "Treppe Door sensor  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:tr_door_sensor:battery"}
// Treppe Up switch (0x680ae2fffe1a92f3)
// IKEA TRADFRI ON/OFF switch (E1743) / https://www.zigbee2mqtt.io/devices/E1743.html
Switch tr_up_switch_lowbatt "Treppe Up switch BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:tr_up_switch:battery_low"}
Switch tr_up_switch_ota "Treppe Up switch OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:tr_up_switch:ota"}
Number:Dimensionless tr_up_switch_link "Treppe Up switch LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:tr_up_switch:link"}
Number:Dimensionless tr_up_switch_battery "Treppe Up switch  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:tr_up_switch:battery"}
// Treppe Down switch (0x04cd15fffe75c518)
// IKEA STYRBAR remote control N2 / https://www.zigbee2mqtt.io/devices/E2001_E2002.html
Dimmer tr_down_switch_dim "Treppe Down switch DIM [%d %%]" <light> (g_all_dim) {channel="mqtt:topic:openhab:tr_down_switch:dim"}
Switch tr_down_switch_lowbatt "Treppe Down switch BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:tr_down_switch:battery_low"}
Switch tr_down_switch_ota "Treppe Down switch OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:tr_down_switch:ota"}
Number:Dimensionless tr_down_switch_link "Treppe Down switch LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:tr_down_switch:link"}
Number:Dimensionless tr_down_switch_battery "Treppe Down switch  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:tr_down_switch:battery"}
// Treppe Up light (0xd0cf5efffee892b0)
// IKEA TRADFRI LED bulb E27 1000 lumen, dimmable, white spectrum, opal white (LED1732G11) / https://www.zigbee2mqtt.io/devices/LED1732G11.html
Dimmer tr_up_light_dim "Treppe Up light DIM [%d %%]" <light> (g_all_dim,tr_light_dim) {channel="mqtt:topic:openhab:tr_up_light:dim"}
Dimmer tr_up_light_dim_fast "Treppe Up light DIM-F [%d %%]" (g_all_dim_fast) {channel="mqtt:topic:openhab:tr_up_light:dim_fast"}
Dimmer tr_up_light_ct "Treppe Up light CT [JS(codegen-mired.js): %s]" <light> (g_all_ct,tr_light_ct,astro_color_light_ct) {channel="mqtt:topic:openhab:tr_up_light:ct"}
Switch tr_up_light_ota "Treppe Up light OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:tr_up_light:ota"}
Number:Dimensionless tr_up_light_link "Treppe Up light LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:tr_up_light:link"}
Switch tr_up_light_sw "Treppe Up light" <light> (g_all_sw,all_light,tr_light,kg_light,kg_light_auto) {channel="mqtt:topic:openhab:tr_up_light:state", expire="1h,command=OFF" [ignoreStateUpdates="true"]}
// Treppe Down light (0x04cd15fffedb31f7)
// Livarno Home LED ceiling light (HG08008) / https://www.zigbee2mqtt.io/devices/HG08008.html#lidl-hg08008
Dimmer tr_down_light_dim "Treppe Down light DIM [%d %%]" <light> (g_all_dim,tr_light_dim) {channel="mqtt:topic:openhab:tr_down_light:dim"}
Dimmer tr_down_light_dim_fast "Treppe Down light DIM-F [%d %%]" (g_all_dim_fast) {channel="mqtt:topic:openhab:tr_down_light:dim_fast"}
Dimmer tr_down_light_ct "Treppe Down light CT [JS(codegen-mired.js): %s]" <light> (g_all_ct,tr_light_ct,astro_color_light_ct) {channel="mqtt:topic:openhab:tr_down_light:ct"}
Color tr_down_light_color "Treppe Down light Color" <colorwheel> (g_all_color) {channel="mqtt:topic:openhab:tr_down_light:color"}
String tr_down_light_color_mode "Treppe Down light Color mode" <colorwheel> (g_all_color_mode) {channel="mqtt:topic:openhab:tr_down_light:color_mode"}
Switch tr_down_light_ota "Treppe Down light OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:tr_down_light:ota"}
Number:Dimensionless tr_down_light_link "Treppe Down light LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:tr_down_light:link"}
Switch tr_down_light_sw_proxy "Treppe Down light proxy" <light> (g_all_sw,all_light,tr_light,kg_light,kg_light_auto)
Switch tr_down_light_sw "Treppe Down light" <light> {channel="mqtt:topic:openhab:tr_down_light:state", expire="1h,command=OFF" [ignoreStateUpdates="true"]}
// Treppe motion (0xbc33acfffe872049)
// IKEA TRADFRI motion sensor (E1525/E1745) / https://www.zigbee2mqtt.io/devices/E1525_E1745.html
Switch tr_motion_lowbatt "Treppe motion BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:tr_motion:battery_low"}
Switch tr_motion_ota "Treppe motion OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:tr_motion:ota"}
Number:Dimensionless tr_motion_link "Treppe motion LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:tr_motion:link"}
DateTime tr_motion_activity "Treppe motion activity [JS(codegen-display-activity.js):%s]" <time> (g_all_activity) {channel="mqtt:topic:openhab:tr_motion:activity"}
Switch tr_motion_occupancy "Treppe motion [%s]" <motion> (g_all_occupancy) {channel="mqtt:topic:openhab:tr_motion:occupancy"}
Number:Dimensionless tr_motion_battery "Treppe motion  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:tr_motion:battery"}
// Treppe climate (0xa4c1383cc92cbbd2)
// TuYa Temperature & humidity sensor / https://www.zigbee2mqtt.io/devices/TS0201.html
Switch tr_climate_lowbatt "Treppe climate BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:tr_climate:battery_low"}
Switch tr_climate_ota "Treppe climate OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:tr_climate:ota"}
Number:Dimensionless tr_climate_link "Treppe climate LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:tr_climate:link"}
DateTime tr_climate_activity "Treppe climate activity [JS(codegen-display-activity.js):%s]" <time> (g_all_activity) {channel="mqtt:topic:openhab:tr_climate:activity"}
Number:Temperature tr_climate_temperature "Treppe climate temp [%.0f %unit%]" <temperature> (g_all_temperature) {channel="mqtt:topic:openhab:tr_climate:temperature"}
Number:Dimensionless tr_climate_humidity "Treppe climate humidity  [%.0f %%]" <humidity> (g_all_humidity) {channel="mqtt:topic:openhab:tr_climate:humidity"}
Number:Dimensionless tr_climate_battery "Treppe climate  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:tr_climate:battery"}
// KG Window (Cabinet) (0xccccccfffed82ba3)
// TuYa Rechargeable Zigbee contact sensor (SNTZ007) / https://www.zigbee2mqtt.io/devices/SNTZ007.html
Switch kg_window_1_lowbatt "KG Window (Cabinet) BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:kg_window_1:battery_low"}
Switch kg_window_1_ota "KG Window (Cabinet) OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:kg_window_1:ota"}
Number:Dimensionless kg_window_1_link "KG Window (Cabinet) LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:kg_window_1:link"}
DateTime kg_window_1_activity "KG Window (Cabinet) activity [JS(codegen-display-activity.js):%s]" <time> (g_all_activity) {channel="mqtt:topic:openhab:kg_window_1:activity"}
Contact kg_window_1_contact "KG Window (Cabinet) [%s]" <door> (g_all_contact,kg_windows_contact) {channel="mqtt:topic:openhab:kg_window_1:contact"}
Number:Dimensionless kg_window_1_battery "KG Window (Cabinet)  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:kg_window_1:battery"}
// KG Window (Hobbyraum) (0x6cfd22fffeb63428)
// PARASOLL Door/Window Sensor (E2013) / https://www.zigbee2mqtt.io/devices/E2013.html
Switch kg_window_2_lowbatt "KG Window (Hobbyraum) BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:kg_window_2:battery_low"}
Switch kg_window_2_ota "KG Window (Hobbyraum) OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:kg_window_2:ota"}
Number:Dimensionless kg_window_2_link "KG Window (Hobbyraum) LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:kg_window_2:link"}
DateTime kg_window_2_activity "KG Window (Hobbyraum) activity [JS(codegen-display-activity.js):%s]" <time> (g_all_activity) {channel="mqtt:topic:openhab:kg_window_2:activity"}
Contact kg_window_2_contact "KG Window (Hobbyraum) [%s]" <door> (g_all_contact,kg_windows_contact,windows_skip_off) {channel="mqtt:topic:openhab:kg_window_2:contact"}
Number:Dimensionless kg_window_2_battery "KG Window (Hobbyraum)  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:kg_window_2:battery"}
// KG Cabinet door (0xa4c138312d2c455f)
// TuYa Rechargeable Zigbee contact sensor (SNTZ007) / https://www.zigbee2mqtt.io/devices/SNTZ007.html
Switch kg_cabinet_door_lowbatt "KG Cabinet door BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:kg_cabinet_door:battery_low"}
Switch kg_cabinet_door_ota "KG Cabinet door OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:kg_cabinet_door:ota"}
Number:Dimensionless kg_cabinet_door_link "KG Cabinet door LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:kg_cabinet_door:link"}
DateTime kg_cabinet_door_activity "KG Cabinet door activity [JS(codegen-display-activity.js):%s]" <time> (g_all_activity) {channel="mqtt:topic:openhab:kg_cabinet_door:activity"}
Contact kg_cabinet_door_contact "KG Cabinet door [%s]" <door> (g_all_contact,kg_windows_contact,windows_skip_off) {channel="mqtt:topic:openhab:kg_cabinet_door:contact"}
Number:Dimensionless kg_cabinet_door_battery "KG Cabinet door  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:kg_cabinet_door:battery"}
// KG Climate (kg_climate)
// PWS room sensor v2 / https://oshwlab.com/petrows/wemos-d1-room-sensor
Switch kg_climate_led_r "KG Climate Led R" <light> (g_all_sw) {channel="mqtt:topic:openhab:kg_climate:power1"}
Switch kg_climate_led_y "KG Climate Led Y" <light> (g_all_sw) {channel="mqtt:topic:openhab:kg_climate:power2"}
Switch kg_climate_led_g "KG Climate Led G" <light> (g_all_sw) {channel="mqtt:topic:openhab:kg_climate:power3"}
Number:Dimensionless kg_climate_co2 "KG Climate CO₂ [%d ppm]" <co2> (g_all_co2) {channel="mqtt:topic:openhab:kg_climate:co2"}
Number:Temperature kg_climate_temperature "KG Climate temp [%.0f %unit%]" <temperature> (g_all_temperature) {channel="mqtt:topic:openhab:kg_climate:temperature"}
Number:Dimensionless kg_climate_humidity "KG Climate humidity  [%.0f %%]" <humidity> (g_all_humidity) {channel="mqtt:topic:openhab:kg_climate:humidity"}
Number:Temperature kg_climate_dewpoint "KG Climate dewpoint [%.0f %unit%]" <temperature> (g_all_dewpoint) {channel="mqtt:topic:openhab:kg_climate:dewpoint"}
Number:Pressure kg_climate_pressure "KG Climate pressure  [%.0f %unit%]" <pressure> (g_all_pressure) {channel="mqtt:topic:openhab:kg_climate:pressure"}
Number:Dimensionless kg_climate_rssi "KG Climate RSSI [%.0f]" <network> (g_all_rssi) {channel="mqtt:topic:openhab:kg_climate:rssi"}
String kg_climate_bssid "KG Climate BSSID [%s]" <network> (g_all_bssid) {channel="mqtt:topic:openhab:kg_climate:bssid"}
DateTime kg_climate_activity "KG Climate activity [JS(codegen-display-activity.js):%s]" <time> (g_all_activity) {channel="mqtt:topic:openhab:kg_climate:activity"}
Number:Temperature kg_climate_temperature "KG Climate temp [%.0f %unit%]" <temperature> (g_all_temperature,kg_hz_temperature_sensor) {channel="mqtt:topic:openhab:kg_climate:temperature"}
Number:Temperature kg_climate_dewpoint "KG Climate dewpoint [%.0f %unit%]" <temperature> (g_all_dewpoint) {channel="mqtt:topic:openhab:kg_climate:dewpoint"}
Number:Dimensionless kg_climate_humidity "KG Climate humidity  [%.0f %%]" <humidity> (g_all_humidity) {channel="mqtt:topic:openhab:kg_climate:humidity"}
Number:Pressure kg_climate_pressure "KG Climate pressure  [%.0f %unit%]" <pressure> (g_all_pressure) {channel="mqtt:topic:openhab:kg_climate:pressure"}
Number:Dimensionless kg_climate_co2 "KG Climate CO₂ [%d ppm]" <co2> (g_all_co2) {channel="mqtt:topic:openhab:kg_climate:co2"}
// Petro Desktop up light 1 (0x04cd15fffe35f24e)
// IKEA TRADFRI LED bulb E27 1000 lumen, dimmable, white spectrum, opal white (LED1732G11) / https://www.zigbee2mqtt.io/devices/LED1732G11.html
Dimmer desktop_petro_up_light_1_dim "Petro Desktop up light 1 DIM [%d %%]" <light> (g_all_dim,kg_light_desktop_dim) {channel="mqtt:topic:openhab:desktop_petro_up_light_1:dim"}
Dimmer desktop_petro_up_light_1_dim_fast "Petro Desktop up light 1 DIM-F [%d %%]" (g_all_dim_fast) {channel="mqtt:topic:openhab:desktop_petro_up_light_1:dim_fast"}
Dimmer desktop_petro_up_light_1_ct "Petro Desktop up light 1 CT [JS(codegen-mired.js): %s]" <light> (g_all_ct,astro_color_light_ct,kg_light_desktop_color) {channel="mqtt:topic:openhab:desktop_petro_up_light_1:ct"}
Switch desktop_petro_up_light_1_ota "Petro Desktop up light 1 OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:desktop_petro_up_light_1:ota"}
Number:Dimensionless desktop_petro_up_light_1_link "Petro Desktop up light 1 LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:desktop_petro_up_light_1:link"}
Switch desktop_petro_up_light_1_sw "Petro Desktop up light 1" <light> (g_all_sw,all_light,kg_light,kg_light_hobbyraum,kg_light_desktop) {channel="mqtt:topic:openhab:desktop_petro_up_light_1:state"}
// Petro Desktop up light 2 (0x04cd15fffe6bf002)
// IKEA TRADFRI LED bulb E27 1000 lumen, dimmable, white spectrum, opal white (LED1732G11) / https://www.zigbee2mqtt.io/devices/LED1732G11.html
Dimmer desktop_petro_up_light_2_dim "Petro Desktop up light 2 DIM [%d %%]" <light> (g_all_dim,kg_light_desktop_dim) {channel="mqtt:topic:openhab:desktop_petro_up_light_2:dim"}
Dimmer desktop_petro_up_light_2_dim_fast "Petro Desktop up light 2 DIM-F [%d %%]" (g_all_dim_fast) {channel="mqtt:topic:openhab:desktop_petro_up_light_2:dim_fast"}
Dimmer desktop_petro_up_light_2_ct "Petro Desktop up light 2 CT [JS(codegen-mired.js): %s]" <light> (g_all_ct,astro_color_light_ct,kg_light_desktop_color) {channel="mqtt:topic:openhab:desktop_petro_up_light_2:ct"}
Switch desktop_petro_up_light_2_ota "Petro Desktop up light 2 OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:desktop_petro_up_light_2:ota"}
Number:Dimensionless desktop_petro_up_light_2_link "Petro Desktop up light 2 LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:desktop_petro_up_light_2:link"}
Switch desktop_petro_up_light_2_sw "Petro Desktop up light 2" <light> (g_all_sw,all_light,kg_light,kg_light_hobbyraum,kg_light_desktop) {channel="mqtt:topic:openhab:desktop_petro_up_light_2:state"}
// Petro Desktop up light 3 (0x04cd15fffe73ecb6)
// IKEA TRADFRI LED bulb E27 1000 lumen, dimmable, white spectrum, opal white (LED1732G11) / https://www.zigbee2mqtt.io/devices/LED1732G11.html
Dimmer desktop_petro_up_light_3_dim "Petro Desktop up light 3 DIM [%d %%]" <light> (g_all_dim,kg_light_desktop_dim) {channel="mqtt:topic:openhab:desktop_petro_up_light_3:dim"}
Dimmer desktop_petro_up_light_3_dim_fast "Petro Desktop up light 3 DIM-F [%d %%]" (g_all_dim_fast) {channel="mqtt:topic:openhab:desktop_petro_up_light_3:dim_fast"}
Dimmer desktop_petro_up_light_3_ct "Petro Desktop up light 3 CT [JS(codegen-mired.js): %s]" <light> (g_all_ct,astro_color_light_ct,kg_light_desktop_color) {channel="mqtt:topic:openhab:desktop_petro_up_light_3:ct"}
Switch desktop_petro_up_light_3_ota "Petro Desktop up light 3 OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:desktop_petro_up_light_3:ota"}
Number:Dimensionless desktop_petro_up_light_3_link "Petro Desktop up light 3 LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:desktop_petro_up_light_3:link"}
Switch desktop_petro_up_light_3_sw "Petro Desktop up light 3" <light> (g_all_sw,all_light,kg_light,kg_light_hobbyraum,kg_light_desktop) {channel="mqtt:topic:openhab:desktop_petro_up_light_3:state"}
// Petro Desktop light (0xccccccfffed8ef9d)
// IKEA TRADFRI LED bulb E27 806 lumen, dimmable, white spectrum, clear (LED1736G9) / https://www.zigbee2mqtt.io/devices/LED1736G9.html
Dimmer desktop_petro_light_dim "Petro Desktop light DIM [%d %%]" <light> (g_all_dim) {channel="mqtt:topic:openhab:desktop_petro_light:dim"}
Dimmer desktop_petro_light_dim_fast "Petro Desktop light DIM-F [%d %%]" (g_all_dim_fast) {channel="mqtt:topic:openhab:desktop_petro_light:dim_fast"}
Dimmer desktop_petro_light_ct "Petro Desktop light CT [JS(codegen-mired.js): %s]" <light> (g_all_ct,astro_color_light_ct) {channel="mqtt:topic:openhab:desktop_petro_light:ct"}
Switch desktop_petro_light_ota "Petro Desktop light OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:desktop_petro_light:ota"}
Number:Dimensionless desktop_petro_light_link "Petro Desktop light LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:desktop_petro_light:link"}
Switch desktop_petro_light_sw "Petro Desktop light" <light> (g_all_sw,all_light,kg_light,kg_light_hobbyraum) {channel="mqtt:topic:openhab:desktop_petro_light:state"}
// Petro Desktop power (0x6cfd22fffe1a433d)
// INSPELNING smart plug (E2206) / https://www.zigbee2mqtt.io/devices/E2206.html
Switch desktop_petro_power_ota "Petro Desktop power OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:desktop_petro_power:ota"}
Number:Dimensionless desktop_petro_power_link "Petro Desktop power LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:desktop_petro_power:link"}
Switch desktop_petro_power_sw "Petro Desktop power" <light> (g_all_sw) {channel="mqtt:topic:openhab:desktop_petro_power:state"}
Number:ElectricPotential desktop_petro_power_ac_voltage "Petro Desktop power [%.1f V]" <energy> (g_all_ac_voltage) {channel="mqtt:topic:openhab:desktop_petro_power:ac_voltage"}
Number:ElectricCurrent desktop_petro_power_ac_current "Petro Desktop power [%.2f A]" <energy> (g_all_ac_current) {channel="mqtt:topic:openhab:desktop_petro_power:ac_current"}
Number:Power desktop_petro_power_ac_power "Petro Desktop power [%.1f W]" <energy> (g_all_ac_power) {channel="mqtt:topic:openhab:desktop_petro_power:ac_power"}
Number:Energy desktop_petro_power_ac_energy "Petro Desktop power [%.1f kWh]" <energy> (g_all_ac_energy) {channel="mqtt:topic:openhab:desktop_petro_power:ac_energy"}
// Petro Desktop PC (desktop_petro_pc_power)
// Sonoff Mini Switch / https://templates.blakadder.com/sonoff_mini.html
Switch desktop_petro_pc_power "Petro Desktop PC" <light> (g_all_sw) {channel="mqtt:topic:openhab:desktop_petro_pc_power:power"}
Number:Dimensionless desktop_petro_pc_power_rssi "Petro Desktop PC RSSI [%.0f]" <network> (g_all_rssi) {channel="mqtt:topic:openhab:desktop_petro_pc_power:rssi"}
String desktop_petro_pc_power_bssid "Petro Desktop PC BSSID [%s]" <network> (g_all_bssid) {channel="mqtt:topic:openhab:desktop_petro_pc_power:bssid"}
DateTime desktop_petro_pc_power_activity "Petro Desktop PC activity [JS(codegen-display-activity.js):%s]" <time> (g_all_activity) {channel="mqtt:topic:openhab:desktop_petro_pc_power:activity"}
// Petro Desktop Laptop (0x28dba7fffe5fa1dd)
// TRETAKT smart plug (E22x4) / https://www.zigbee2mqtt.io/devices/E22x4.html
Switch desktop_petro_laptop_power_ota "Petro Desktop Laptop OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:desktop_petro_laptop_power:ota"}
Number:Dimensionless desktop_petro_laptop_power_link "Petro Desktop Laptop LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:desktop_petro_laptop_power:link"}
Switch desktop_petro_laptop_power_sw "Petro Desktop Laptop" <light> (g_all_sw) {channel="mqtt:topic:openhab:desktop_petro_laptop_power:state"}
// Petro Desktop remote (0x000d6ffffee8357d)
// IKEA TRADFRI remote control (E1524/E1810) / https://www.zigbee2mqtt.io/devices/E1524_E1810.html
Switch desktop_petro_remote_lowbatt "Petro Desktop remote BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:desktop_petro_remote:battery_low"}
Switch desktop_petro_remote_ota "Petro Desktop remote OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:desktop_petro_remote:ota"}
Number:Dimensionless desktop_petro_remote_link "Petro Desktop remote LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:desktop_petro_remote:link"}
Number:Dimensionless desktop_petro_remote_battery "Petro Desktop remote  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:desktop_petro_remote:battery"}
// KG Hobbyraum (Work light) (0x00be44fffea95063)
// TRETAKT smart plug (E22x4) / https://www.zigbee2mqtt.io/devices/E22x4.html
Switch kg_main1_work_light_ota "KG Hobbyraum (Work light) OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:kg_main1_work_light:ota"}
Number:Dimensionless kg_main1_work_light_link "KG Hobbyraum (Work light) LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:kg_main1_work_light:link"}
Switch kg_main1_work_light_sw "KG Hobbyraum (Work light)" <light> (g_all_sw,all_light,kg_light,kg_light_hobbyraum) {channel="mqtt:topic:openhab:kg_main1_work_light:state"}
// KG Hobbyraum (Workshop) (kg_main1_light)
// Sonoff Touch EU Switch (1 gang) / https://templates.blakadder.com/sonoff_touch_eu.html
Switch kg_main1_light "KG Hobbyraum (Workshop)" <light> (g_all_sw,all_light,kg_light,kg_light_hobbyraum,kg_light_auto) {channel="mqtt:topic:openhab:kg_main1_light:power"}
Number:Dimensionless kg_main1_light_rssi "KG Hobbyraum (Workshop) RSSI [%.0f]" <network> (g_all_rssi) {channel="mqtt:topic:openhab:kg_main1_light:rssi"}
String kg_main1_light_bssid "KG Hobbyraum (Workshop) BSSID [%s]" <network> (g_all_bssid) {channel="mqtt:topic:openhab:kg_main1_light:bssid"}
DateTime kg_main1_light_activity "KG Hobbyraum (Workshop) activity [JS(codegen-display-activity.js):%s]" <time> (g_all_activity) {channel="mqtt:topic:openhab:kg_main1_light:activity"}
// KG Hobbyraum (Haupt) (kg_main2_light)
// Sonoff Touch EU Switch (1 gang) / https://templates.blakadder.com/sonoff_touch_eu.html
Switch kg_main2_light "KG Hobbyraum (Haupt)" <light> (g_all_sw,all_light,kg_light,kg_light_hobbyraum) {channel="mqtt:topic:openhab:kg_main2_light:power"}
Number:Dimensionless kg_main2_light_rssi "KG Hobbyraum (Haupt) RSSI [%.0f]" <network> (g_all_rssi) {channel="mqtt:topic:openhab:kg_main2_light:rssi"}
String kg_main2_light_bssid "KG Hobbyraum (Haupt) BSSID [%s]" <network> (g_all_bssid) {channel="mqtt:topic:openhab:kg_main2_light:bssid"}
DateTime kg_main2_light_activity "KG Hobbyraum (Haupt) activity [JS(codegen-display-activity.js):%s]" <time> (g_all_activity) {channel="mqtt:topic:openhab:kg_main2_light:activity"}
// KG Heuzung (Haupt) (kg_hz_main_light)
// Sonoff Mini Switch / https://templates.blakadder.com/sonoff_mini.html
Switch kg_hz_main_light "KG Heuzung (Haupt)" <light> (g_all_sw,all_light,kg_light) {channel="mqtt:topic:openhab:kg_hz_main_light:power", expire="1h,command=OFF" [ignoreStateUpdates="true"]}
Number:Dimensionless kg_hz_main_light_rssi "KG Heuzung (Haupt) RSSI [%.0f]" <network> (g_all_rssi) {channel="mqtt:topic:openhab:kg_hz_main_light:rssi"}
String kg_hz_main_light_bssid "KG Heuzung (Haupt) BSSID [%s]" <network> (g_all_bssid) {channel="mqtt:topic:openhab:kg_hz_main_light:bssid"}
DateTime kg_hz_main_light_activity "KG Heuzung (Haupt) activity [JS(codegen-display-activity.js):%s]" <time> (g_all_activity) {channel="mqtt:topic:openhab:kg_hz_main_light:activity"}
// Garden water (garten_wasser_sw)
// Sonoff Mini Switch / https://templates.blakadder.com/sonoff_mini.html
Switch garten_wasser_sw "Garden water" <light> (g_all_sw) {channel="mqtt:topic:openhab:garten_wasser_sw:power", expire="1h,command=OFF" [ignoreStateUpdates="true"]}
Number:Dimensionless garten_wasser_sw_rssi "Garden water RSSI [%.0f]" <network> (g_all_rssi) {channel="mqtt:topic:openhab:garten_wasser_sw:rssi"}
String garten_wasser_sw_bssid "Garden water BSSID [%s]" <network> (g_all_bssid) {channel="mqtt:topic:openhab:garten_wasser_sw:bssid"}
DateTime garten_wasser_sw_activity "Garden water activity [JS(codegen-display-activity.js):%s]" <time> (g_all_activity) {channel="mqtt:topic:openhab:garten_wasser_sw:activity"}
// Warehouse 3 leak (0x00158d0006b7aa81)
// Xiaomi Aqara water leak sensor (SJCGQ11LM) / https://www.zigbee2mqtt.io/devices/SJCGQ11LM.html
Switch garten_wasser_leak_lowbatt "Warehouse 3 leak BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:garten_wasser_leak:battery_low"}
Switch garten_wasser_leak_ota "Warehouse 3 leak OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:garten_wasser_leak:ota"}
Number:Dimensionless garten_wasser_leak_link "Warehouse 3 leak LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:garten_wasser_leak:link"}
DateTime garten_wasser_leak_activity "Warehouse 3 leak activity [JS(codegen-display-activity.js):%s]" <time> (g_all_activity) {channel="mqtt:topic:openhab:garten_wasser_leak:activity"}
Switch garten_wasser_leak_leak "Warehouse 3 leak [%s]" <flow> (g_all_leak) {channel="mqtt:topic:openhab:garten_wasser_leak:leak"}
Number:Dimensionless garten_wasser_leak_battery "Warehouse 3 leak  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:garten_wasser_leak:battery"}
// KG Lager 1 (Haupt) (kg_lager1_main_light)
// Sonoff Mini Switch / https://templates.blakadder.com/sonoff_mini.html
Switch kg_lager1_main_light "KG Lager 1 (Haupt)" <light> (g_all_sw,all_light,kg_light) {channel="mqtt:topic:openhab:kg_lager1_main_light:power", expire="1h,command=OFF" [ignoreStateUpdates="true"]}
Number:Dimensionless kg_lager1_main_light_rssi "KG Lager 1 (Haupt) RSSI [%.0f]" <network> (g_all_rssi) {channel="mqtt:topic:openhab:kg_lager1_main_light:rssi"}
String kg_lager1_main_light_bssid "KG Lager 1 (Haupt) BSSID [%s]" <network> (g_all_bssid) {channel="mqtt:topic:openhab:kg_lager1_main_light:bssid"}
DateTime kg_lager1_main_light_activity "KG Lager 1 (Haupt) activity [JS(codegen-display-activity.js):%s]" <time> (g_all_activity) {channel="mqtt:topic:openhab:kg_lager1_main_light:activity"}
// KG Lager 1 door (0x048727fffe9cc0fb)
// PARASOLL Door/Window Sensor (E2013) / https://www.zigbee2mqtt.io/devices/E2013.html
Switch kg_lager1_door_lowbatt "KG Lager 1 door BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:kg_lager1_door:battery_low"}
Switch kg_lager1_door_ota "KG Lager 1 door OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:kg_lager1_door:ota"}
Number:Dimensionless kg_lager1_door_link "KG Lager 1 door LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:kg_lager1_door:link"}
DateTime kg_lager1_door_activity "KG Lager 1 door activity [JS(codegen-display-activity.js):%s]" <time> (g_all_activity) {channel="mqtt:topic:openhab:kg_lager1_door:activity"}
Contact kg_lager1_door_contact "KG Lager 1 door [%s]" <door> (g_all_contact) {channel="mqtt:topic:openhab:kg_lager1_door:contact"}
Number:Dimensionless kg_lager1_door_battery "KG Lager 1 door  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:kg_lager1_door:battery"}
// Octoprint power (0x94ec32fffe202672)
// INSPELNING smart plug (E2206) / https://www.zigbee2mqtt.io/devices/E2206.html
Switch octoprint_power_ota "Octoprint power OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:octoprint_power:ota"}
Number:Dimensionless octoprint_power_link "Octoprint power LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:octoprint_power:link"}
Switch octoprint_power_sw "Octoprint power" <light> (g_all_sw) {channel="mqtt:topic:openhab:octoprint_power:state"}
Number:ElectricPotential octoprint_power_ac_voltage "Octoprint power [%.1f V]" <energy> (g_all_ac_voltage) {channel="mqtt:topic:openhab:octoprint_power:ac_voltage"}
Number:ElectricCurrent octoprint_power_ac_current "Octoprint power [%.2f A]" <energy> (g_all_ac_current) {channel="mqtt:topic:openhab:octoprint_power:ac_current"}
Number:Power octoprint_power_ac_power "Octoprint power [%.1f W]" <energy> (g_all_ac_power) {channel="mqtt:topic:openhab:octoprint_power:ac_power"}
Number:Energy octoprint_power_ac_energy "Octoprint power [%.1f kWh]" <energy> (g_all_ac_energy) {channel="mqtt:topic:openhab:octoprint_power:ac_energy"}
// Octoprint climate (0xa4c138234138f73a)
// TuYa Temperature & humidity sensor / https://www.zigbee2mqtt.io/devices/TS0201.html
Switch octoprint_climate_lowbatt "Octoprint climate BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:octoprint_climate:battery_low"}
Switch octoprint_climate_ota "Octoprint climate OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:octoprint_climate:ota"}
Number:Dimensionless octoprint_climate_link "Octoprint climate LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:octoprint_climate:link"}
DateTime octoprint_climate_activity "Octoprint climate activity [JS(codegen-display-activity.js):%s]" <time> (g_all_activity) {channel="mqtt:topic:openhab:octoprint_climate:activity"}
Number:Temperature octoprint_climate_temperature "Octoprint climate temp [%.0f %unit%]" <temperature> (g_all_temperature) {channel="mqtt:topic:openhab:octoprint_climate:temperature"}
Number:Dimensionless octoprint_climate_humidity "Octoprint climate humidity  [%.0f %%]" <humidity> (g_all_humidity) {channel="mqtt:topic:openhab:octoprint_climate:humidity"}
Number:Dimensionless octoprint_climate_battery "Octoprint climate  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:octoprint_climate:battery"}
// KG Lager 3 Climate (0xa4c1381155f63287)
// TuYa Temperature & humidity sensor / https://www.zigbee2mqtt.io/devices/TS0201.html
Switch lg3_climate_lowbatt "KG Lager 3 Climate BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:lg3_climate:battery_low"}
Switch lg3_climate_ota "KG Lager 3 Climate OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:lg3_climate:ota"}
Number:Dimensionless lg3_climate_link "KG Lager 3 Climate LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:lg3_climate:link"}
DateTime lg3_climate_activity "KG Lager 3 Climate activity [JS(codegen-display-activity.js):%s]" <time> (g_all_activity) {channel="mqtt:topic:openhab:lg3_climate:activity"}
Number:Temperature lg3_climate_temperature "KG Lager 3 Climate temp [%.0f %unit%]" <temperature> (g_all_temperature) {channel="mqtt:topic:openhab:lg3_climate:temperature"}
Number:Dimensionless lg3_climate_humidity "KG Lager 3 Climate humidity  [%.0f %%]" <humidity> (g_all_humidity) {channel="mqtt:topic:openhab:lg3_climate:humidity"}
Number:Dimensionless lg3_climate_battery "KG Lager 3 Climate  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:lg3_climate:battery"}
// KG Lager 3 motion (0x8c65a3fffe3dbc2c)
// VALLHORN wireless motion sensor (E2134) / https://www.zigbee2mqtt.io/devices/E2134.html
Switch kg_lager3_motion_lowbatt "KG Lager 3 motion BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:kg_lager3_motion:battery_low"}
Switch kg_lager3_motion_ota "KG Lager 3 motion OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:kg_lager3_motion:ota"}
Number:Dimensionless kg_lager3_motion_link "KG Lager 3 motion LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:kg_lager3_motion:link"}
DateTime kg_lager3_motion_activity "KG Lager 3 motion activity [JS(codegen-display-activity.js):%s]" <time> (g_all_activity) {channel="mqtt:topic:openhab:kg_lager3_motion:activity"}
Switch kg_lager3_motion_occupancy "KG Lager 3 motion [%s]" <motion> (g_all_occupancy) {channel="mqtt:topic:openhab:kg_lager3_motion:occupancy"}
Number:Illuminance kg_lager3_motion_illuminance_lux "KG Lager 3 motion  light [%d %unit%]" <sun> (g_all_illuminance_lux) {channel="mqtt:topic:openhab:kg_lager3_motion:illuminance_lux"}
Number:Dimensionless kg_lager3_motion_illuminance "KG Lager 3 motion  light raw [%d]" <sun> (g_all_illuminance) {channel="mqtt:topic:openhab:kg_lager3_motion:illuminance"}
Number:Dimensionless kg_lager3_motion_battery "KG Lager 3 motion  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:kg_lager3_motion:battery"}
// KG Lager 3 door (0xa4c138a52c4e5c19)
// TuYa Rechargeable Zigbee contact sensor (TS0203) / https://www.zigbee2mqtt.io/devices/TS0203.html#tuya-ts0203
Switch kg_lager3_door_lowbatt "KG Lager 3 door BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:kg_lager3_door:battery_low"}
Switch kg_lager3_door_ota "KG Lager 3 door OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:kg_lager3_door:ota"}
Number:Dimensionless kg_lager3_door_link "KG Lager 3 door LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:kg_lager3_door:link"}
DateTime kg_lager3_door_activity "KG Lager 3 door activity [JS(codegen-display-activity.js):%s]" <time> (g_all_activity) {channel="mqtt:topic:openhab:kg_lager3_door:activity"}
Contact kg_lager3_door_contact "KG Lager 3 door [%s]" <door> (g_all_contact) {channel="mqtt:topic:openhab:kg_lager3_door:contact"}
Number:Dimensionless kg_lager3_door_battery "KG Lager 3 door  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:kg_lager3_door:battery"}
// KG Lager 3 (Haupt) (lg3_up_light)
// Sonoff Mini Switch / https://templates.blakadder.com/sonoff_mini.html
Switch lg3_up_light "KG Lager 3 (Haupt)" <light> (g_all_sw,all_light,kg_light) {channel="mqtt:topic:openhab:lg3_up_light:power", expire="1h,command=OFF" [ignoreStateUpdates="true"]}
Number:Dimensionless lg3_up_light_rssi "KG Lager 3 (Haupt) RSSI [%.0f]" <network> (g_all_rssi) {channel="mqtt:topic:openhab:lg3_up_light:rssi"}
String lg3_up_light_bssid "KG Lager 3 (Haupt) BSSID [%s]" <network> (g_all_bssid) {channel="mqtt:topic:openhab:lg3_up_light:bssid"}
DateTime lg3_up_light_activity "KG Lager 3 (Haupt) activity [JS(codegen-display-activity.js):%s]" <time> (g_all_activity) {channel="mqtt:topic:openhab:lg3_up_light:activity"}
// Washmachine (0x70b3d52b60057a95)
// Plug socket with power function / https://www.zigbee2mqtt.io/devices/TS000F_power.html
Switch lg3_washmachine_ota "Washmachine OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:lg3_washmachine:ota"}
Number:Dimensionless lg3_washmachine_link "Washmachine LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:lg3_washmachine:link"}
Switch lg3_washmachine_sw "Washmachine" <light> (g_all_sw) {channel="mqtt:topic:openhab:lg3_washmachine:state"}
Number:ElectricPotential lg3_washmachine_ac_voltage "Washmachine [%.1f V]" <energy> (g_all_ac_voltage) {channel="mqtt:topic:openhab:lg3_washmachine:ac_voltage"}
Number:ElectricCurrent lg3_washmachine_ac_current "Washmachine [%.2f A]" <energy> (g_all_ac_current) {channel="mqtt:topic:openhab:lg3_washmachine:ac_current"}
Number:Power lg3_washmachine_ac_power "Washmachine [%.1f W]" <energy> (g_all_ac_power) {channel="mqtt:topic:openhab:lg3_washmachine:ac_power"}
Number:Energy lg3_washmachine_ac_energy "Washmachine [%.1f kWh]" <energy> (g_all_ac_energy) {channel="mqtt:topic:openhab:lg3_washmachine:ac_energy"}
// KG Lager 4 (Haupt) (kg_lager4_main_light)
// Sonoff Mini Switch / https://templates.blakadder.com/sonoff_mini.html
Switch kg_lager4_main_light "KG Lager 4 (Haupt)" <light> (g_all_sw,all_light,kg_light) {channel="mqtt:topic:openhab:kg_lager4_main_light:power", expire="1h,command=OFF" [ignoreStateUpdates="true"]}
Number:Dimensionless kg_lager4_main_light_rssi "KG Lager 4 (Haupt) RSSI [%.0f]" <network> (g_all_rssi) {channel="mqtt:topic:openhab:kg_lager4_main_light:rssi"}
String kg_lager4_main_light_bssid "KG Lager 4 (Haupt) BSSID [%s]" <network> (g_all_bssid) {channel="mqtt:topic:openhab:kg_lager4_main_light:bssid"}
DateTime kg_lager4_main_light_activity "KG Lager 4 (Haupt) activity [JS(codegen-display-activity.js):%s]" <time> (g_all_activity) {channel="mqtt:topic:openhab:kg_lager4_main_light:activity"}
// KG Lager 4 (1) (0xccccccfffedf345a)
// IKEA TRADFRI LED bulb E26/E27 806 lumen, dimmable, warm white (LED1836G9) / https://www.zigbee2mqtt.io/devices/LED1836G9.html
Dimmer kg_lager4_1_light_dim "KG Lager 4 (1) DIM [%d %%]" <light> (g_all_dim,g_dim_lager_auto) {channel="mqtt:topic:openhab:kg_lager4_1_light:dim"}
Dimmer kg_lager4_1_light_dim_fast "KG Lager 4 (1) DIM-F [%d %%]" (g_all_dim_fast) {channel="mqtt:topic:openhab:kg_lager4_1_light:dim_fast"}
Switch kg_lager4_1_light_ota "KG Lager 4 (1) OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:kg_lager4_1_light:ota"}
Number:Dimensionless kg_lager4_1_light_link "KG Lager 4 (1) LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:kg_lager4_1_light:link"}
Switch kg_lager4_1_light_sw "KG Lager 4 (1)" <light> (g_all_sw,all_light,kg_light,g_light_lager_auto) {channel="mqtt:topic:openhab:kg_lager4_1_light:state", expire="1h,command=OFF" [ignoreStateUpdates="true"]}
// KG Lager 4 (2) (0xec1bbdfffe9abfde)
// IKEA TRADFRI LED bulb E26/E27 806 lumen, dimmable, warm white (LED1836G9) / https://www.zigbee2mqtt.io/devices/LED1836G9.html
Dimmer kg_lager4_2_light_dim "KG Lager 4 (2) DIM [%d %%]" <light> (g_all_dim,g_dim_lager_auto) {channel="mqtt:topic:openhab:kg_lager4_2_light:dim"}
Dimmer kg_lager4_2_light_dim_fast "KG Lager 4 (2) DIM-F [%d %%]" (g_all_dim_fast) {channel="mqtt:topic:openhab:kg_lager4_2_light:dim_fast"}
Switch kg_lager4_2_light_ota "KG Lager 4 (2) OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:kg_lager4_2_light:ota"}
Number:Dimensionless kg_lager4_2_light_link "KG Lager 4 (2) LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:kg_lager4_2_light:link"}
Switch kg_lager4_2_light_sw "KG Lager 4 (2)" <light> (g_all_sw,all_light,kg_light,g_light_lager_auto) {channel="mqtt:topic:openhab:kg_lager4_2_light:state", expire="1h,command=OFF" [ignoreStateUpdates="true"]}
// KG Lager switch (0xb43522fffe790ebe)
// IKEA TRADFRI ON/OFF switch (E1743) / https://www.zigbee2mqtt.io/devices/E1743.html
Switch kg_lager4_switch_lowbatt "KG Lager switch BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:kg_lager4_switch:battery_low"}
Switch kg_lager4_switch_ota "KG Lager switch OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:kg_lager4_switch:ota"}
Number:Dimensionless kg_lager4_switch_link "KG Lager switch LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:kg_lager4_switch:link"}
Number:Dimensionless kg_lager4_switch_battery "KG Lager switch  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:kg_lager4_switch:battery"}
// KG Lager motion (0xbc33acfffe84ca1e)
// IKEA TRADFRI motion sensor (E1525/E1745) / https://www.zigbee2mqtt.io/devices/E1525_E1745.html
Switch kg_lager4_motion_lowbatt "KG Lager motion BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:kg_lager4_motion:battery_low"}
Switch kg_lager4_motion_ota "KG Lager motion OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:kg_lager4_motion:ota"}
Number:Dimensionless kg_lager4_motion_link "KG Lager motion LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:kg_lager4_motion:link"}
DateTime kg_lager4_motion_activity "KG Lager motion activity [JS(codegen-display-activity.js):%s]" <time> (g_all_activity) {channel="mqtt:topic:openhab:kg_lager4_motion:activity"}
Switch kg_lager4_motion_occupancy "KG Lager motion [%s]" <motion> (g_all_occupancy) {channel="mqtt:topic:openhab:kg_lager4_motion:occupancy"}
Number:Dimensionless kg_lager4_motion_battery "KG Lager motion  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:kg_lager4_motion:battery"}
// Warehouse 4 leak (0x00158d000488052c)
// Xiaomi Aqara water leak sensor (SJCGQ11LM) / https://www.zigbee2mqtt.io/devices/SJCGQ11LM.html
Switch kg_lager4_leak_lowbatt "Warehouse 4 leak BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:kg_lager4_leak:battery_low"}
Switch kg_lager4_leak_ota "Warehouse 4 leak OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:kg_lager4_leak:ota"}
Number:Dimensionless kg_lager4_leak_link "Warehouse 4 leak LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:kg_lager4_leak:link"}
DateTime kg_lager4_leak_activity "Warehouse 4 leak activity [JS(codegen-display-activity.js):%s]" <time> (g_all_activity) {channel="mqtt:topic:openhab:kg_lager4_leak:activity"}
Switch kg_lager4_leak_leak "Warehouse 4 leak [%s]" <flow> (g_all_leak) {channel="mqtt:topic:openhab:kg_lager4_leak:leak"}
Number:Dimensionless kg_lager4_leak_battery "Warehouse 4 leak  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:kg_lager4_leak:battery"}
// SRV power (0x6cfd22fffe1a1af2)
// INSPELNING smart plug (E2206) / https://www.zigbee2mqtt.io/devices/E2206.html
Switch kg_srv_power_ota "SRV power OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:kg_srv_power:ota"}
Number:Dimensionless kg_srv_power_link "SRV power LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:kg_srv_power:link"}
Switch kg_srv_power_sw "SRV power" <light> (g_all_sw) {channel="mqtt:topic:openhab:kg_srv_power:state"}
Number:ElectricPotential kg_srv_power_ac_voltage "SRV power [%.1f V]" <energy> (g_all_ac_voltage) {channel="mqtt:topic:openhab:kg_srv_power:ac_voltage"}
Number:ElectricCurrent kg_srv_power_ac_current "SRV power [%.2f A]" <energy> (g_all_ac_current) {channel="mqtt:topic:openhab:kg_srv_power:ac_current"}
Number:Power kg_srv_power_ac_power "SRV power [%.1f W]" <energy> (g_all_ac_power) {channel="mqtt:topic:openhab:kg_srv_power:ac_power"}
Number:Energy kg_srv_power_ac_energy "SRV power [%.1f kWh]" <energy> (g_all_ac_energy) {channel="mqtt:topic:openhab:kg_srv_power:ac_energy"}
// SRV leak (0x6cfd22fffe1c54d8)
// BADRING water leakage sensor (E2202) / https://www.zigbee2mqtt.io/devices/E2202.html
Switch srv_leak_lowbatt "SRV leak BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:srv_leak:battery_low"}
Switch srv_leak_ota "SRV leak OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:srv_leak:ota"}
Number:Dimensionless srv_leak_link "SRV leak LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:srv_leak:link"}
DateTime srv_leak_activity "SRV leak activity [JS(codegen-display-activity.js):%s]" <time> (g_all_activity) {channel="mqtt:topic:openhab:srv_leak:activity"}
Switch srv_leak_leak "SRV leak [%s]" <flow> (g_all_leak) {channel="mqtt:topic:openhab:srv_leak:leak"}
Number:Dimensionless srv_leak_battery "SRV leak  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:srv_leak:battery"}
// SZ heating (0x0c4314fffe63b727)
// Silvercrest radiator valve with thermostat / https://www.zigbee2mqtt.io/devices/368308_2010.html
Number:Temperature sz_heating_thermostat "SZ heating SET [%.0f %unit%]" <heatingt> (g_all_thermostat,all_hz,all_hz_auto,sz_hz) {channel="mqtt:topic:openhab:sz_heating:thermostat"}
String sz_heating_thermostat_mode "SZ heating MODE [%s]" <heatingt> (g_all_thermostat_mode) {channel="mqtt:topic:openhab:sz_heating:thermostat_mode"}
String sz_heating_thermostat_preset "SZ heating PRESET [%s]" <heatingt> (g_all_thermostat_preset) {channel="mqtt:topic:openhab:sz_heating:thermostat_preset"}
Switch sz_heating_thermostat_enable "SZ heating ENABLE [%s]" <heatingt> (g_all_thermostat_enable,all_hz_enable,sz_hz_enable) {channel="mqtt:topic:openhab:sz_heating:thermostat_enable"}
Number:Temperature sz_heating_local_temperature_calibration "SZ heating CAL [%.0f %unit%]" <heatingt> (g_all_local_temperature_calibration) {channel="mqtt:topic:openhab:sz_heating:local_temperature_calibration"}
Switch sz_heating_lowbatt "SZ heating BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:sz_heating:battery_low"}
Switch sz_heating_ota "SZ heating OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:sz_heating:ota"}
Number:Dimensionless sz_heating_link "SZ heating LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:sz_heating:link"}
DateTime sz_heating_activity "SZ heating activity [JS(codegen-display-activity.js):%s]" <time> (g_all_activity) {channel="mqtt:topic:openhab:sz_heating:activity"}
Number:Temperature sz_heating_local_temperature "SZ heating temp [%.0f %unit%]" <local_temperature> (g_all_local_temperature) {channel="mqtt:topic:openhab:sz_heating:local_temperature"}
Number:ElectricPotential sz_heating_battery_voltage "SZ heating [%.0f mV]" <energy> (g_all_battery_voltage) {channel="mqtt:topic:openhab:sz_heating:battery_voltage"}
// KS heating (0x0c4314fffe62f090)
// Silvercrest radiator valve with thermostat / https://www.zigbee2mqtt.io/devices/368308_2010.html
Number:Temperature ks_heating_thermostat "KS heating SET [%.0f %unit%]" <heatingt> (g_all_thermostat,all_hz,all_hz_auto,ks_hz) {channel="mqtt:topic:openhab:ks_heating:thermostat"}
String ks_heating_thermostat_mode "KS heating MODE [%s]" <heatingt> (g_all_thermostat_mode) {channel="mqtt:topic:openhab:ks_heating:thermostat_mode"}
String ks_heating_thermostat_preset "KS heating PRESET [%s]" <heatingt> (g_all_thermostat_preset) {channel="mqtt:topic:openhab:ks_heating:thermostat_preset"}
Switch ks_heating_thermostat_enable "KS heating ENABLE [%s]" <heatingt> (g_all_thermostat_enable,all_hz_enable,ks_hz_enable) {channel="mqtt:topic:openhab:ks_heating:thermostat_enable"}
Number:Temperature ks_heating_local_temperature_calibration "KS heating CAL [%.0f %unit%]" <heatingt> (g_all_local_temperature_calibration) {channel="mqtt:topic:openhab:ks_heating:local_temperature_calibration"}
Switch ks_heating_lowbatt "KS heating BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:ks_heating:battery_low"}
Switch ks_heating_ota "KS heating OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:ks_heating:ota"}
Number:Dimensionless ks_heating_link "KS heating LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:ks_heating:link"}
DateTime ks_heating_activity "KS heating activity [JS(codegen-display-activity.js):%s]" <time> (g_all_activity) {channel="mqtt:topic:openhab:ks_heating:activity"}
Number:Temperature ks_heating_local_temperature "KS heating temp [%.0f %unit%]" <local_temperature> (g_all_local_temperature) {channel="mqtt:topic:openhab:ks_heating:local_temperature"}
Number:ElectricPotential ks_heating_battery_voltage "KS heating [%.0f mV]" <energy> (g_all_battery_voltage) {channel="mqtt:topic:openhab:ks_heating:battery_voltage"}
// KU heating (0x0c4314fffe73bf1f)
// Silvercrest radiator valve with thermostat / https://www.zigbee2mqtt.io/devices/368308_2010.html
Number:Temperature ku_heating_thermostat "KU heating SET [%.0f %unit%]" <heatingt> (g_all_thermostat,all_hz,all_hz_auto,ku_hz) {channel="mqtt:topic:openhab:ku_heating:thermostat"}
String ku_heating_thermostat_mode "KU heating MODE [%s]" <heatingt> (g_all_thermostat_mode) {channel="mqtt:topic:openhab:ku_heating:thermostat_mode"}
String ku_heating_thermostat_preset "KU heating PRESET [%s]" <heatingt> (g_all_thermostat_preset) {channel="mqtt:topic:openhab:ku_heating:thermostat_preset"}
Switch ku_heating_thermostat_enable "KU heating ENABLE [%s]" <heatingt> (g_all_thermostat_enable,all_hz_enable,ku_hz_enable) {channel="mqtt:topic:openhab:ku_heating:thermostat_enable"}
Number:Temperature ku_heating_local_temperature_calibration "KU heating CAL [%.0f %unit%]" <heatingt> (g_all_local_temperature_calibration) {channel="mqtt:topic:openhab:ku_heating:local_temperature_calibration"}
Switch ku_heating_lowbatt "KU heating BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:ku_heating:battery_low"}
Switch ku_heating_ota "KU heating OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:ku_heating:ota"}
Number:Dimensionless ku_heating_link "KU heating LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:ku_heating:link"}
DateTime ku_heating_activity "KU heating activity [JS(codegen-display-activity.js):%s]" <time> (g_all_activity) {channel="mqtt:topic:openhab:ku_heating:activity"}
Number:Temperature ku_heating_local_temperature "KU heating temp [%.0f %unit%]" <local_temperature> (g_all_local_temperature) {channel="mqtt:topic:openhab:ku_heating:local_temperature"}
Number:ElectricPotential ku_heating_battery_voltage "KU heating [%.0f mV]" <energy> (g_all_battery_voltage) {channel="mqtt:topic:openhab:ku_heating:battery_voltage"}
// WZ heating (0x0c4314fffe73c43f)
// Silvercrest radiator valve with thermostat / https://www.zigbee2mqtt.io/devices/368308_2010.html
Number:Temperature wz_heating_thermostat "WZ heating SET [%.0f %unit%]" <heatingt> (g_all_thermostat,all_hz,all_hz_auto,wz_hz) {channel="mqtt:topic:openhab:wz_heating:thermostat"}
String wz_heating_thermostat_mode "WZ heating MODE [%s]" <heatingt> (g_all_thermostat_mode) {channel="mqtt:topic:openhab:wz_heating:thermostat_mode"}
String wz_heating_thermostat_preset "WZ heating PRESET [%s]" <heatingt> (g_all_thermostat_preset) {channel="mqtt:topic:openhab:wz_heating:thermostat_preset"}
Switch wz_heating_thermostat_enable "WZ heating ENABLE [%s]" <heatingt> (g_all_thermostat_enable,all_hz_enable,sz_hz_enable) {channel="mqtt:topic:openhab:wz_heating:thermostat_enable"}
Number:Temperature wz_heating_local_temperature_calibration "WZ heating CAL [%.0f %unit%]" <heatingt> (g_all_local_temperature_calibration) {channel="mqtt:topic:openhab:wz_heating:local_temperature_calibration"}
Switch wz_heating_lowbatt "WZ heating BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:wz_heating:battery_low"}
Switch wz_heating_ota "WZ heating OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:wz_heating:ota"}
Number:Dimensionless wz_heating_link "WZ heating LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:wz_heating:link"}
DateTime wz_heating_activity "WZ heating activity [JS(codegen-display-activity.js):%s]" <time> (g_all_activity) {channel="mqtt:topic:openhab:wz_heating:activity"}
Number:Temperature wz_heating_local_temperature "WZ heating temp [%.0f %unit%]" <local_temperature> (g_all_local_temperature) {channel="mqtt:topic:openhab:wz_heating:local_temperature"}
Number:ElectricPotential wz_heating_battery_voltage "WZ heating [%.0f mV]" <energy> (g_all_battery_voltage) {channel="mqtt:topic:openhab:wz_heating:battery_voltage"}
// KG heating (0x0c4314fffe5c6913)
// Silvercrest radiator valve with thermostat / https://www.zigbee2mqtt.io/devices/368308_2010.html
Number:Temperature kg_heating_thermostat "KG heating SET [%.0f %unit%]" <heatingt> (g_all_thermostat,all_hz,all_hz_auto,kg_hz) {channel="mqtt:topic:openhab:kg_heating:thermostat"}
String kg_heating_thermostat_mode "KG heating MODE [%s]" <heatingt> (g_all_thermostat_mode) {channel="mqtt:topic:openhab:kg_heating:thermostat_mode"}
String kg_heating_thermostat_preset "KG heating PRESET [%s]" <heatingt> (g_all_thermostat_preset) {channel="mqtt:topic:openhab:kg_heating:thermostat_preset"}
Switch kg_heating_thermostat_enable "KG heating ENABLE [%s]" <heatingt> (g_all_thermostat_enable,all_hz_enable,kg_hz_enable) {channel="mqtt:topic:openhab:kg_heating:thermostat_enable"}
Number:Temperature kg_heating_local_temperature_calibration "KG heating CAL [%.0f %unit%]" <heatingt> (g_all_local_temperature_calibration) {channel="mqtt:topic:openhab:kg_heating:local_temperature_calibration"}
Switch kg_heating_lowbatt "KG heating BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:kg_heating:battery_low"}
Switch kg_heating_ota "KG heating OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:kg_heating:ota"}
Number:Dimensionless kg_heating_link "KG heating LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:kg_heating:link"}
DateTime kg_heating_activity "KG heating activity [JS(codegen-display-activity.js):%s]" <time> (g_all_activity) {channel="mqtt:topic:openhab:kg_heating:activity"}
Number:Temperature kg_heating_local_temperature "KG heating temp [%.0f %unit%]" <local_temperature> (g_all_local_temperature) {channel="mqtt:topic:openhab:kg_heating:local_temperature"}
Number:ElectricPotential kg_heating_battery_voltage "KG heating [%.0f mV]" <energy> (g_all_battery_voltage) {channel="mqtt:topic:openhab:kg_heating:battery_voltage"}
// SZ Shutter (0xa4c138fd0fd1c168)
// Curtains module (1 gang) / https://www.zigbee2mqtt.io/devices/TS130F.html
Switch sz_shutter_ota "SZ Shutter OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:sz_shutter:ota"}
Number:Dimensionless sz_shutter_link "SZ Shutter LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:sz_shutter:link"}
String sz_shutter_cmd "SZ Shutter [%s]" <blinds> (g_all_cmd,blinds_cmd,sz_blinds_cmd) {channel="mqtt:topic:openhab:sz_shutter:state"}
String sz_shutter_mov "SZ Shutter movement" <blinds> {channel="mqtt:topic:openhab:sz_shutter:moving"}
Dimmer sz_shutter_pos "SZ Shutter [%d %%]" <blinds> (g_all_pos,blinds_pos,sz_blinds_pos) {channel="mqtt:topic:openhab:sz_shutter:position"}
Switch sz_shutter_cal "SZ Shutter cal [%s]" <light> (g_all_cal) {channel="mqtt:topic:openhab:sz_shutter:calibration"}
// KS Blinds (0xa4c13878cea182ad)
// Curtains module (2 gang) / https://www.zigbee2mqtt.io/devices/TS130F_dual.html
Switch ks_shutter_ota "KS Blinds OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:ks_shutter:ota"}
Number:Dimensionless ks_shutter_link "KS Blinds LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:ks_shutter:link"}
String ks_shutter_1_cmd "KS Shutter (Main) [%s]" <blinds> (g_all_cmd,blinds_cmd,ks_blinds_cmd) {channel="mqtt:topic:openhab:ks_shutter:state_left"}
String ks_shutter_1_mov "KS Shutter (Main) movement" <blinds> {channel="mqtt:topic:openhab:ks_shutter:moving_left"}
Dimmer ks_shutter_1_pos "KS Shutter (Main) [%d %%]" <blinds> (g_all_pos,blinds_pos,ks_blinds_pos) {channel="mqtt:topic:openhab:ks_shutter:position_left"}
Switch ks_shutter_1_cal "KS Shutter (Main) cal [%s]" <light> (g_all_cal) {channel="mqtt:topic:openhab:ks_shutter:calibration_left"}
String ks_shutter_2_cmd "KS Shutter (Side) [%s]" <blinds> (g_all_cmd,blinds_cmd,ks_blinds_cmd) {channel="mqtt:topic:openhab:ks_shutter:state_right"}
String ks_shutter_2_mov "KS Shutter (Side) movement" <blinds> {channel="mqtt:topic:openhab:ks_shutter:moving_right"}
Dimmer ks_shutter_2_pos "KS Shutter (Side) [%d %%]" <blinds> (g_all_pos,blinds_pos,ks_blinds_pos) {channel="mqtt:topic:openhab:ks_shutter:position_right"}
Switch ks_shutter_2_cal "KS Shutter (Side) cal [%s]" <light> (g_all_cal) {channel="mqtt:topic:openhab:ks_shutter:calibration_right"}
// KU Shutter (0xa4c138018d7a55bf)
// Curtains module (1 gang) / https://www.zigbee2mqtt.io/devices/TS130F.html
Switch ku_shutter_ota "KU Shutter OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:ku_shutter:ota"}
Number:Dimensionless ku_shutter_link "KU Shutter LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:ku_shutter:link"}
String ku_shutter_cmd "KU Shutter [%s]" <blinds> (g_all_cmd,blinds_cmd,ku_blinds_cmd) {channel="mqtt:topic:openhab:ku_shutter:state"}
String ku_shutter_mov "KU Shutter movement" <blinds> {channel="mqtt:topic:openhab:ku_shutter:moving"}
Dimmer ku_shutter_pos "KU Shutter [%d %%]" <blinds> (g_all_pos,blinds_pos,ku_blinds_pos) {channel="mqtt:topic:openhab:ku_shutter:position"}
Switch ku_shutter_cal "KU Shutter cal [%s]" <light> (g_all_cal) {channel="mqtt:topic:openhab:ku_shutter:calibration"}
// Ext backup power supply (0x1cc089fffe13a7e3)
// INSPELNING smart plug (E2206) / https://www.zigbee2mqtt.io/devices/E2206.html
Switch backup_ext_power_ota "Ext backup power supply OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:backup_ext_power:ota"}
Number:Dimensionless backup_ext_power_link "Ext backup power supply LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:backup_ext_power:link"}
Switch backup_ext_power_sw "Ext backup power supply" <light> (g_all_sw) {channel="mqtt:topic:openhab:backup_ext_power:state"}
Number:ElectricPotential backup_ext_power_ac_voltage "Ext backup power supply [%.1f V]" <energy> (g_all_ac_voltage) {channel="mqtt:topic:openhab:backup_ext_power:ac_voltage"}
Number:ElectricCurrent backup_ext_power_ac_current "Ext backup power supply [%.2f A]" <energy> (g_all_ac_current) {channel="mqtt:topic:openhab:backup_ext_power:ac_current"}
Number:Power backup_ext_power_ac_power "Ext backup power supply [%.1f W]" <energy> (g_all_ac_power) {channel="mqtt:topic:openhab:backup_ext_power:ac_power"}
Number:Energy backup_ext_power_ac_energy "Ext backup power supply [%.1f kWh]" <energy> (g_all_ac_energy) {channel="mqtt:topic:openhab:backup_ext_power:ac_energy"}
// Main power (0x0c2a6ffffebf2819)
// Smart energy monitor for 3P+N system / https://www.zigbee2mqtt.io/devices/SPM02V2.5.html#tuya-spm02v2.5
Switch main_power_ota "Main power OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:main_power:ota"}
Number:Dimensionless main_power_link "Main power LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:main_power:link"}
Number:Frequency main_power_ac_frequency "Main power freq [%d Hz]" <energy> (g_all_ac_frequency) {channel="mqtt:topic:openhab:main_power:ac_frequency"}
Number:Dimensionless main_power_ac_power_factor "Main power factor [%d %%]" <energy> (g_all_ac_power_factor) {channel="mqtt:topic:openhab:main_power:ac_power_factor"}
Number:ElectricPotential main_power_ac_voltage_a "Main power A [%.1f V]" <energy> (g_all_ac_voltage_a) {channel="mqtt:topic:openhab:main_power:ac_voltage_a"}
Number:ElectricPotential main_power_ac_voltage_b "Main power B [%.1f V]" <energy> (g_all_ac_voltage_b) {channel="mqtt:topic:openhab:main_power:ac_voltage_b"}
Number:ElectricPotential main_power_ac_voltage_c "Main power C [%.1f V]" <energy> (g_all_ac_voltage_c) {channel="mqtt:topic:openhab:main_power:ac_voltage_c"}
Number:ElectricCurrent main_power_ac_current_a "Main power A [%.2f A]" <energy> (g_all_ac_current_a) {channel="mqtt:topic:openhab:main_power:ac_current_a"}
Number:ElectricCurrent main_power_ac_current_b "Main power B [%.2f A]" <energy> (g_all_ac_current_b) {channel="mqtt:topic:openhab:main_power:ac_current_b"}
Number:ElectricCurrent main_power_ac_current_c "Main power C [%.2f A]" <energy> (g_all_ac_current_c) {channel="mqtt:topic:openhab:main_power:ac_current_c"}
Number:Power main_power_ac_power "Main power [%.1f W]" <energy> (g_all_ac_power) {channel="mqtt:topic:openhab:main_power:ac_power"}
Number:Power main_power_ac_power_a "Main power A [%.1f W]" <energy> (g_all_ac_power_a) {channel="mqtt:topic:openhab:main_power:ac_power_a"}
Number:Power main_power_ac_power_b "Main power B [%.1f W]" <energy> (g_all_ac_power_b) {channel="mqtt:topic:openhab:main_power:ac_power_b"}
Number:Power main_power_ac_power_c "Main power C [%.1f W]" <energy> (g_all_ac_power_c) {channel="mqtt:topic:openhab:main_power:ac_power_c"}
Number:Energy main_power_ac_energy "Main power [%.1f kWh]" <energy> (g_all_ac_energy) {channel="mqtt:topic:openhab:main_power:ac_energy"}
// Mouse trap KU (0x048727fffea43740)
// PARASOLL Door/Window Sensor (E2013) / https://www.zigbee2mqtt.io/devices/E2013.html
Switch mouse_trap_1_lowbatt "Mouse trap KU BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:mouse_trap_1:battery_low"}
Switch mouse_trap_1_ota "Mouse trap KU OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:mouse_trap_1:ota"}
Number:Dimensionless mouse_trap_1_link "Mouse trap KU LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:mouse_trap_1:link"}
DateTime mouse_trap_1_activity "Mouse trap KU activity [JS(codegen-display-activity.js):%s]" <time> (g_all_activity) {channel="mqtt:topic:openhab:mouse_trap_1:activity"}
Contact mouse_trap_1_contact "Mouse trap KU [MAP(mouse_trap.map):%s]" <door> (mouse_trap) {channel="mqtt:topic:openhab:mouse_trap_1:contact"}
Number:Dimensionless mouse_trap_1_battery "Mouse trap KU  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:mouse_trap_1:battery"}
// Mouse trap KG (0x048727fffe9d1259)
// PARASOLL Door/Window Sensor (E2013) / https://www.zigbee2mqtt.io/devices/E2013.html
Switch mouse_trap_2_lowbatt "Mouse trap KG BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:mouse_trap_2:battery_low"}
Switch mouse_trap_2_ota "Mouse trap KG OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:mouse_trap_2:ota"}
Number:Dimensionless mouse_trap_2_link "Mouse trap KG LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:mouse_trap_2:link"}
DateTime mouse_trap_2_activity "Mouse trap KG activity [JS(codegen-display-activity.js):%s]" <time> (g_all_activity) {channel="mqtt:topic:openhab:mouse_trap_2:activity"}
Contact mouse_trap_2_contact "Mouse trap KG [MAP(mouse_trap.map):%s]" <door> (mouse_trap) {channel="mqtt:topic:openhab:mouse_trap_2:contact"}
Number:Dimensionless mouse_trap_2_battery "Mouse trap KG  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:mouse_trap_2:battery"}
// Mouse trap SZ (0x048727fffe5d58e3)
// PARASOLL Door/Window Sensor (E2013) / https://www.zigbee2mqtt.io/devices/E2013.html
Switch mouse_trap_3_lowbatt "Mouse trap SZ BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:mouse_trap_3:battery_low"}
Switch mouse_trap_3_ota "Mouse trap SZ OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:mouse_trap_3:ota"}
Number:Dimensionless mouse_trap_3_link "Mouse trap SZ LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:mouse_trap_3:link"}
DateTime mouse_trap_3_activity "Mouse trap SZ activity [JS(codegen-display-activity.js):%s]" <time> (g_all_activity) {channel="mqtt:topic:openhab:mouse_trap_3:activity"}
Contact mouse_trap_3_contact "Mouse trap SZ [MAP(mouse_trap.map):%s]" <door> (mouse_trap) {channel="mqtt:topic:openhab:mouse_trap_3:contact"}
Number:Dimensionless mouse_trap_3_battery "Mouse trap SZ  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:mouse_trap_3:battery"}
// Mouse trap FL (0x048727fffe5d07db)
// PARASOLL Door/Window Sensor (E2013) / https://www.zigbee2mqtt.io/devices/E2013.html
Switch mouse_trap_4_lowbatt "Mouse trap FL BAT [MAP(codegen-lowbat.map):%s]" <lowbattery> (g_all_lowbattery) {channel="mqtt:topic:openhab:mouse_trap_4:battery_low"}
Switch mouse_trap_4_ota "Mouse trap FL OTA [%s]" <fire> (g_all_ota) {channel="mqtt:topic:openhab:mouse_trap_4:ota"}
Number:Dimensionless mouse_trap_4_link "Mouse trap FL LINK [%d]" <linkz> (g_all_link) {channel="mqtt:topic:openhab:mouse_trap_4:link"}
DateTime mouse_trap_4_activity "Mouse trap FL activity [JS(codegen-display-activity.js):%s]" <time> (g_all_activity) {channel="mqtt:topic:openhab:mouse_trap_4:activity"}
Contact mouse_trap_4_contact "Mouse trap FL [MAP(mouse_trap.map):%s]" <door> (mouse_trap) {channel="mqtt:topic:openhab:mouse_trap_4:contact"}
Number:Dimensionless mouse_trap_4_battery "Mouse trap FL  BAT [%d %%]" <battery> (g_all_battery) {channel="mqtt:topic:openhab:mouse_trap_4:battery"}
