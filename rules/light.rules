rule "Light safe switch"
when
	Time cron "0 00 01,02,03,04 ? * *"
then
	logWarn("light", "Set safe off")
	g_light_all.sendCommand(OFF)
end

rule "Treppe licht OBEN btn"
when
    Channel "mqtt:topic:openhab:ikea-sw-92f3:click" triggered
    or
    Channel "mqtt:topic:openhab:ikea-sw-e111:click" triggered
then
	var state = receivedEvent.getEvent()
    switch(state) {
        case "on": {
            g_light_kg.sendCommand(ON)
        }
        case "off": {
            g_light_kg.sendCommand(OFF)
        }
    }
end

rule "Treppe licht UNTEN btn"
when
    Channel "mqtt:topic:openhab:mi-button-12b9:click" triggered
then
	var state = receivedEvent.getEvent()
    switch(state) {
        case "single": {
            if (g_light_treppe.state == ON) {
                g_light_treppe.sendCommand(OFF)
            } else {
                g_light_treppe.sendCommand(ON)
            }
        }
        case "long": {
            if (g_light_kg.state == ON) {
                g_light_kg.sendCommand(OFF)
            } else {
                g_light_kg.sendCommand(ON)
            }
        }
    }
end

rule "KG remote sw (desktop)"
when
    Channel "mqtt:topic:openhab:ikea-remote-357d:click" triggered
then
	var state = receivedEvent.getEvent()
    switch(state) {
        case "toggle": {
            if (ikea_led_ef9d_sw.state == ON) { ikea_led_ef9d_sw.sendCommand(OFF) } else { ikea_led_ef9d_sw.sendCommand(ON) }
        }
        case "arrow_right_click": {
            ikea_led_ef9d_brightness.sendCommand(100)
        }
        case "arrow_left_click": {
            ikea_led_ef9d_brightness.sendCommand(0)
        }
        case "brightness_down_click": {
            g_light_kg_ohne_desktop.sendCommand(OFF)
        }
        case "brightness_up_click": {
            g_light_kg_ohne_desktop.sendCommand(ON)
        }
    }
end

rule "SZ remote sw"
when
    Channel "mqtt:topic:openhab:ikea-remote-2305:click" triggered
then
	var state = receivedEvent.getEvent()
    switch(state) {
        case "toggle": {
            g_light_all.sendCommand(OFF)
        }
        case "brightness_down_click": {
            if (0 == (g_light_eg_sz_night_brightness.state as Number) && ON == g_light_eg_sz_night.state) {
                g_light_eg_sz_night.sendCommand(OFF)
            } else {
                g_light_eg_sz_night_brightness.sendCommand(0)
            }
        }
        case "brightness_up_click": {
            if (100 == (g_light_eg_sz_night_brightness.state as Number) && ON == g_light_eg_sz_night.state) {
                g_light_eg_sz_night.sendCommand(OFF)
            } else {
                g_light_eg_sz_night_brightness.sendCommand(100)
            }
        }
        case "arrow_right_click": {
            g_light_eg_sz_night.sendCommand(OFF)
            ikea_led_007b_brightness.sendCommand(0)
        }
        case "arrow_left_click": {
            if (snf_eg_fs.state == ON) { snf_eg_fs.sendCommand(OFF) } else { snf_eg_fs.sendCommand(ON) }
        }
    }
end

rule "BZ force both lights work together 1"
when
    Item snf_eg_bz_1 changed
then
    g_light_eg_bz.members.forEach [s | s.sendCommand(snf_eg_bz_1.state) ]
end

rule "BZ force both lights work together 2"
when
    Item snf_eg_bz_2 changed
then
    g_light_eg_bz.members.forEach [s | s.sendCommand(snf_eg_bz_2.state) ]
end
