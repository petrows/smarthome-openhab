rule "Yeelight 1 power"
when
    Item yeeSwitch changed
then
	if (yeeSwitch.state == ON) {
		executeCommandLine("yeecli --ip mi-lamp-1.pws turn on")
	} else {
		executeCommandLine("yeecli --ip mi-lamp-1.pws turn off")
	}
end

rule "Yeelight 1 brightness"
when
    Item yeeBrightness changed
then
	yeeSwitch.sendCommand(ON)
	executeCommandLine("yeecli --ip mi-lamp-1.pws brightness " + (yeeBrightness.state as DecimalType).intValue)
end

rule "Yeelight 1 color temp"
when
    Item yeeColorTemp changed
then
	yeeSwitch.sendCommand(ON)
	executeCommandLine("yeecli --ip mi-lamp-1.pws temperature " + (yeeColorTemp.state as DecimalType).intValue)
end

rule "Yeelight 1 color"
when
    Item yeeColor changed
then
	logInfo("LED", "Color changing: " + yeeColor.state)
		
	var hsbValue = yeeColor.state as HSBType
	
	var redValue   = String.format("%02X", (hsbValue.red.floatValue * 2.55) as int)
	var greenValue = String.format("%02X", (hsbValue.green.floatValue * 2.55) as int)
	var blueValue  = String.format("%02X", (hsbValue.blue.floatValue * 2.55) as int)
	
	executeCommandLine("yeecli --ip mi-lamp-1.pws rgb " + redValue + greenValue + blueValue)
	
	val brightness = hsbValue.brightness.intValue
	yeeBrightness.sendCommand(brightness)
end

rule "Yeelight 2 power"
when
    Item yel_petro_ds_sw changed
then
	executeCommandLine("yeecli --ip mi-lamp-2.pws -e smooth -d 500 turn " + yel_petro_ds_sw.state.toString.toLowerCase)
end

rule "Yeelight 2 brightness"
when
    Item yel_petro_ds_brightness changed
then
	yel_petro_ds_sw.sendCommand(ON)
	executeCommandLine("yeecli --ip mi-lamp-2.pws -e smooth -d 500 brightness " + (yel_petro_ds_brightness.state as DecimalType).intValue)
end

rule "Yeelight 1 color temp"
when
    Item yel_petro_ds_temp changed
then
	yel_petro_ds_sw.sendCommand(ON)
	executeCommandLine("yeecli --ip mi-lamp-2.pws -e smooth -d 500 temperature " + (yel_petro_ds_temp.state as DecimalType).intValue)
end

