rule "Robot custom command"
when
	Item robot_custom_command received command
then
	logWarn("MI Robot", "Custom command: " + receivedCommand)

    switch (receivedCommand) {
        case "FIND": {
            robot_actions.sendCommand("custom-find-robot")
        }
    }
    // Reset button status to empty
    robot_custom_command.postUpdate("")
end

rule "Robot error"
when
	Item robot_fault changed
then
    val error_text = transform("MAP", "eve_fault.map", robot_fault.state.toString)

	sendBroadcastNotification("Robot error: " + error_text)
	logWarn("robot", "Robot error: " + error_text)

    val telegramAction = getActions("telegram","telegram:telegramBot:PWS_Notification")
    telegramAction.sendTelegram("Robot error: " + error_text)
end

